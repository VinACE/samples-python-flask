var path = require("path");

/**
 * GET /assets/loginpage/css/loginpage-theme.b2539e43c793daf42939a0acff530300.css
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: text/css,* / *;q=0.1
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0nMswYIoWShS9ivqmZyLvKg; t=default; JSESSIONID=6B317984A99E03B2418544BF0D76D230
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"40891-1480897665000\"");
  res.setHeader("last-modified", "Mon, 05 Dec 2016 00:27:45 GMT");
  res.setHeader("content-type", "text/css");
  res.setHeader("content-length", "40891");
  res.setHeader("date", "Fri, 09 Dec 2016 09:22:29 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("OWMwMjc1NmQucG5nIik7CiAgfQp9CiNva3RhLXNpZ24taW4gLm1mYS1vbnByZW0tMzAsCiNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtb25wcmVtIHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKHNtYWxsKTogT25QcmVtIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL29ucHJlbV8zOHgzOC5iYmY2YzJiOTJkNTRiYTM4Y2MwYWYxNjZjODMxMDY3Ny5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLW9ucHJlbS0zMCwKICAjb2t0YS1zaWduLWluIC5lbnJvbGwtZmFjdG9yLXJvdyAubWZhLW9ucHJlbSB7CiAgICAvKiAtLSBGYWN0b3IgSWNvbnMgKGhpZ2ggRFBJKTogT25QcmVtIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvb25wcmVtX2ljb0AyeC41Njg5MTk2ZjVhOTkyYjI5YjQ0MTQwYzBhYmU2NGViMy5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLW9ucHJlbSB7CiAgLyogLS0gRmFjdG9yIEljb25zIChsYXJnZSk6IE9uUHJlbSAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS9vbnByZW1fNzB4NzAuNWUwNTUyNmI4NGRlY2I3MzVhNGM0NmM1NTJlZWI3M2IucG5nIik7Cn0KQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgewogICNva3RhLXNpZ24taW4gLm1mYS1vbnByZW0gewogICAgLyogLS0gRmFjdG9yIEljb25zIChoaWdoIERQSSk6IE9uUHJlbSAtLSAqLwogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL29ucHJlbUAyeC4zNzcyYjY0OTlkNTYwYjMzZjJmYzU2OGM4YjdmODcxMi5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLWR1by0zMCwKI29rdGEtc2lnbi1pbiAuZW5yb2xsLWZhY3Rvci1yb3cgLm1mYS1kdW8gewogIC8qIC0tIEZhY3RvciBJY29ucyAoc21hbGwpOiBEVU8gLS0gKi8KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvZHVvXzM4eDM4Ljk5NDRjMDk5ZmEyMzI3ZTllNGRhMmIzM2M5NTE2NTkzLnBuZyIpOwp9CkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHsKICAjb2t0YS1zaWduLWluIC5tZmEtZHVvLTMwLAogICNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtZHVvIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBEVU8gLS0gKi8KICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS9kdW9faWNvQDJ4LmY2NmVkYjdlZDRkYmE3YzIwYzgxZTAwMDI2OTQ0ZjdiLnBuZyIpOwogIH0KfQojb2t0YS1zaWduLWluIC5tZmEtZHVvIHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKGxhcmdlKTogRFVPIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL2R1b183MHg3MC5lMmJhZjY1ZDk3YTVkNmYyYzA4M2UxNGQ0NzE3Y2NmNC5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLWR1byB7CiAgICAvKiAtLSBGYWN0b3IgSWNvbnMgKGhpZ2ggRFBJKTogRFVPIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvZHVvQDJ4LjU4OTQ3MTJiY2M0MDY0YmI0Njg2OTAyZmVlZDc2MzNkLnBuZyIpOwogIH0KfQojb2t0YS1zaWduLWluIC5tZmEteXViaWtleS0zMCwKI29rdGEtc2lnbi1pbiAuZW5yb2xsLWZhY3Rvci1yb3cgLm1mYS15dWJpa2V5IHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKHNtYWxsKTogWXViaWtleSAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS95dWJpY29fMzh4MzguODMwNmIxYjk3MGQ1ODI3ODgwYmY2MDgyNjIzOTU5ODQucG5nIik7Cn0KQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgewogICNva3RhLXNpZ24taW4gLm1mYS15dWJpa2V5LTMwLAogICNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEteXViaWtleSB7CiAgICAvKiAtLSBGYWN0b3IgSWNvbnMgKGhpZ2ggRFBJKTogWXViaWtleSAtLSAqLwogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3l1Ymljb19pY29AMnguODlhMDNhMDBhMTYxMjExODJmODBlN2ZlYzI1NDhmMWUucG5nIik7CiAgfQp9CiNva3RhLXNpZ24taW4gLm1mYS15dWJpa2V5IHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKGxhcmdlKTogWXViaWtleSAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS95dWJpY29fNzB4NzAuN2YxYmZjZWFjMzg4ZGY1ZGRiODViNGNjMzQyMTkyNjYucG5nIik7Cn0KQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgewogICNva3RhLXNpZ24taW4gLm1mYS15dWJpa2V5IHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBZdWJpa2V5IC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEveXViaWNvQDJ4LjllYWE2MWFhMWRjZDgzZDM0M2FiNTIzZDI2MjgyZWJlLnBuZyIpOwogIH0KfQojb2t0YS1zaWduLWluIC5tZmEtc21zLTMwLAojb2t0YS1zaWduLWluIC5lbnJvbGwtZmFjdG9yLXJvdyAubWZhLW9rdGEtc21zIHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKHNtYWxsKTogU01TIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3Ntc18zOHgzOC40NjYxZmQ2Y2NhZGVkM2E2OGIxODAzYWMzMmIyNjU5Mi5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLXNtcy0zMCwKICAjb2t0YS1zaWduLWluIC5lbnJvbGwtZmFjdG9yLXJvdyAubWZhLW9rdGEtc21zIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBTTVMgLS0gKi8KICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS9zbXNfaWNvQDJ4LjIyZmY3YjFmMzg4NTMxN2Y3M2Y4MWUwZTUzNDk2NmFhLnBuZyIpOwogIH0KfQojb2t0YS1zaWduLWluIC5tZmEtb2t0YS1zbXMgewogIC8qIC0tIEZhY3RvciBJY29ucyAobGFyZ2UpOiBTTVMgLS0gKi8KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvc21zXzcweDcwLjMwZTJhMDUwOTZjMTE5MmZmMWY5NmNmMTFhY2ZkZjE3LnBuZyIpOwp9CkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHsKICAjb2t0YS1zaWduLWluIC5tZmEtb2t0YS1zbXMgewogICAgLyogLS0gRmFjdG9yIEljb25zIChoaWdoIERQSSk6IFNNUyAtLSAqLwogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3Ntc0AyeC44MTdjODY4ZjJjOWIzYTJlYjAwYjdkODJmZGMxNmQ1ZS5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLWNhbGwtMzAsCiNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtb2t0YS1jYWxsIHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKHNtYWxsKTogQ0FMTCAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS92b2ljZWNhbGxfMzh4MzguOThlZTRlNmVhYzRlNDgyZGM4YjJkYjllYWRhZmIwMzEucG5nIik7Cn0KQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgewogICNva3RhLXNpZ24taW4gLm1mYS1jYWxsLTMwLAogICNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtb2t0YS1jYWxsIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBDQUxMIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvdm9pY2VjYWxsX2ljb0AyeC42Y2NlZDBmNTUwNmQxYzBhMmVlM2I5Mzg4ZTY0NzUzZi5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLW9rdGEtY2FsbCB7CiAgLyogLS0gRmFjdG9yIEljb25zIChsYXJnZSk6IENBTEwgLS0gKi8KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvdm9pY2VjYWxsXzcweDcwLmI2NTFhMWYyMzBlZTFhZWExNDhjODc3NzNkNTMzZmFmLnBuZyIpOwp9CkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHsKICAjb2t0YS1zaWduLWluIC5tZmEtb2t0YS1jYWxsIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBDQUxMIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvdm9pY2VjYWxsQDJ4LjU4ZGQ3NzJiMjcwN2RmMGNjOTg2Nzk2ZjI0OWFlODBjLnBuZyIpOwogIH0KfQojb2t0YS1zaWduLWluIC5tZmEtcXVlc3Rpb24tMzAsCiNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtb2t0YS1zZWN1cml0eS1xdWVzdGlvbiB7CiAgLyogLS0gRmFjdG9yIEljb25zIChzbWFsbCk6IFNlY3VyaXR5IFF1ZXN0aW9uIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3F1ZXN0aW9uXzM4eDM4Ljg0NTNkYjllYTU5MmEzMDE1YWRkN2ZiMjY4NDkxYTNiLnBuZyIpOwp9CkBtZWRpYSAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAyKSwgKG1pbi1yZXNvbHV0aW9uOiAxOTJkcGkpIHsKICAjb2t0YS1zaWduLWluIC5tZmEtcXVlc3Rpb24tMzAsCiAgI29rdGEtc2lnbi1pbiAuZW5yb2xsLWZhY3Rvci1yb3cgLm1mYS1va3RhLXNlY3VyaXR5LXF1ZXN0aW9uIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBTZWN1cml0eSBRdWVzdGlvbiAtLSAqLwogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3F1ZXN0aW9uX2ljb0AyeC41OTBiN2FhYWQyYmYwODFjMDg5YjQyOGQ2ZjkzNWEwMS5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLW9rdGEtc2VjdXJpdHktcXVlc3Rpb24gewogIC8qIC0tIEZhY3RvciBJY29ucyAobGFyZ2UpOiBTZWN1cml0eSBRdWVzdGlvbiAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS9xdWVzdGlvbl83MHg3MC4yMGU3OTdlMTlhODNjNmU2OTlkODExNTYxYjUzZWI1MS5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLW9rdGEtc2VjdXJpdHktcXVlc3Rpb24gewogICAgLyogLS0gRmFjdG9yIEljb25zIChoaWdoIERQSSk6IFNlY3VyaXR5IFF1ZXN0aW9uIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvcXVlc3Rpb25AMnguZmQ1ZWYwYTZmN2IxMGEwODg3MDY1NjBjMTMwZDEwM2UucG5nIik7CiAgfQp9CiNva3RhLXNpZ24taW4gLm1mYS13aW5kb3dzLWhlbGxvLTMwLAojb2t0YS1zaWduLWluIC5lbnJvbGwtZmFjdG9yLXJvdyAubWZhLXdpbmRvd3MtaGVsbG8gewogIC8qIC0tIEZhY3RvciBJY29ucyAoc21hbGwpOiBXaW5kb3dzIEhlbGxvIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3dpbmRvd3NIZWxsb18zOHgzOC4yMTY4N2Q4MTlmZjFkZWI1NmFjNmM4ZWEzMGJmZjZlNS5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLXdpbmRvd3MtaGVsbG8tMzAsCiAgI29rdGEtc2lnbi1pbiAuZW5yb2xsLWZhY3Rvci1yb3cgLm1mYS13aW5kb3dzLWhlbGxvIHsKICAgIC8qIC0tIEZhY3RvciBJY29ucyAoaGlnaCBEUEkpOiBXaW5kb3dzIEhlbGxvIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvd2luZG93c0hlbGxvX2ljb0AyeC4xZDRiOWQxMjZmMzE1MzdmYmNjZTc0MmMxOTQxZmVkZi5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLXdpbmRvd3MtaGVsbG8gewogIC8qIC0tIEZhY3RvciBJY29ucyAobGFyZ2UpOiBXaW5kb3dzIEhlbGxvIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3dpbmRvd3NIZWxsb183MHg3MC4xN2Y3OTdlNGIwYWY2NDZjOTc5ZmFmMDg5MzFlZjkwOS5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLXdpbmRvd3MtaGVsbG8gewogICAgLyogLS0gRmFjdG9yIEljb25zIChoaWdoIERQSSk6IFdpbmRvd3MgSGVsbG8gLS0gKi8KICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS93aW5kb3dzSGVsbG9AMnguOTY0Nzc1ZWI4ZWI5ZDZkYWZhNjQyNDJkY2Y3Njg1YTgucG5nIik7CiAgfQp9CiNva3RhLXNpZ24taW4gLm1mYS11MmYtMzAsCiNva3RhLXNpZ24taW4gLmVucm9sbC1mYWN0b3Itcm93IC5tZmEtdTJmIHsKICAvKiAtLSBGYWN0b3IgSWNvbnMgKHNtYWxsKTogVTJGIC0tICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3UyZl8zOHgzOC5kZGIwMTMyNjk4NGUwMWQ3ZmE4YzA3ZjIwZjg0NGY2ZC5wbmciKTsKfQpAbWVkaWEgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMiksIChtaW4tcmVzb2x1dGlvbjogMTkyZHBpKSB7CiAgI29rdGEtc2lnbi1pbiAubWZhLXUyZi0zMCwKICAjb2t0YS1zaWduLWluIC5lbnJvbGwtZmFjdG9yLXJvdyAubWZhLXUyZiB7CiAgICAvKiAtLSBGYWN0b3IgSWNvbnMgKGhpZ2ggRFBJKTogVTJGIC0tICovCiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoIi4uL2ltZy9pY29ucy9tZmEvdTJmX2ljb0AyeC4yYzgxNmVmNmZiN2RjNmE0NTE0NDExOWJhZTg1NGQxNy5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAubWZhLXUyZiB7CiAgLyogLS0gRmFjdG9yIEljb25zIChsYXJnZSk6IFUyRiAtLSAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vaW1nL2ljb25zL21mYS91MmZfNzB4NzAuZDU4OTdlZjFhNmU3NDVkYTI5NTk0OTU1NzRmZjM5MjkucG5nIik7Cn0KQG1lZGlhICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDIpLCAobWluLXJlc29sdXRpb246IDE5MmRwaSkgewogICNva3RhLXNpZ24taW4gLm1mYS11MmYgewogICAgLyogLS0gRmFjdG9yIEljb25zIChoaWdoIERQSSk6IFUyRiAtLSAqLwogICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCIuLi9pbWcvaWNvbnMvbWZhL3UyZkAyeC5mMzE5YzJjZmFjODdiYThmMGU0N2FkNGQyMTljZDQwMi5wbmciKTsKICB9Cn0KI29rdGEtc2lnbi1pbiAuYnV0dG9uIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBjb2xvcjogIzVlNWU1ZTsKICAqem9vbTogMTsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChncmFkaWVudFR5cGU9MCwgc3RhcnRDb2xvcnN0cj0nI0ZGRkJGQkZCJywgZW5kQ29sb3JzdHI9JyNGRkY4RjhGOCcpOwogIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICNmYmZiZmIgMCUsICNmOGY4ZjggMTAwJSk7CiAgLyogT3BlcmEgMTEuMTArICovCiAgYmFja2dyb3VuZDogLW1zLWxpbmVhci1ncmFkaWVudCh0b3AsICNmYmZiZmIgMCUsICNmOGY4ZjggMTAwJSk7CiAgLyogSUUxMCsgKi8KICBiYWNrZ3JvdW5kOiAjZmJmYmZiOwogIGJhY2tncm91bmQ6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJMlppWm1KbVlpSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUkyWTRaamhtT0NJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpLCAjZmJmYmZiOwogIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCA1MCUgMCUsIDUwJSAxMDAlLCBjb2xvci1zdG9wKDAlLCAjZmJmYmZiKSwgY29sb3Itc3RvcCgxMDAlLCAjZjhmOGY4KSksICNmYmZiZmI7CiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoI2ZiZmJmYiwgI2Y4ZjhmOCksICNmYmZiZmI7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoI2ZiZmJmYiwgI2Y4ZjhmOCksICNmYmZiZmI7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmYmZiZmIsICNmOGY4ZjgpLCAjZmJmYmZiOwogIGJvcmRlci1jb2xvcjogI2MzYzNjMzsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjYmJiYmJiOwogIC1tb3otYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjA1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0OwogIC13ZWJraXQtYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjA1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0OwogIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4wNSkgMCAxcHggMCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIDAgMXB4IDAgMCBpbnNldDsKfQojb2t0YS1zaWduLWluIC5idXR0b246aG92ZXIsICNva3RhLXNpZ24taW4gLmJ1dHRvbjpmb2N1cywgI29rdGEtc2lnbi1pbiAuYnV0dG9uOmFjdGl2ZSwgI29rdGEtc2lnbi1pbiAuYnV0dG9uOmZvY3VzIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICAqem9vbTogMTsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChncmFkaWVudFR5cGU9MCwgc3RhcnRDb2xvcnN0cj0nI0ZGRkZGRkZGJywgZW5kQ29sb3JzdHI9JyNGRkZDRkNGQycpOwogIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlIDAlLCAjZmNmY2ZjIDEwMCUpOwogIC8qIE9wZXJhIDExLjEwKyAqLwogIGJhY2tncm91bmQ6IC1tcy1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZSAwJSwgI2ZjZmNmYyAxMDAlKTsKICAvKiBJRTEwKyAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWm1abVppSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUkyWmpabU5tWXlJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpOwogIGJhY2tncm91bmQtc2l6ZTogMTAwJTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgNTAlIDAlLCA1MCUgMTAwJSwgY29sb3Itc3RvcCgwJSwgI2ZmZmZmZiksIGNvbG9yLXN0b3AoMTAwJSwgI2ZjZmNmYykpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNmY2ZjZmMpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNmY2ZjZmMpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjZmZmZmZmLCAjZmNmY2ZjKTsKICBib3JkZXItY29sb3I6ICNiMmIyYjI7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2FlYWVhZTsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CiNva3RhLXNpZ24taW4gLmJ1dHRvbjpob3ZlciwgI29rdGEtc2lnbi1pbiAuYnV0dG9uOmZvY3VzLCAjb2t0YS1zaWduLWluIC5idXR0b246YWN0aXZlLCAjb2t0YS1zaWduLWluIC5idXR0b246Zm9jdXMgewogIC8qIC0tIEJ1dHRvbnMnIENvbG9ycyAtLSAqLwogIGJveC1zaGFkb3c6IG5vbmU7Cn0KI29rdGEtc2lnbi1pbiAuYnV0dG9uLWRhcmsgewogIC8qIC0tIEJ1dHRvbnMnIENvbG9ycyAtLSAqLwogIGNvbG9yOiAjZmZmOwogICp6b29tOiAxOwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KGdyYWRpZW50VHlwZT0wLCBzdGFydENvbG9yc3RyPScjRkY5MjkyOTInLCBlbmRDb2xvcnN0cj0nI0ZGOEE4QThBJyk7CiAgYmFja2dyb3VuZDogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzkyOTI5MiAwJSwgIzhhOGE4YSAxMDAlKTsKICAvKiBPcGVyYSAxMS4xMCsgKi8KICBiYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KHRvcCwgIzkyOTI5MiAwJSwgIzhhOGE4YSAxMDAlKTsKICAvKiBJRTEwKyAqLwogIGJhY2tncm91bmQ6ICM5MjkyOTI7CiAgYmFja2dyb3VuZDogdXJsKCdkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NGdQSE4yWnlCMlpYSnphVzl1UFNJeExqRWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStQR1JsWm5NK1BHeHBibVZoY2tkeVlXUnBaVzUwSUdsa1BTSm5jbUZrSWlCbmNtRmthV1Z1ZEZWdWFYUnpQU0p2WW1wbFkzUkNiM1Z1WkdsdVowSnZlQ0lnZURFOUlqQXVOU0lnZVRFOUlqQXVNQ0lnZURJOUlqQXVOU0lnZVRJOUlqRXVNQ0krUEhOMGIzQWdiMlptYzJWMFBTSXdKU0lnYzNSdmNDMWpiMnh2Y2owaUl6a3lPVEk1TWlJdlBqeHpkRzl3SUc5bVpuTmxkRDBpTVRBd0pTSWdjM1J2Y0MxamIyeHZjajBpSXpoaE9HRTRZU0l2UGp3dmJHbHVaV0Z5UjNKaFpHbGxiblErUEM5a1pXWnpQanh5WldOMElIZzlJakFpSUhrOUlqQWlJSGRwWkhSb1BTSXhNREFsSWlCb1pXbG5hSFE5SWpFd01DVWlJR1pwYkd3OUluVnliQ2dqWjNKaFpDa2lJQzgrUEM5emRtYytJQT09JyksICM5MjkyOTI7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDUwJSAwJSwgNTAlIDEwMCUsIGNvbG9yLXN0b3AoMCUsICM5MjkyOTIpLCBjb2xvci1zdG9wKDEwMCUsICM4YThhOGEpKSwgIzkyOTI5MjsKICBiYWNrZ3JvdW5kOiAtbW96LWxpbmVhci1ncmFkaWVudCgjOTI5MjkyLCAjOGE4YThhKSwgIzkyOTI5MjsKICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgjOTI5MjkyLCAjOGE4YThhKSwgIzkyOTI5MjsKICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoIzkyOTI5MiwgIzhhOGE4YSksICM5MjkyOTI7CiAgYm9yZGVyLWNvbG9yOiAjNmM2YzZjOwogIGJvcmRlci1ib3R0b20tY29sb3I6ICM2NzY3Njc7CiAgLW1vei1ib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMTUpIDAgMXB4IDAsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSAwIDFweCAwIDAgaW5zZXQ7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMTUpIDAgMXB4IDAsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSAwIDFweCAwIDAgaW5zZXQ7CiAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0Owp9CiNva3RhLXNpZ24taW4gLmJ1dHRvbi1kYXJrOmhvdmVyLCAjb2t0YS1zaWduLWluIC5idXR0b24tZGFyazpmb2N1cywgI29rdGEtc2lnbi1pbiAuYnV0dG9uLWRhcms6YWN0aXZlLCAjb2t0YS1zaWduLWluIC5idXR0b24tZGFyazpmb2N1cyB7CiAgLyogLS0gQnV0dG9ucycgQ29sb3JzIC0tICovCiAgKnpvb206IDE7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZ3JhZGllbnRUeXBlPTAsIHN0YXJ0Q29sb3JzdHI9JyNGRjlBOUE5QScsIGVuZENvbG9yc3RyPScjRkY5MjkyOTInKTsKICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjOWE5YTlhIDAlLCAjOTI5MjkyIDEwMCUpOwogIC8qIE9wZXJhIDExLjEwKyAqLwogIGJhY2tncm91bmQ6IC1tcy1saW5lYXItZ3JhZGllbnQodG9wLCAjOWE5YTlhIDAlLCAjOTI5MjkyIDEwMCUpOwogIC8qIElFMTArICovCiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdkYXRhOmltYWdlL3N2Zyt4bWw7YmFzZTY0LFBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NGdQSE4yWnlCMlpYSnphVzl1UFNJeExqRWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStQR1JsWm5NK1BHeHBibVZoY2tkeVlXUnBaVzUwSUdsa1BTSm5jbUZrSWlCbmNtRmthV1Z1ZEZWdWFYUnpQU0p2WW1wbFkzUkNiM1Z1WkdsdVowSnZlQ0lnZURFOUlqQXVOU0lnZVRFOUlqQXVNQ0lnZURJOUlqQXVOU0lnZVRJOUlqRXVNQ0krUEhOMGIzQWdiMlptYzJWMFBTSXdKU0lnYzNSdmNDMWpiMnh2Y2owaUl6bGhPV0U1WVNJdlBqeHpkRzl3SUc5bVpuTmxkRDBpTVRBd0pTSWdjM1J2Y0MxamIyeHZjajBpSXpreU9USTVNaUl2UGp3dmJHbHVaV0Z5UjNKaFpHbGxiblErUEM5a1pXWnpQanh5WldOMElIZzlJakFpSUhrOUlqQWlJSGRwWkhSb1BTSXhNREFsSWlCb1pXbG5hSFE5SWpFd01DVWlJR1pwYkd3OUluVnliQ2dqWjNKaFpDa2lJQzgrUEM5emRtYytJQT09Jyk7CiAgYmFja2dyb3VuZC1zaXplOiAxMDAlOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCA1MCUgMCUsIDUwJSAxMDAlLCBjb2xvci1zdG9wKDAlLCAjOWE5YTlhKSwgY29sb3Itc3RvcCgxMDAlLCAjOTI5MjkyKSk7CiAgYmFja2dyb3VuZC1pbWFnZTogLW1vei1saW5lYXItZ3JhZGllbnQoIzlhOWE5YSwgIzkyOTI5Mik7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoIzlhOWE5YSwgIzkyOTI5Mik7CiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCM5YTlhOWEsICM5MjkyOTIpOwogIGJvcmRlci1jb2xvcjogIzYwNjA2MDsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjNWU1ZTVlOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KI29rdGEtc2lnbi1pbiAuYnV0dG9uLWRhcms6aG92ZXIsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1kYXJrOmZvY3VzLCAjb2t0YS1zaWduLWluIC5idXR0b24tZGFyazphY3RpdmUsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1kYXJrOmZvY3VzIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBib3gtc2hhZG93OiBub25lOwp9CiNva3RhLXNpZ24taW4gLmJ1dHRvbi1wcmltYXJ5IHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBjb2xvcjogI2ZmZjsKICAqem9vbTogMTsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChncmFkaWVudFR5cGU9MCwgc3RhcnRDb2xvcnN0cj0nI0ZGMDA3REMxJywgZW5kQ29sb3JzdHI9JyNGRjAwNzNCMicpOwogIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDdkYzEgMCUsICMwMDczYjIgMTAwJSk7CiAgLyogT3BlcmEgMTEuMTArICovCiAgYmFja2dyb3VuZDogLW1zLWxpbmVhci1ncmFkaWVudCh0b3AsICMwMDdkYzEgMCUsICMwMDczYjIgMTAwJSk7CiAgLyogSUUxMCsgKi8KICBiYWNrZ3JvdW5kOiAjMDA3ZGMxOwogIGJhY2tncm91bmQ6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJekF3TjJSak1TSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUl6QXdOek5pTWlJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpLCAjMDA3ZGMxOwogIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCA1MCUgMCUsIDUwJSAxMDAlLCBjb2xvci1zdG9wKDAlLCAjMDA3ZGMxKSwgY29sb3Itc3RvcCgxMDAlLCAjMDA3M2IyKSksICMwMDdkYzE7CiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoIzAwN2RjMSwgIzAwNzNiMiksICMwMDdkYzE7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoIzAwN2RjMSwgIzAwNzNiMiksICMwMDdkYzE7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCMwMDdkYzEsICMwMDczYjIpLCAjMDA3ZGMxOwogIGJvcmRlci1jb2xvcjogIzAwNGI3NTsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjMDA0NTZhOwogIC1tb3otYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0OwogIC13ZWJraXQtYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjE1KSAwIDFweCAwLCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSkgMCAxcHggMCAwIGluc2V0OwogIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNSkgMCAxcHggMCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIDAgMXB4IDAgMCBpbnNldDsKfQojb2t0YS1zaWduLWluIC5idXR0b24tcHJpbWFyeTpob3ZlciwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLXByaW1hcnk6Zm9jdXMsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1wcmltYXJ5OmFjdGl2ZSwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLXByaW1hcnk6Zm9jdXMgewogIC8qIC0tIEJ1dHRvbnMnIENvbG9ycyAtLSAqLwogICp6b29tOiAxOwogIGZpbHRlcjogcHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KGdyYWRpZW50VHlwZT0wLCBzdGFydENvbG9yc3RyPScjRkYwMDg3RDAnLCBlbmRDb2xvcnN0cj0nI0ZGMDA3REMxJyk7CiAgYmFja2dyb3VuZDogLW8tbGluZWFyLWdyYWRpZW50KHRvcCwgIzAwODdkMCAwJSwgIzAwN2RjMSAxMDAlKTsKICAvKiBPcGVyYSAxMS4xMCsgKi8KICBiYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KHRvcCwgIzAwODdkMCAwJSwgIzAwN2RjMSAxMDAlKTsKICAvKiBJRTEwKyAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJekF3T0Rka01DSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUl6QXdOMlJqTVNJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpOwogIGJhY2tncm91bmQtc2l6ZTogMTAwJTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgNTAlIDAlLCA1MCUgMTAwJSwgY29sb3Itc3RvcCgwJSwgIzAwODdkMCksIGNvbG9yLXN0b3AoMTAwJSwgIzAwN2RjMSkpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KCMwMDg3ZDAsICMwMDdkYzEpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCMwMDg3ZDAsICMwMDdkYzEpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjMDA4N2QwLCAjMDA3ZGMxKTsKICBib3JkZXItY29sb3I6ICMwMDNkNWU7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzAwM2E1OTsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CiNva3RhLXNpZ24taW4gLmJ1dHRvbi1wcmltYXJ5OmhvdmVyLCAjb2t0YS1zaWduLWluIC5idXR0b24tcHJpbWFyeTpmb2N1cywgI29rdGEtc2lnbi1pbiAuYnV0dG9uLXByaW1hcnk6YWN0aXZlLCAjb2t0YS1zaWduLWluIC5idXR0b24tcHJpbWFyeTpmb2N1cyB7CiAgLyogLS0gQnV0dG9ucycgQ29sb3JzIC0tICovCiAgYm94LXNoYWRvdzogbm9uZTsKfQojb2t0YS1zaWduLWluIC5idXR0b24tc3VjY2VzcyB7CiAgLyogLS0gQnV0dG9ucycgQ29sb3JzIC0tICovCiAgY29sb3I6ICNmZmY7CiAgKnpvb206IDE7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZ3JhZGllbnRUeXBlPTAsIHN0YXJ0Q29sb3JzdHI9JyNGRjRDQkY5QycsIGVuZENvbG9yc3RyPScjRkY0MkI5OTUnKTsKICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjNGNiZjljIDAlLCAjNDJiOTk1IDEwMCUpOwogIC8qIE9wZXJhIDExLjEwKyAqLwogIGJhY2tncm91bmQ6IC1tcy1saW5lYXItZ3JhZGllbnQodG9wLCAjNGNiZjljIDAlLCAjNDJiOTk1IDEwMCUpOwogIC8qIElFMTArICovCiAgYmFja2dyb3VuZDogIzRjYmY5YzsKICBiYWNrZ3JvdW5kOiB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWRYUm1MVGdpUHo0Z1BITjJaeUIyWlhKemFXOXVQU0l4TGpFaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJK1BHUmxabk0rUEd4cGJtVmhja2R5WVdScFpXNTBJR2xrUFNKbmNtRmtJaUJuY21Ga2FXVnVkRlZ1YVhSelBTSnZZbXBsWTNSQ2IzVnVaR2x1WjBKdmVDSWdlREU5SWpBdU5TSWdlVEU5SWpBdU1DSWdlREk5SWpBdU5TSWdlVEk5SWpFdU1DSStQSE4wYjNBZ2IyWm1jMlYwUFNJd0pTSWdjM1J2Y0MxamIyeHZjajBpSXpSalltWTVZeUl2UGp4emRHOXdJRzltWm5ObGREMGlNVEF3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJelF5WWprNU5TSXZQand2YkdsdVpXRnlSM0poWkdsbGJuUStQQzlrWldaelBqeHlaV04wSUhnOUlqQWlJSGs5SWpBaUlIZHBaSFJvUFNJeE1EQWxJaUJvWldsbmFIUTlJakV3TUNVaUlHWnBiR3c5SW5WeWJDZ2paM0poWkNraUlDOCtQQzl6ZG1jK0lBPT0nKSwgIzRjYmY5YzsKICBiYWNrZ3JvdW5kOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgNTAlIDAlLCA1MCUgMTAwJSwgY29sb3Itc3RvcCgwJSwgIzRjYmY5YyksIGNvbG9yLXN0b3AoMTAwJSwgIzQyYjk5NSkpLCAjNGNiZjljOwogIGJhY2tncm91bmQ6IC1tb3otbGluZWFyLWdyYWRpZW50KCM0Y2JmOWMsICM0MmI5OTUpLCAjNGNiZjljOwogIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCM0Y2JmOWMsICM0MmI5OTUpLCAjNGNiZjljOwogIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgjNGNiZjljLCAjNDJiOTk1KSwgIzRjYmY5YzsKICBib3JkZXItY29sb3I6ICMzMjhjNzE7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogIzJmODU2YjsKICAtbW96LWJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNSkgMCAxcHggMCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIDAgMXB4IDAgMCBpbnNldDsKICAtd2Via2l0LWJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xNSkgMCAxcHggMCwgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpIDAgMXB4IDAgMCBpbnNldDsKICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMTUpIDAgMXB4IDAsIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKSAwIDFweCAwIDAgaW5zZXQ7Cn0KI29rdGEtc2lnbi1pbiAuYnV0dG9uLXN1Y2Nlc3M6aG92ZXIsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1zdWNjZXNzOmZvY3VzLCAjb2t0YS1zaWduLWluIC5idXR0b24tc3VjY2VzczphY3RpdmUsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1zdWNjZXNzOmZvY3VzIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICAqem9vbTogMTsKICBmaWx0ZXI6IHByb2dpZDpEWEltYWdlVHJhbnNmb3JtLk1pY3Jvc29mdC5ncmFkaWVudChncmFkaWVudFR5cGU9MCwgc3RhcnRDb2xvcnN0cj0nI0ZGNTdDM0EyJywgZW5kQ29sb3JzdHI9JyNGRjRDQkY5QycpOwogIGJhY2tncm91bmQ6IC1vLWxpbmVhci1ncmFkaWVudCh0b3AsICM1N2MzYTIgMCUsICM0Y2JmOWMgMTAwJSk7CiAgLyogT3BlcmEgMTEuMTArICovCiAgYmFja2dyb3VuZDogLW1zLWxpbmVhci1ncmFkaWVudCh0b3AsICM1N2MzYTIgMCUsICM0Y2JmOWMgMTAwJSk7CiAgLyogSUUxMCsgKi8KICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCbGJtTnZaR2x1WnowaWRYUm1MVGdpUHo0Z1BITjJaeUIyWlhKemFXOXVQU0l4TGpFaUlIaHRiRzV6UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMM04yWnlJK1BHUmxabk0rUEd4cGJtVmhja2R5WVdScFpXNTBJR2xrUFNKbmNtRmtJaUJuY21Ga2FXVnVkRlZ1YVhSelBTSnZZbXBsWTNSQ2IzVnVaR2x1WjBKdmVDSWdlREU5SWpBdU5TSWdlVEU5SWpBdU1DSWdlREk5SWpBdU5TSWdlVEk5SWpFdU1DSStQSE4wYjNBZ2IyWm1jMlYwUFNJd0pTSWdjM1J2Y0MxamIyeHZjajBpSXpVM1l6TmhNaUl2UGp4emRHOXdJRzltWm5ObGREMGlNVEF3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJelJqWW1ZNVl5SXZQand2YkdsdVpXRnlSM0poWkdsbGJuUStQQzlrWldaelBqeHlaV04wSUhnOUlqQWlJSGs5SWpBaUlIZHBaSFJvUFNJeE1EQWxJaUJvWldsbmFIUTlJakV3TUNVaUlHWnBiR3c5SW5WeWJDZ2paM0poWkNraUlDOCtQQzl6ZG1jK0lBPT0nKTsKICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7CiAgYmFja2dyb3VuZC1pbWFnZTogLXdlYmtpdC1ncmFkaWVudChsaW5lYXIsIDUwJSAwJSwgNTAlIDEwMCUsIGNvbG9yLXN0b3AoMCUsICM1N2MzYTIpLCBjb2xvci1zdG9wKDEwMCUsICM0Y2JmOWMpKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtbW96LWxpbmVhci1ncmFkaWVudCgjNTdjM2EyLCAjNGNiZjljKTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudCgjNTdjM2EyLCAjNGNiZjljKTsKICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoIzU3YzNhMiwgIzRjYmY5Yyk7CiAgYm9yZGVyLWNvbG9yOiAjMmM3YjYzOwogIGJvcmRlci1ib3R0b20tY29sb3I6ICMyYjc4NjE7CiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogIGN1cnNvcjogcG9pbnRlcjsKfQojb2t0YS1zaWduLWluIC5idXR0b24tc3VjY2Vzczpob3ZlciwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLXN1Y2Nlc3M6Zm9jdXMsICNva3RhLXNpZ24taW4gLmJ1dHRvbi1zdWNjZXNzOmFjdGl2ZSwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLXN1Y2Nlc3M6Zm9jdXMgewogIC8qIC0tIEJ1dHRvbnMnIENvbG9ycyAtLSAqLwogIGJveC1zaGFkb3c6IG5vbmU7Cn0KI29rdGEtc2lnbi1pbiAuYnV0dG9uLmxpbmstYnV0dG9uLWRpc2FibGVkIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBjb2xvcjogI2FhYTsKfQojb2t0YS1zaWduLWluIC5idXR0b24ubGluay1idXR0b24tZGlzYWJsZWQ6aG92ZXIsICNva3RhLXNpZ24taW4gLmJ1dHRvbi5saW5rLWJ1dHRvbi1kaXNhYmxlZDpmb2N1cywgI29rdGEtc2lnbi1pbiAuYnV0dG9uLmxpbmstYnV0dG9uLWRpc2FibGVkOmFjdGl2ZSwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLmxpbmstYnV0dG9uLWRpc2FibGVkOmZvY3VzIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBjdXJzb3I6IGRlZmF1bHQ7CiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsKfQojb2t0YS1zaWduLWluIC5idXR0b24uYnV0dG9uLXByaW1hcnkubGluay1idXR0b24tZGlzYWJsZWQgewogIC8qIC0tIEJ1dHRvbnMnIENvbG9ycyAtLSAqLwogIGNvbG9yOiAjZmZmOwogIGJhY2tncm91bmQtY29sb3I6ICM2M2IxZDc7CiAgYm9yZGVyLWNvbG9yOiAjNjNiMWQ3OwogIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7CiAgYm94LXNoYWRvdzogbm9uZTsKfQojb2t0YS1zaWduLWluIC5idXR0b24uYnV0dG9uLXByaW1hcnkubGluay1idXR0b24tZGlzYWJsZWQ6aG92ZXIsICNva3RhLXNpZ24taW4gLmJ1dHRvbi5idXR0b24tcHJpbWFyeS5saW5rLWJ1dHRvbi1kaXNhYmxlZDpmb2N1cywgI29rdGEtc2lnbi1pbiAuYnV0dG9uLmJ1dHRvbi1wcmltYXJ5LmxpbmstYnV0dG9uLWRpc2FibGVkOmFjdGl2ZSwgI29rdGEtc2lnbi1pbiAuYnV0dG9uLmJ1dHRvbi1wcmltYXJ5LmxpbmstYnV0dG9uLWRpc2FibGVkOmZvY3VzIHsKICAvKiAtLSBCdXR0b25zJyBDb2xvcnMgLS0gKi8KICBjdXJzb3I6IGRlZmF1bHQ7CiAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTsKfQojb2t0YS1zaWduLWluIC5pY29uLWJ1dHRvbiB7CiAgLyogLS0gQnV0dG9ucycgQ29sb3JzIC0tICovCiAgY29sb3I6ICM1ZTVlNWU7CiAgKnpvb206IDE7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZ3JhZGllbnRUeXBlPTAsIHN0YXJ0Q29sb3JzdHI9JyNGRkZGRkZGRicsIGVuZENvbG9yc3RyPScjRkZGRkZGRkYnKTsKICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCAjZmZmIDAlLCB3aGl0ZSAxMDAlKTsKICAvKiBPcGVyYSAxMS4xMCsgKi8KICBiYWNrZ3JvdW5kOiAtbXMtbGluZWFyLWdyYWRpZW50KHRvcCwgI2ZmZiAwJSwgd2hpdGUgMTAwJSk7CiAgLyogSUUxMCsgKi8KICBiYWNrZ3JvdW5kOiAjZmZmOwogIGJhY2tncm91bmQ6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWm1abVppSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUkyWm1abVptWmlJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpLCAjZmZmOwogIGJhY2tncm91bmQ6IC13ZWJraXQtZ3JhZGllbnQobGluZWFyLCA1MCUgMCUsIDUwJSAxMDAlLCBjb2xvci1zdG9wKDAlLCAjZmZmZmZmKSwgY29sb3Itc3RvcCgxMDAlLCAjZmZmZmZmKSksICNmZmY7CiAgYmFja2dyb3VuZDogLW1vei1saW5lYXItZ3JhZGllbnQoI2ZmZmZmZiwgI2ZmZmZmZiksICNmZmY7CiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQoI2ZmZmZmZiwgI2ZmZmZmZiksICNmZmY7CiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNmZmZmZmYpLCAjZmZmOwogIGJvcmRlci1jb2xvcjogI2M0YzRjNDsKICBib3JkZXItYm90dG9tLWNvbG9yOiAjYmRiZGJkOwp9CiNva3RhLXNpZ24taW4gLmljb24tYnV0dG9uOmhvdmVyLCAjb2t0YS1zaWduLWluIC5pY29uLWJ1dHRvbjpmb2N1cywgI29rdGEtc2lnbi1pbiAuaWNvbi1idXR0b246YWN0aXZlLCAjb2t0YS1zaWduLWluIC5pY29uLWJ1dHRvbjpmb2N1cyB7CiAgLyogLS0gQnV0dG9ucycgQ29sb3JzIC0tICovCiAgKnpvb206IDE7CiAgZmlsdGVyOiBwcm9naWQ6RFhJbWFnZVRyYW5zZm9ybS5NaWNyb3NvZnQuZ3JhZGllbnQoZ3JhZGllbnRUeXBlPTAsIHN0YXJ0Q29sb3JzdHI9JyNGRkZGRkZGRicsIGVuZENvbG9yc3RyPScjRkZGRkZGRkYnKTsKICBiYWNrZ3JvdW5kOiAtby1saW5lYXItZ3JhZGllbnQodG9wLCB3aGl0ZSAwJSwgd2hpdGUgMTAwJSk7CiAgLyogT3BlcmEgMTEuMTArICovCiAgYmFja2dyb3VuZDogLW1zLWxpbmVhci1ncmFkaWVudCh0b3AsIHdoaXRlIDAlLCB3aGl0ZSAxMDAlKTsKICAvKiBJRTEwKyAqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnZGF0YTppbWFnZS9zdmcreG1sO2Jhc2U2NCxQRDk0Yld3Z2RtVnljMmx2YmowaU1TNHdJaUJsYm1OdlpHbHVaejBpZFhSbUxUZ2lQejRnUEhOMlp5QjJaWEp6YVc5dVBTSXhMakVpSUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0wzTjJaeUkrUEdSbFpuTStQR3hwYm1WaGNrZHlZV1JwWlc1MElHbGtQU0puY21Ga0lpQm5jbUZrYVdWdWRGVnVhWFJ6UFNKdlltcGxZM1JDYjNWdVpHbHVaMEp2ZUNJZ2VERTlJakF1TlNJZ2VURTlJakF1TUNJZ2VESTlJakF1TlNJZ2VUSTlJakV1TUNJK1BITjBiM0FnYjJabWMyVjBQU0l3SlNJZ2MzUnZjQzFqYjJ4dmNqMGlJMlptWm1abVppSXZQanh6ZEc5d0lHOW1abk5sZEQwaU1UQXdKU0lnYzNSdmNDMWpiMnh2Y2owaUkyWm1abVptWmlJdlBqd3ZiR2x1WldGeVIzSmhaR2xsYm5RK1BDOWtaV1p6UGp4eVpXTjBJSGc5SWpBaUlIazlJakFpSUhkcFpIUm9QU0l4TURBbElpQm9aV2xuYUhROUlqRXdNQ1VpSUdacGJHdzlJblZ5YkNnalozSmhaQ2tpSUM4K1BDOXpkbWMrSUE9PScpOwogIGJhY2tncm91bmQtc2l6ZTogMTAwJTsKICBiYWNrZ3JvdW5kLWltYWdlOiAtd2Via2l0LWdyYWRpZW50KGxpbmVhciwgNTAlIDAlLCA1MCUgMTAwJSwgY29sb3Itc3RvcCgwJSwgI2ZmZmZmZiksIGNvbG9yLXN0b3AoMTAwJSwgI2ZmZmZmZikpOwogIGJhY2tncm91bmQtaW1hZ2U6IC1tb3otbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNmZmZmZmYpOwogIGJhY2tncm91bmQtaW1hZ2U6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KCNmZmZmZmYsICNmZmZmZmYpOwogIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCgjZmZmZmZmLCAjZmZmZmZmKTsKICBib3JkZXItY29sb3I6ICNiM2IzYjM7CiAgYm9yZGVyLWJvdHRvbS1jb2xvcjogI2FmYWZhZjsKICB0ZXh0LWRlY29yYXRpb246IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwp9CiNva3RhLXNpZ24taW4gLm9rdGEtZHJvcGRvd24tbGlzdCB7CiAgLyogLS0gRHJvcGRvd24gQ29sb3JzIC0tICovCiAgLyogYmFja2dyb3VuZDogI2ZmZjsgKi8KICBib3JkZXItY29sb3I6ICM4ODg7Cn0KI29rdGEtc2lnbi1pbiAuZmFjdG9ycy1kcm9wZG93bi13cmFwIC5va3RhLWRyb3Bkb3duLWxpc3QgewogIC8qIC0tIERyb3Bkb3duIENvbG9ycyAtLSAqLwogIGJvcmRlci1jb2xvcjogI2NjYzsKICBib3JkZXItY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTsKfQojb2t0YS1zaWduLWluIC5va3RhLWRyb3Bkb3duLW9wdGlvbiB7CiAgLyogLS0gRHJvcGRvd24gQ29sb3JzIC0tICovCiAgLyogYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7ICovCiAgLyogYm9yZGVyLWJvdHRvbS1jb2xvcjogI2ZmZjsgKi8KfQojb2t0YS1zaWduLWluIC5va3RhLWRyb3Bkb3duLW9wdGlvbjpob3ZlciB7CiAgLyogLS0gRHJvcGRvd24gQ29sb3JzIC0tICovCiAgLyogYmFja2dyb3VuZDogI2Y5ZjlmOTsgKi8KfQojb2t0YS1zaWduLWluIC5va3RhLWRyb3Bkb3duLW9wdGlvbi5kcm9wZG93bi1saXN0LXRpdGxlOmhvdmVyIHsKICAvKiAtLSBEcm9wZG93biBDb2xvcnMgLS0gKi8KICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsKfQojb2t0YS1zaWduLWluIC5va3RhLWRyb3Bkb3duLW9wdGlvbiBhIHsKICAvKiAtLSBEcm9wZG93biBDb2xvcnMgLS0gKi8KICBjb2xvcjogIzVlNWU1ZTsKfQojb2t0YS1zaWduLWluIC5va3RhLWluZm9ib3gtZXJyb3IgewogIC8qIC0tIEVycm9yIEluZm9ib3ggQ29sb3JzIC0tICovCiAgLyogYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgKi8KICAvKiBib3JkZXI6IDFweCBzb2xpZCAjZGRkOyAqLwp9CiNva3RhLXNpZ24taW4gLm9rdGEtaW5mb2JveC1lcnJvcjpiZWZvcmUgewogIC8qIC0tIEVycm9yIEluZm9ib3ggQ29sb3JzIC0tICovCiAgLyogYmFja2dyb3VuZC1jb2xvcjogI2UzNDg0MzsgKi8KfQojb2t0YS1zaWduLWluIC5va3RhLWluZm9ib3gtZXJyb3IgLmVycm9yLTE2OmJlZm9yZSB7CiAgLyogLS0gRXJyb3IgSW5mb2JveCBDb2xvcnM6IGVycm9yIGljb24gLS0gKi8KICAvKiBjb2xvcjogI2ZmZjsgKi8KICAvKiBVc2UgdGhlIHJ1bGVzIGJlbG93IHRvIHJlcGxhY2UgYW4gZXJyb3IgaWNvbiBpbiBlcnJvciBpbmZvYm94ZXMgKi8KICAvKiBjb250ZW50OiAnJzsgKi8KICAvKiB3aWR0aDogMTZweDsgKi8KICAvKiBoZWlnaHQ6IDE2cHg7ICovCiAgLyogYmFja2dyb3VuZC1pbWFnZTogbm9uZTsgKi8KfQojb2t0YS1zaWduLWluIC5lbnJvbGwtcmVxdWlyZWQtZmFjdG9yLWxpc3QgLmVucm9sbC1mYWN0b3Itcm93LW1pbiAuZW5yb2xsLWZhY3Rvci1kZXNjcmlwdGlvbiBoMyB7CiAgLyogLS0gRW5yb2xsIHJlcXVpcmVkIGZhY3RvcnMsIGZhY3RvcnMgdGhhdCBhcmUgbm90IHRoZSBjdXJyZW50IHN0ZXAgLS0gKi8KICBjb2xvcjogI2E3YTdhNzsKfQojb2t0YS1zaWduLWluIC5va3RhLWZvcm0taW5wdXQtZmllbGQgewogIC8qIC0tIElucHV0IEZpZWxkcyAtLSAqLwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm9yZGVyLWNvbG9yOiAjYmJiOwp9CiNva3RhLXNpZ24taW4gLm9rdGEtZm9ybS1pbnB1dC1maWVsZDpob3ZlciwgI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWlucHV0LWZpZWxkLmZvY3VzZWQtaW5wdXQgewogIC8qIC0tIElucHV0IEZpZWxkcyAtLSAqLwogIGJvcmRlci1jb2xvcjogIzg4ODsKfQojb2t0YS1zaWduLWluIC5va3RhLWZvcm0taW5wdXQtZmllbGQgaW5wdXQgewogIC8qIC0tIElucHV0IEZpZWxkcyAtLSAqLwogIGZvbnQtZmFtaWx5OiAicHJveGltYSBub3ZhIiwgQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjsKICBjb2xvcjogIzVlNWU1ZTsKfQojb2t0YS1zaWduLWluIC5va3RhLWZvcm0taW5wdXQtZmllbGQgaW5wdXQ6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIgewogIC8qIC0tIElucHV0IEZpZWxkczogcGxhY2Vob2xkZXIgLS0gKi8KICBmb250LWZhbWlseTogInByb3hpbWEgbm92YSIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgY29sb3I6ICNhYWE7Cn0KI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWlucHV0LWZpZWxkIGlucHV0OjotbW96LXBsYWNlaG9sZGVyIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IHBsYWNlaG9sZGVyIC0tICovCiAgZm9udC1mYW1pbHk6ICJwcm94aW1hIG5vdmEiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIGNvbG9yOiAjYWFhOwp9CiNva3RhLXNpZ24taW4gLm9rdGEtZm9ybS1pbnB1dC1maWVsZCBpbnB1dDotbXMtaW5wdXQtcGxhY2Vob2xkZXIgewogIC8qIC0tIElucHV0IEZpZWxkczogcGxhY2Vob2xkZXIgLS0gKi8KICBmb250LWZhbWlseTogInByb3hpbWEgbm92YSIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgY29sb3I6ICNhYWE7Cn0KI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWlucHV0LWZpZWxkIGlucHV0W2Rpc2FibGVkXSB7CiAgLyogLS0gSW5wdXQgRmllbGRzOiBkaXNhYmxlZCBpbnB1dCBmaWVsZCAtLSAqLwogIGNvbG9yOiAjNzc3OwogIC8qIGJhY2tncm91bmQ6ICNmNGY0ZjQ7ICovCn0KI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWlucHV0LWZpZWxkIGlucHV0W3R5cGU9InBhc3N3b3JkIl0gewogIC8qIC0tIElucHV0IEZpZWxkczogcGFzc3dvcmQgaW5wdXQgZmllbGQgLS0gKi8KICBmb250LWZhbWlseTogVmVyZGFuYSwgc2Fucy1zZXJpZjsKfQojb2t0YS1zaWduLWluIC5va3RhLWZvcm0taW5wdXQtZmllbGQgcGxhY2Vob2xkZXIgewogIC8qIC0tIElucHV0IEZpZWxkczogcGxhY2Vob2xkZXIgLS0gKi8KICBmb250LWZhbWlseTogInByb3hpbWEgbm92YSIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgY29sb3I6ICNhYWE7Cn0KI29rdGEtc2lnbi1pbiAuaW5wdXQtaWNvbjpiZWZvcmUsCiNva3RhLXNpZ24taW4gLmlucHV0LXRvb2x0aXA6YmVmb3JlIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IGljb25zIC0tICovCiAgY29sb3I6ICNhN2E3YTc7Cn0KI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWxhYmVsLWlubGluZSB7CiAgLyogLS0gSW5wdXQgRmllbGRzIC0tICovCiAgLyogYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjsgKi8KICAvKiBib3JkZXItY29sb3I6ICNjOGM4Yzg7ICovCiAgLyogY29sb3I6ICM5OTk7ICovCn0KI29rdGEtc2lnbi1pbiAub2t0YS1mb3JtLWlucHV0LWVycm9yIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IGVycm9yIGhpZ2hsaWdodCAtLSAqLwogIC8qIGNvbG9yOiAjZDkzOTM0OyAqLwp9CiNva3RhLXNpZ24taW4gLm9rdGEtZm9ybS1pbnB1dC1lcnJvciAuZXJyb3ItMTYtc21hbGw6YmVmb3JlIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IGVycm9yIGljb24gLS0gKi8KICAvKiBjb2xvcjogI2UzNDg0MzsgKi8KICAvKiBVc2UgdGhlIHJ1bGVzIGJlbG93IHRvIHJlcGxhY2UgaW5wdXQgZmllbGRzIGVycm9yIGljb24gKi8KICAvKiBjb250ZW50OiAnJzsgKi8KICAvKiB3aWR0aDogMTZweDsgKi8KICAvKiBoZWlnaHQ6IDE2cHg7ICovCiAgLyogYmFja2dyb3VuZC1pbWFnZTogbm9uZTsgKi8KfQojb2t0YS1zaWduLWluIC5jaHpuLXNpbmdsZSB7CiAgLyogLS0gSW5wdXQgRmllbGRzOiBTZWxlY3QgSW5wdXQgLS0gKi8KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwogIGJvcmRlci1jb2xvcjogI2JiYjsKfQojb2t0YS1zaWduLWluIC5jaHpuLXNpbmdsZSBzcGFuIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IFNlbGVjdCBJbnB1dCAtLSAqLwogIGNvbG9yOiAjNzc3Owp9CiNva3RhLXNpZ24taW4gLmNoem4tc2luZ2xlOmhvdmVyIHsKICAvKiAtLSBJbnB1dCBGaWVsZHM6IFNlbGVjdCBJbnB1dCAtLSAqLwogIGJvcmRlci1jb2xvcjogIzg4ODsKfQojb2t0YS1zaWduLWluIC5jaHpuLXdpdGgtZHJvcCAuY2h6bi1zaW5nbGUsCiNva3RhLXNpZ24taW4gLmNoem4td2l0aC1kcm9wIC5jaHpuLWRyb3AgewogIC8qIC0tIElucHV0IEZpZWxkczogU2VsZWN0IElucHV0IC0tICovCiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKICBib3JkZXItY29sb3I6ICM4ODg7Cn0KI29rdGEtc2lnbi1pbiAuY2h6bi13aXRoLWRyb3AgLmNoem4tcmVzdWx0cyBsaSB7CiAgLyogLS0gSW5wdXQgRmllbGRzOiBTZWxlY3QgSW5wdXQgLS0gKi8KICAvKiBib3JkZXItY29sb3I6ICNmZmY7ICovCn0KI29rdGEtc2lnbi1pbiAuY2h6bi13aXRoLWRyb3AgLmNoem4tcmVzdWx0cyAuaGlnaGxpZ2h0ZWQgewogIC8qIC0tIElucHV0IEZpZWxkczogU2VsZWN0IElucHV0IC0tICovCiAgLyogYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTsgKi8KfQojb2t0YS1zaWduLWluIC5wcmltYXJ5LWF1dGggewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLnBhc3N3b3JkLWV4cGlyZWQgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLnBhc3N3b3JkLXJlc2V0IHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5wYXNzd29yZC1yZXNldC1lbWFpbC1zZW50IHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5mb3Jnb3QtcGFzc3dvcmQgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLmFjY291bnQtdW5sb2NrIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5hY2NvdW50LXVubG9jay1lbWFpbC1zZW50IHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5yZWNvdmVyeS1jaGFsbGVuZ2UgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLnJlY292ZXJ5LWxvYWRpbmcgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLnJlY292ZXJ5LXF1ZXN0aW9uIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5yZWZyZXNoLWF1dGgtc3RhdGUgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLmVucm9sbC1jaG9pY2VzIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5lbnJvbGwtdG90cCB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuYmFyY29kZS10b3RwIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5hY3RpdmF0ZS10b3RwIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5lbnJvbGwtbWFudWFsLXRvdHAgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLmJhcmNvZGUtcHVzaCB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuYWN0aXZhdGUtcHVzaCB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLW1hbnVhbC1wdXNoIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5lbnJvbGwtYWN0aXZhdGlvbi1saW5rLXNlbnQgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLmVucm9sbC1zeW1hbnRlYyB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLXJzYSB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLW9ucHJlbSB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLWR1byB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLXNtcyB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAuZW5yb2xsLWNhbGwgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLmVucm9sbC1xdWVzdGlvbiB7CiAgLyogLS0gUGFnZSBzcGVjaWZpYyB0b3AgbGV2ZWwgc2VsZWN0b3JzIC0tICovCn0KI29rdGEtc2lnbi1pbiAubWZhLXZlcmlmeS1kdW8gewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLm1mYS12ZXJpZnkgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9yczogYWxsIGNoYWxsZW5nZSBwYWdlcyBleGNlcHQgZHVvIC0tICovCn0KI29rdGEtc2lnbi1pbiAubWZhLXZlcmlmeS10b3RwIHsKICAvKiAtLSBQYWdlIHNwZWNpZmljIHRvcCBsZXZlbCBzZWxlY3RvcnMgLS0gKi8KfQojb2t0YS1zaWduLWluIC5tZmEtdmVyaWZ5LXB1c2ggewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLm1mYS12ZXJpZnktdG90cC1pbmxpbmUgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLm1mYS12ZXJpZnktcXVlc3Rpb24gewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9CiNva3RhLXNpZ24taW4gLm1mYS12ZXJpZnktc21zLWNhbGwgewogIC8qIC0tIFBhZ2Ugc3BlY2lmaWMgdG9wIGxldmVsIHNlbGVjdG9ycyAtLSAqLwp9Cgoub2t0YS1zaWduLWluLXRvb2x0aXAucXRpcC1jdXN0b20gewogIC8qIC0tIFRvb2x0aXBzIC0tICovCiAgZm9udC1mYW1pbHk6ICJwcm94aW1hIG5vdmEiLCBBcmlhbCwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmOwogIC8qIGJhY2tncm91bmQtY29sb3I6ICM0ZDRkNGQ7ICovCiAgLyogYm9yZGVyLWNvbG9yOiAjMzAzMDMwOyAqLwp9Ci5va3RhLXNpZ24taW4tdG9vbHRpcC5xdGlwLWN1c3RvbSAucXRpcC1jb250ZW50IHsKICAvKiAtLSBUb29sdGlwcyAtLSAqLwogIC8qIGNvbG9yOiAjZjNmM2YzOyAqLwp9Ci5va3RhLXNpZ24taW4tdG9vbHRpcC5xdGlwLWN1c3RvbSAucXRpcC10aXRsZWJhciB7CiAgLyogLS0gVG9vbHRpcHMgLS0gKi8KICAvKiBiYWNrZ3JvdW5kLWNvbG9yOiAjNDA0MDQwICovCn0KCi5va3RhLXNpZ24taW4tc2VjdXJpdHktaW1hZ2UtdG9vbHRpcC5xdGlwLWN1c3RvbSB7CiAgLyogLS0gVG9vbHRpcHMgLS0gKi8KICBmb250LWZhbWlseTogInByb3hpbWEgbm92YSIsIEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7CiAgLyogYmFja2dyb3VuZC1jb2xvcjogIzRkNGQ0ZDsgKi8KICAvKiBib3JkZXItY29sb3I6ICMzMDMwMzA7ICovCn0KLm9rdGEtc2lnbi1pbi1zZWN1cml0eS1pbWFnZS10b29sdGlwLnF0aXAtY3VzdG9tIC5xdGlwLWNvbnRlbnQgewogIC8qIC0tIFRvb2x0aXBzIC0tICovCiAgLyogY29sb3I6ICNmM2YzZjM7ICovCn0KCiNva3RhLXNpZ24taW4gLnVuc3VwcG9ydGVkLW1lc3NhZ2UgewogIHBhZGRpbmc6IDIxcHggNTVweCAzN3B4IDU1cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9CiNva3RhLXNpZ24taW4gLnVuc3VwcG9ydGVkLW1lc3NhZ2UgcCB7CiAgcGFkZGluZy1ib3R0b206IDIwcHg7Cn0KI29rdGEtc2lnbi1pbiAudW5zdXBwb3J0ZWQtbWVzc2FnZSBhLmJ1dHRvbiB7CiAgZGlzcGxheTogYmxvY2s7Cn0KCi8qIFJlbW92ZSB0aGUgYmFja2dyb3VuZCBpbWFnZSBhbmQgYm9yZGVycyBvbiBhIHNtYWxsZXIgd2luZG93IHNpemUgKi8KQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogIC5sb2dpbi1iZy1pbWFnZSB7CiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lICFpbXBvcnRhbnQ7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7CiAgICBmaWx0ZXI6IHVuc2V0ICFpbXBvcnRhbnQ7CiAgfQoKICAjb2t0YS1zaWduLWluLm1haW4tY29udGFpbmVyIHsKICAgIGJvcmRlcjogMDsKICAgIGJveC1zaGFkb3c6IG5vbmU7CiAgfQogICNva3RhLXNpZ24taW4uYXV0aC1jb250YWluZXIgewogICAgd2lkdGg6IGF1dG87CiAgICBtaW4td2lkdGg6IGF1dG87CiAgICBtYXJnaW4tcmlnaHQ6IDA7CiAgICBtYXJnaW4tbGVmdDogMDsKICB9CiAgI29rdGEtc2lnbi1pbiAuYXV0aC1jb250ZW50IHsKICAgIHdpZHRoOiAzMTZweDsKICAgIG1pbi13aWR0aDogMzAwcHg7CiAgICBtYXJnaW46IDBweCBhdXRvOwogIH0KfQoKLyojIHNvdXJjZU1hcHBpbmdVUkw9bG9naW5wYWdlLXRoZW1lLmNzcy5tYXAgKi8K", "base64"));
  res.end();

  return __filename;
};
