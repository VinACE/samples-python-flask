var path = require("path");

/**
 * GET /assets/js/mvc/loginpage/widget/okta-sign-in-no-jquery.js
 *
 * host: rain.okta1.com:1802
 * connection: keep-alive
 * user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.10; rv:48.0) Gecko/20100101 Firefox/48.0
 * accept: * / *
 * accept-encoding: gzip
 * accept-language: en-US
 * cookie: DT=DI0nMswYIoWShS9ivqmZyLvKg; t=default; JSESSIONID=6B317984A99E03B2418544BF0D76D230
 * cache-control: no-cache, no-store
 * pragma: no-cache
 */

module.exports = function (req, res) {
  res.statusCode = 200;

  res.setHeader("server", "Apache-Coyote/1.1");
  res.setHeader("accept-ranges", "bytes");
  res.setHeader("etag", "W/\"484452-1480866740000\"");
  res.setHeader("last-modified", "Sun, 04 Dec 2016 15:52:20 GMT");
  res.setHeader("content-type", "text/javascript");
  res.setHeader("content-length", "484452");
  res.setHeader("date", "Fri, 09 Dec 2016 09:22:29 GMT");

  res.setHeader("x-yakbak-tape", path.basename(__filename, ".js"));

  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("OH0sUVVFU1RJT046e2xhYmVsOiJmYWN0b3Iuc2VjdXJpdHlRdWVzdGlvbiIsZGVzY3JpcHRpb246ImZhY3Rvci5zZWN1cml0eVF1ZXN0aW9uLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtb2t0YS1zZWN1cml0eS1xdWVzdGlvbiIsc29ydE9yZGVyOjl9LFdJTkRPV1NfSEVMTE86e2xhYmVsOiJmYWN0b3Iud2luZG93c0hlbGxvIixkZXNjcmlwdGlvbjoiZmFjdG9yLndpbmRvd3NIZWxsby5zaWduaW4uZGVzY3JpcHRpb24iLGljb25DbGFzc05hbWU6Im1mYS13aW5kb3dzLWhlbGxvIixzb3J0T3JkZXI6MTB9LFUyRjp7bGFiZWw6ImZhY3Rvci51MmYiLGRlc2NyaXB0aW9uOiJmYWN0b3IudTJmLmRlc2NyaXB0aW9uIixpY29uQ2xhc3NOYW1lOiJtZmEtdTJmIixzb3J0T3JkZXI6MTF9fTtyZXR1cm4gZS5nZXRGYWN0b3JOYW1lPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIk9LVEEiPT09dCYmInRva2VuOnNvZnR3YXJlOnRvdHAiPT09ZT8iT0tUQV9WRVJJRlkiOiJPS1RBIj09PXQmJiJwdXNoIj09PWU/Ik9LVEFfVkVSSUZZX1BVU0giOiJHT09HTEUiPT09dD8iR09PR0xFX0FVVEgiOiJTWU1BTlRFQyI9PT10JiYidG9rZW4iPT09ZT8iU1lNQU5URUNfVklQIjoiUlNBIj09PXQmJiJ0b2tlbiI9PT1lPyJSU0FfU0VDVVJJRCI6IkRFTF9PQVRIIj09PXQmJiJ0b2tlbiI9PT1lPyJPTl9QUkVNIjoiRFVPIj09PXQmJiJ3ZWIiPT09ZT8iRFVPIjoiWVVCSUNPIj09PXQmJiJ0b2tlbjpoYXJkd2FyZSI9PT1lPyJZVUJJS0VZIjoiT0tUQSI9PT10JiYic21zIj09PWU/IlNNUyI6Ik9LVEEiPT09dCYmImNhbGwiPT09ZT8iQ0FMTCI6Ik9LVEEiPT09dCYmInF1ZXN0aW9uIj09PWU/IlFVRVNUSU9OIjoiRklETyI9PT10JiYid2ViYXV0aG4iPT09ZT8iV0lORE9XU19IRUxMTyI6IkZJRE8iPT09dCYmInUyZiI9PT1lPyJVMkYiOnZvaWQgMH0sZS5pc09rdGFWZXJpZnk9ZnVuY3Rpb24odCxlKXtyZXR1cm4iT0tUQSI9PT10JiYoInRva2VuOnNvZnR3YXJlOnRvdHAiPT09ZXx8InB1c2giPT09ZSl9LGUuZ2V0RmFjdG9yTGFiZWw9ZnVuY3Rpb24oaSxvKXt2YXIgcj1uW2UuZ2V0RmFjdG9yTmFtZShpLG8pXS5sYWJlbDtyZXR1cm4gdC5sb2MociwibG9naW4iKX0sZS5nZXRGYWN0b3JEZXNjcmlwdGlvbj1mdW5jdGlvbihpLG8pe3ZhciByPW5bZS5nZXRGYWN0b3JOYW1lKGksbyldLmRlc2NyaXB0aW9uO3JldHVybiB0LmxvYyhyLCJsb2dpbiIpfSxlLmdldEZhY3Rvckljb25DbGFzc05hbWU9ZnVuY3Rpb24odCxpKXtyZXR1cm4gbltlLmdldEZhY3Rvck5hbWUodCxpKV0uaWNvbkNsYXNzTmFtZX0sZS5nZXRGYWN0b3JTb3J0T3JkZXI9ZnVuY3Rpb24odCxpKXtyZXR1cm4gbltlLmdldEZhY3Rvck5hbWUodCxpKV0uc29ydE9yZGVyfSxlLmdldFJlbWVtYmVyRGV2aWNlVmFsdWU9ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuZ2V0KCJyZW1lbWJlckRldmljZUJ5RGVmYXVsdCIpfSxlLmdldFNlY3VyaXR5UXVlc3Rpb25MYWJlbD1mdW5jdGlvbihlKXt2YXIgbj10LmxvYygic2VjdXJpdHkuIitlLnF1ZXN0aW9uKTtyZXR1cm4gbi5pbmRleE9mKCJMMTBOX0VSUk9SIik8MD9uOmUucXVlc3Rpb25UZXh0fSxlfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oNiksbig1KSxuKDEwMiksbig1OSksbig4NCldLG89ZnVuY3Rpb24odCxlLG4saSl7ZnVuY3Rpb24gbyh0KXt2YXIgZT10LnRpdGxlLG49dC50ZXh0O3JldHVybiEoIWV8fCFufHxlPT09bil9ZnVuY3Rpb24gcih0KXtyZXR1cm4gbyh0KT90Ont0ZXh0OnQudGV4dHx8dH19cmV0dXJuIGkuZXh0ZW5kKHt0ZW1wbGF0ZTplLmNvbXBpbGUoJ1x0ICAgICAge3sjaWYgcGFyYW1zfX1cdCAgICAgICAge3sjaWYgcGFyYW1zLmlubmVyVG9vbHRpcH19XHQgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LXRvb2x0aXAgaWNvbiBmb3JtLWhlbHAtMTYiPjwvc3Bhbj5cdCAgICAgICAge3svaWZ9fVx0ICAgICAgICB7eyNpZiBwYXJhbXMuaWNvbn19XHQgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24gaW5wdXQtaWNvbiB7e3BhcmFtcy5pY29ufX0iPjwvc3Bhbj5cdCAgICAgICAge3svaWZ9fVx0ICAgICAge3svaWZ9fVx0ICAgICAgPGlucHV0IHR5cGU9Int7dHlwZX19IiBwbGFjZWhvbGRlcj0ie3twbGFjZWhvbGRlcn19IiBuYW1lPSJ7e25hbWV9fSIgXHQgICAgICAgIGlkPSJ7e2lucHV0SWR9fSIgdmFsdWU9Int7dmFsdWV9fSIgYXV0b2NvbXBsZXRlPSJvZmYiLz5cdCAgICAnKSxwb3N0UmVuZGVyOmZ1bmN0aW9uKCl7dmFyIGUsbj10aGlzLm9wdGlvbnMucGFyYW1zO24mJm4uaW5uZXJUb29sdGlwJiYoZT1yKG4uaW5uZXJUb29sdGlwKSx0aGlzLiQoIi5pbnB1dC10b29sdGlwIikucXRpcCh7Y29udGVudDplLHN0eWxlOntjbGFzc2VzOiJva3RhLXNpZ24taW4tdG9vbHRpcCBxdGlwLWN1c3RvbSBxdGlwLXNoYWRvdyJ9LHBvc2l0aW9uOntteToiYm90dG9tIGxlZnQiLGF0OiJ0b3AgY2VudGVyIixhZGp1c3Q6e21ldGhvZDoiZmxpcCJ9LHZpZXdwb3J0OnQoImJvZHkiKX0saGlkZTp7Zml4ZWQ6ITB9LHNob3c6e2RlbGF5OjB9fSkpfSxmb2N1czpmdW5jdGlvbigpe2lmKCFuLmlzSUUoKSlyZXR1cm4gaS5wcm90b3R5cGUuZm9jdXMuYXBwbHkodGhpcyxhcmd1bWVudHMpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMildLG89ZnVuY3Rpb24odCl7dmFyIGU9d2luZG93LlhNTEh0dHBSZXF1ZXN0LG49e30saT0id2l0aENyZWRlbnRpYWxzImluIG5ldyBlLG89InVuZGVmaW5lZCIhPXR5cGVvZiBYRG9tYWluUmVxdWVzdDtyZXR1cm4gbi5jb3JzSXNMaW1pdGVkPWZ1bmN0aW9uKCl7cmV0dXJuIG8mJiFpfSxuLmNvcnNJc05vdFN1cHBvcnRlZD1mdW5jdGlvbigpe3JldHVybiEoaXx8byl9LG4uY29yc0lzTm90RW5hYmxlZD1mdW5jdGlvbih0KXtyZXR1cm4gMD09PXQuc3RhdHVzfSxuLmxvY2FsU3RvcmFnZUlzTm90U3VwcG9ydGVkPWZ1bmN0aW9uKCl7dmFyIHQ9InRlc3QiO3RyeXtyZXR1cm4gbG9jYWxTdG9yYWdlLnNldEl0ZW0odCx0KSxsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSh0KSwhMX1jYXRjaChlKXtyZXR1cm4hMH19LG4uc3VwcG9ydHNQdXNoU3RhdGU9ZnVuY3Rpb24odCl7cmV0dXJuIHQ9dHx8d2luZG93LCEoIXQuaGlzdG9yeXx8IXQuaGlzdG9yeS5wdXNoU3RhdGUpfSxuLmlzSUU9ZnVuY3Rpb24oKXtyZXR1cm4vKG1zaWV8dHJpZGVudCkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpfSxuLmdldFVzZXJMYW5ndWFnZXM9ZnVuY3Rpb24oKXt2YXIgZSxuO3JldHVybiBuYXZpZ2F0b3IubGFuZ3VhZ2VzP25hdmlnYXRvci5sYW5ndWFnZXM6KGU9W10sbj1bImxhbmd1YWdlIiwidXNlckxhbmd1YWdlIiwiYnJvd3Nlckxhbmd1YWdlIiwic3lzdGVtTGFuZ3VhZ2UiXSx0LmVhY2gobixmdW5jdGlvbih0KXtuYXZpZ2F0b3JbdF0mJmUucHVzaChuYXZpZ2F0b3JbdF0pfSksZSl9LG59LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbigxMDQpXSxvPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuVmlldy5leHRlbmQoe3RlbXBsYXRlOidcdCAgICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJsaW5rIGhlbHAganMtYmFjayIgZGF0YS1zZT0iYmFjay1saW5rIj5cdCAgICAgICAge3tpMThuIGNvZGU9Im1mYS5iYWNrVG9GYWN0b3JzIiBidW5kbGU9ImxvZ2luIn19XHQgICAgICA8L2E+XHQgICAgJyxjbGFzc05hbWU6ImF1dGgtZm9vdGVyIixldmVudHM6eyJjbGljayAuanMtYmFjayI6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuYmFjaygpfX0sYmFjazpmdW5jdGlvbigpe3RoaXMuc3RhdGUuc2V0KCJuYXZpZ2F0ZURpciIsZS5ESVJFQ1RJT05fQkFDSyksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicHJldkxpbmsiKT90aGlzLm1vZGVsLmRvVHJhbnNhY3Rpb24oZnVuY3Rpb24odCl7cmV0dXJuIHQucHJldigpfSk6dGhpcy5vcHRpb25zLmFwcFN0YXRlLnRyaWdnZXIoIm5hdmlnYXRlIiwic2lnbmluL2Vucm9sbCIpfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXshKHQuZXhwb3J0cz17RElSRUNUSU9OX0JBQ0s6IkRJUkVDVElPTl9CQUNLIixSRUNPVkVSWV9UWVBFX1BBU1NXT1JEOiJQQVNTV09SRCIsUkVDT1ZFUllfVFlQRV9VTkxPQ0s6IlVOTE9DSyIsUkVDT1ZFUllfRkFDVE9SX1RZUEVfU01TOiJTTVMiLFJFQ09WRVJZX0ZBQ1RPUl9UWVBFX0VNQUlMOiJFTUFJTCIsUkVDT1ZFUllfRkFDVE9SX1RZUEVfQ0FMTDoiQ0FMTCIsU1VDQ0VTUzoiU1VDQ0VTUyIsRk9SR09UX1BBU1NXT1JEX0VNQUlMX1NFTlQ6IkZPUkdPVF9QQVNTV09SRF9FTUFJTF9TRU5UIixVTkxPQ0tfQUNDT1VOVF9FTUFJTF9TRU5UOiJVTkxPQ0tfQUNDT1VOVF9FTUFJTF9TRU5UIixDT05GSUdfRVJST1I6IkNPTkZJR19FUlJPUiIsVU5TVVBQT1JURURfQlJPV1NFUl9FUlJPUjoiVU5TVVBQT1JURURfQlJPV1NFUl9FUlJPUiIsT0FVVEhfRVJST1I6Ik9BVVRIX0VSUk9SIixBTExfT1BUSU9OQUxfTk9ORV9FTlJPTExFRDoiQUxMX09QVElPTkFMX05PTkVfRU5ST0xMRUQiLEFMTF9PUFRJT05BTF9TT01FX0VOUk9MTEVEOiJBTExfT1BUSU9OQUxfU09NRV9FTlJPTExFRCIsSEFTX1JFUVVJUkVEX05PTkVfRU5ST0xMRUQ6IkhBU19SRVFVSVJFRF9OT05FX0VOUk9MTEVEIixIQVNfUkVRVUlSRURfU09NRV9SRVFVSVJFRF9FTlJPTExFRDoiSEFTX1JFUVVJUkVEX1NPTUVfUkVRVUlSRURfRU5ST0xMRUQiLEhBU19SRVFVSVJFRF9BTExfUkVRVUlSRURfRU5ST0xMRUQ6IkhBU19SRVFVSVJFRF9BTExfUkVRVUlSRURfRU5ST0xMRUQiLFBSSU1BUllfQVVUSDoiUFJJTUFSWV9BVVRIIixGT1JHT1RfUEFTU1dPUkQ6IkZPUkdPVF9QQVNTV09SRCIsVU5MT0NLX0FDQ09VTlQ6IlVOTE9DS19BQ0NPVU5UIn0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDQxKSxuKDEwMiksbigxMDgpLG4oMTA5KSxuKDExMCksbigxMTIpLG4oMTA2KSxuKDExNCksbigxMTUpLG4oMTE3KSxuKDEwNyksbigxMTEpLG4oOCldLG89ZnVuY3Rpb24odCxlLG4saSxvLHIscyxhLGwsYyx1LHAsaCxkKXtmdW5jdGlvbiBmKHQsZSl7cmV0dXJuIHYuZmluZCh0LnN0YXRlTGVzc1JvdXRlSGFuZGxlcnMsZnVuY3Rpb24obil7cmV0dXJuIGU9PT10W25dfSl9ZnVuY3Rpb24gbSh0LGUpe3JldHVybiEhdCYmKHQhPT1hfHxlLmdldCgiZmVhdHVyZXMuc2VjdXJpdHlJbWFnZSIpKX1mdW5jdGlvbiBnKHQsZSxuLGkpe3ZhciBvPXNldFRpbWVvdXQoZnVuY3Rpb24oKXt0LnRyaWdnZXIoImxvYWRpbmciLCEwKX0sMjAwKTtyZXR1cm4gZC5sb2FkTGFuZ3VhZ2UodC5nZXQoImxhbmd1YWdlQ29kZSIpLGUse2Jhc2VVcmw6bixyZXdyaXRlOml9KS50aGVuKGZ1bmN0aW9uKCl7Y2xlYXJUaW1lb3V0KG8pLHQudHJpZ2dlcigibG9hZGluZyIsITEpfSl9dmFyIHY9dC5fLHk9dC4kO3JldHVybiB0LlJvdXRlci5leHRlbmQoe0V2ZW50czplLkV2ZW50cyxpbml0aWFsaXplOmZ1bmN0aW9uKGUpe3ZhciBvO3RoaXMuc2V0dGluZ3M9bmV3IHIodi5vbWl0KGUsImVsIiwiYXV0aENsaWVudCIpLHtwYXJzZTohMH0pLHRoaXMuc2V0dGluZ3Muc2V0QXV0aENsaWVudChlLmF1dGhDbGllbnQpLGUuZWx8fHRoaXMuc2V0dGluZ3MuY2FsbEdsb2JhbEVycm9yKG5ldyBoLkNvbmZpZ0Vycm9yKHQubG9jKCJlcnJvci5yZXF1aXJlZC5lbCIpKSksbi5jb3JzSXNMaW1pdGVkKCkmJih5LnN1cHBvcnQuY29ycz0hMCxvPXt9LG9bdGhpcy5zZXR0aW5ncy5nZXQoImJhc2VVcmwiKV09Ii9jb3JzL3Byb3h5IixpLnhkb21haW4uc2xhdmVzKG8pKSx5KCJib2R5ID4gZGl2Iikub24oImNsaWNrIixmdW5jdGlvbigpe30pLHRoaXMuYXBwU3RhdGU9bmV3IGMoe2Jhc2VVcmw6dGhpcy5zZXR0aW5ncy5nZXQoImJhc2VVcmwiKSxzZXR0aW5nczp0aGlzLnNldHRpbmdzfSx7cGFyc2U6ITB9KTt2YXIgYT1uZXcgbCh7YXBwU3RhdGU6dGhpcy5hcHBTdGF0ZX0pO3QuJChlLmVsKS5hcHBlbmQoYS5yZW5kZXIoKS4kZWwpLHRoaXMuZWw9IiNva3RhLXNpZ24taW4iLHRoaXMuaGVhZGVyPW5ldyBzKHtlbDp0aGlzLmVsLGFwcFN0YXRlOnRoaXMuYXBwU3RhdGUsc2V0dGluZ3M6dGhpcy5zZXR0aW5nc30pLHRoaXMubGlzdGVuVG8odGhpcy5hcHBTdGF0ZSwiY2hhbmdlOnRyYW5zYWN0aW9uRXJyb3IiLGZ1bmN0aW9uKHQsZSl7dS5yb3V0ZUFmdGVyQXV0aFN0YXR1c0NoYW5nZSh0aGlzLGUpfSksdGhpcy5saXN0ZW5Ubyh0aGlzLmFwcFN0YXRlLCJjaGFuZ2U6dHJhbnNhY3Rpb24iLGZ1bmN0aW9uKHQsZSl7dS5yb3V0ZUFmdGVyQXV0aFN0YXR1c0NoYW5nZSh0aGlzLG51bGwsZS5kYXRhKX0pLHRoaXMubGlzdGVuVG8odGhpcy5hcHBTdGF0ZSwibmF2aWdhdGUiLGZ1bmN0aW9uKHQpe3RoaXMubmF2aWdhdGUodCx7dHJpZ2dlcjohMH0pfSl9LGV4ZWN1dGU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLnNldHRpbmdzLmdldCgicmVjb3ZlcnlUb2tlbiIpO2lmKG4pcmV0dXJuIHRoaXMuc2V0dGluZ3MudW5zZXQoInJlY292ZXJ5VG9rZW4iKSx2b2lkIHRoaXMubmF2aWdhdGUodS5jcmVhdGVSZWNvdmVyeVVybChuKSx7dHJpZ2dlcjohMH0pO3ZhciBpPXRoaXMuc2V0dGluZ3MuZ2V0KCJzdGF0ZVRva2VuIik7aWYoaSlyZXR1cm4gdGhpcy5zZXR0aW5ncy51bnNldCgic3RhdGVUb2tlbiIpLHZvaWQgdGhpcy5uYXZpZ2F0ZSh1LmNyZWF0ZVJlZnJlc2hVcmwoaSkse3RyaWdnZXI6ITB9KTt2YXIgbz10aGlzLmFwcFN0YXRlLmdldCgidHJhbnNhY3Rpb24iKTtyZXR1cm4gbyYmby5kYXRhfHxmKHRoaXMsdCk/dm9pZCB0LmFwcGx5KHRoaXMsZSk6dGhpcy5zZXR0aW5ncy5nZXRBdXRoQ2xpZW50KCkudHguZXhpc3RzKCk/dm9pZCB0aGlzLm5hdmlnYXRlKHUuY3JlYXRlUmVmcmVzaFVybCgpLHt0cmlnZ2VyOiEwfSk6dm9pZCB0aGlzLm5hdmlnYXRlKCIiLHt0cmlnZ2VyOiEwfSl9LG5hdmlnYXRlOmZ1bmN0aW9uKG4saSl7cmV0dXJuIHRoaXMuc2V0dGluZ3MuZ2V0KCJmZWF0dXJlcy5yb3V0ZXIiKT90LlJvdXRlci5wcm90b3R5cGUubmF2aWdhdGUuYXBwbHkodGhpcyxhcmd1bWVudHMpOmkmJmkudHJpZ2dlcj9lLmhpc3RvcnkubG9hZFVybChuKTp2b2lkIDB9LHJlbmRlcjpmdW5jdGlvbih0LGUpe2V8fChlPXt9KTt2YXIgbj1lLkJlYWNvbixpPXYuZXh0ZW5kKHtzZXR0aW5nczp0aGlzLnNldHRpbmdzLGFwcFN0YXRlOnRoaXMuYXBwU3RhdGV9LHYub21pdChlLCJCZWFjb24iKSk7aWYodGhpcy5oZWFkZXIucmVuZGVyZWQoKXx8KHRoaXMuZWw9dGhpcy5oZWFkZXIucmVuZGVyKCkuZ2V0Q29udGVudEVsKCkpLCFkLmlzTG9hZGVkKHRoaXMuYXBwU3RhdGUuZ2V0KCJsYW5ndWFnZUNvZGUiKSkpcmV0dXJuIGcodGhpcy5hcHBTdGF0ZSx0aGlzLnNldHRpbmdzLmdldCgiaTE4biIpLHRoaXMuc2V0dGluZ3MuZ2V0KCJhc3NldHMuYmFzZVVybCIpLHRoaXMuc2V0dGluZ3MuZ2V0KCJhc3NldHMucmV3cml0ZSIpKS50aGVuKHYuYmluZCh0aGlzLnJlbmRlcix0aGlzLHQsZSkpLmRvbmUoKTt2YXIgbz10aGlzLmNvbnRyb2xsZXI7dGhpcy5jb250cm9sbGVyPW5ldyB0KGkpLHRoaXMubGlzdGVuVG8odGhpcy5jb250cm9sbGVyLCJhbGwiLHRoaXMudHJpZ2dlciksdGhpcy5jb250cm9sbGVyLmZldGNoSW5pdGlhbERhdGEoKS50aGVuKHYuYmluZChmdW5jdGlvbigpe3JldHVybiBtKG4sdGhpcy5zZXR0aW5ncyl8fChuPW51bGwpLHRoaXMuaGVhZGVyLnNldEJlYWNvbihuLGkpLHRoaXMuY29udHJvbGxlci5yZW5kZXIoKSxvP3Auc3dhcFBhZ2VzKHskcGFyZW50OnRoaXMuZWwsJG9sZFJvb3Q6by4kZWwsJG5ld1Jvb3Q6dGhpcy5jb250cm9sbGVyLiRlbCxkaXI6by5zdGF0ZS5nZXQoIm5hdmlnYXRlRGlyIiksY3R4OnRoaXMsc3VjY2VzczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuYXBwU3RhdGUuZ2V0KCJmbGFzaEVycm9yIiksZT10aGlzLmNvbnRyb2xsZXIubW9kZWw7by5yZW1vdmUoKSxvLiRlbC5yZW1vdmUoKSx0aGlzLmNvbnRyb2xsZXIucG9zdFJlbmRlckFuaW1hdGlvbigpLHQmJihlLnRyaWdnZXIoImVycm9yIixlLHtyZXNwb25zZUpTT046e2Vycm9yU3VtbWFyeTp0fX0pLHRoaXMuYXBwU3RhdGUudW5zZXQoImZsYXNoRXJyb3IiKSl9fSk6KHRoaXMuZWwuYXBwZW5kKHRoaXMuY29udHJvbGxlci5lbCksdm9pZCB0aGlzLmNvbnRyb2xsZXIucG9zdFJlbmRlckFuaW1hdGlvbigpKX0sdGhpcykpLmZhaWwoZnVuY3Rpb24oKXtvJiYoby5yZW1vdmUoKSxvLiRlbC5yZW1vdmUoKSl9KS5kb25lKCl9LHN0YXJ0OmZ1bmN0aW9uKCl7dmFyIGU9ITE7d2luZG93LmFkZEV2ZW50TGlzdGVuZXImJih3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigicG9wc3RhdGUiLHYuYmluZChmdW5jdGlvbih0KXt0aGlzLmNvbnRyb2xsZXIuYmFjayYmKHQucHJldmVudERlZmF1bHQoKSx0LnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbigpLHRoaXMuY29udHJvbGxlci5iYWNrKCkpfSx0aGlzKSksZT1uLnN1cHBvcnRzUHVzaFN0YXRlKCkpLHQuUm91dGVyLnByb3RvdHlwZS5zdGFydC5jYWxsKHRoaXMse3B1c2hTdGF0ZTplfSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbigxMDcpXSxvPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbih0LGUpe3ZhciBuPWUuZ2V0KCJzZWN1cml0eUltYWdlIiksaT1lLmdldCgiaXNVbmRlZmluZWRVc2VyIiksbz1lLmdldCgiaXNOZXdVc2VyIikscz0haSYmIW87cmV0dXJuIHQuY3NzKCJiYWNrZ3JvdW5kLWltYWdlIiwiIiksdC5yZW1vdmVDbGFzcygibmV3LXVzZXIgdW5kZWZpbmVkLXVzZXIiKSxvP3ZvaWQgdC5hZGRDbGFzcygibmV3LXVzZXIiKTppP3ZvaWQgdC5hZGRDbGFzcygidW5kZWZpbmVkLXVzZXIiKTpzP3ZvaWQgdC5jc3MoImJhY2tncm91bmQtaW1hZ2UiLCJ1cmwoIityLmVzY2FwZShuKSsiKSIpOnZvaWQgMH1mdW5jdGlvbiBpKGUsbixpKXtlLnF0aXAoe3ByZXJlbmRlcjohMCxjb250ZW50Ont0ZXh0OnQubG9jKCJwcmltYXJ5YXV0aC5uZXdVc2VyLnRvb2x0aXAiLCJsb2dpbiIsW3IuZXNjYXBlKG4pXSksYnV0dG9uOnQubG9jKCJwcmltYXJ5YXV0aC5uZXdVc2VyLnRvb2x0aXAuY2xvc2UiLCJsb2dpbiIpfSxzdHlsZTp7Y2xhc3Nlczoib2t0YS1zZWN1cml0eS1pbWFnZS10b29sdGlwIHNlY3VyaXR5LWltYWdlLXF0aXAgcXRpcC1jdXN0b20gcXRpcC1zaGFkb3cgcXRpcC1yb3VuZGVkIix0aXA6e2hlaWdodDoxMix3aWR0aDoxNn19LHBvc2l0aW9uOntteToidG9wIGNlbnRlciIsYXQ6ImJvdHRvbSBjZW50ZXIiLGFkanVzdDp7bWV0aG9kOiJmbGlwIix5Oi0yMn0sdmlld3BvcnQ6cygiYm9keSIpfSxoaWRlOntldmVudDohMSxmaXhlZDohMH0sc2hvdzp7ZXZlbnQ6ITEsZGVsYXk6MjAwfX0pLGUucXRpcCgidG9nZ2xlIixpKX1mdW5jdGlvbiBvKHQsbyxyKXt2YXIgcz10LmZpbmQoIi5hdXRoLWJlYWNvbi1zZWN1cml0eSIpLGE9dC5maW5kKCIuanMtYXV0aC1iZWFjb24tYm9yZGVyIiksbD0hby5nZXQoImlzVW5kZWZpbmVkVXNlciIpLGM9by5nZXQoImlzTmV3VXNlciIpLHU9dC5maW5kKCIucmFkaWFsLXByb2dyZXNzLWJhciIpLHA9by5nZXQoImJhc2VVcmwiKS5tYXRjaCgvaHR0cHM/OlwvXC8oLlteXC9dKykvKVsxXSxoPTIwMDtyZXR1cm4gcj92b2lkKGw/KHMucXRpcCgiZGVzdHJveSIpLGEucmVtb3ZlQ2xhc3MoImF1dGgtYmVhY29uLWJvcmRlciIpLGUucmFkaWFsUHJvZ3Jlc3NCYXIoeyRlbDp1LHN3YXA6ZnVuY3Rpb24oKXtzLmZhZGVPdXQoaCxmdW5jdGlvbigpe24ocyxvKSxzLmZhZGVJbihoKX0pfX0pLnRoZW4oZnVuY3Rpb24oKXthLmFkZENsYXNzKCJhdXRoLWJlYWNvbi1ib3JkZXIiKX0pLnRoZW4oZnVuY3Rpb24oKXtpKHMscCxjKX0pKToocy5xdGlwKCJkZXN0cm95Iikscy5mYWRlT3V0KGgsZnVuY3Rpb24oKXtuKHMsbyksYS5yZW1vdmVDbGFzcygiYXV0aC1iZWFjb24tYm9yZGVyIikscy5mYWRlSW4oaCl9KSkpOihuKHMsbyksdm9pZCBhLnRvZ2dsZUNsYXNzKCJhdXRoLWJlYWNvbi1ib3JkZXIiLGwpKX12YXIgcj10Ll8scz10LiQ7cmV0dXJuIHQuVmlldy5leHRlbmQoe3RlbXBsYXRlOidcdCAgICA8ZGl2IGNsYXNzPSJiZWFjb24tYmxhbmsiPlx0ICAgICAgPGRpdiBjbGFzcz0icmFkaWFsLXByb2dyZXNzLWJhciI+XHQgICAgICAgIDxkaXYgY2xhc3M9ImNpcmNsZSBsZWZ0Ij48L2Rpdj5cdCAgICAgICAgPGRpdiBjbGFzcz0iY2lyY2xlIHJpZ2h0Ij48L2Rpdj5cdCAgICAgIDwvZGl2Plx0ICAgIDwvZGl2Plx0ICAgIDxkaXYgY2xhc3M9ImJnLWhlbHBlciBhdXRoLWJlYWNvbiBhdXRoLWJlYWNvbi1zZWN1cml0eSIgZGF0YS1zZT0ic2VjdXJpdHktYmVhY29uIj5cdCAgICAgIDxkaXYgY2xhc3M9Im9rdGEtc2lnbi1pbi1iZWFjb24tYm9yZGVyIGF1dGgtYmVhY29uLWJvcmRlciBqcy1hdXRoLWJlYWNvbi1ib3JkZXIiPlx0ICAgICAgPC9kaXY+XHQgICAgPC9kaXY+XHQgICAgJyxjbGFzc05hbWU6ImpzLXNlY3VyaXR5LWJlYWNvbiIsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0aGlzLnVwZGF0ZT1yLnBhcnRpYWwobyx0aGlzLiRlbCx0LmFwcFN0YXRlKSx0aGlzLmxpc3RlblRvKHQuYXBwU3RhdGUsImNoYW5nZTpzZWN1cml0eUltYWdlIix0aGlzLnVwZGF0ZSksdGhpcy5saXN0ZW5Ubyh0LmFwcFN0YXRlLCJsb2FkaW5nIixmdW5jdGlvbih0KXt0aGlzLiRlbC50b2dnbGVDbGFzcygiYmVhY29uLWxvYWRpbmciLHQpfSksdGhpcy5vcHRpb25zLmFwcFN0YXRlLnNldCgiYmVhY29uVHlwZSIsInNlY3VyaXR5Iil9LHBvc3RSZW5kZXI6ZnVuY3Rpb24oKXt0aGlzLnVwZGF0ZSghMSl9LGVxdWFsczpmdW5jdGlvbih0KXtyZXR1cm4gdCYmdGhpcyBpbnN0YW5jZW9mIHR9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbig5KSxuKDEwNCldLG89ZnVuY3Rpb24odCxlKXtmdW5jdGlvbiBuKGUsbixpKXt2YXIgbz10LmRlZmVyKCk7cmV0dXJuIGUuYW5pbWF0ZSh7InRleHQtaW5kZW50IjoxfSx7ZHVyYXRpb246MjAwLGVhc2luZzoic3dpbmciLHN0ZXA6ZnVuY3Rpb24odCxvKXtvLnN0YXJ0PW4sby5lbmQ9aSxlLmNzcygidHJhbnNmb3JtIiwic2NhbGUoIit0KyIsICIrdCsiKSIpfSxhbHdheXM6ZnVuY3Rpb24oKXtvLnJlc29sdmUoZSl9fSksby5wcm9taXNlfWZ1bmN0aW9uIGkoZSxuLGkpe3ZhciBvPXQuZGVmZXIoKTtyZXR1cm4gZS5hbmltYXRlKHsidGV4dC1pbmRlbnQiOjF9LHtkdXJhdGlvbjoxNTAsZWFzaW5nOiJzd2luZyIsc3RlcDpmdW5jdGlvbih0LG8pe28uc3RhcnQ9bixvLmVuZD1pLGUuY3NzKCJ0cmFuc2Zvcm0iLCJyb3RhdGUoIit0KyJkZWcpIil9LGFsd2F5czpmdW5jdGlvbigpe28ucmVzb2x2ZShlKX19KSxvLnByb21pc2V9dmFyIG89MjAwLHI9e307cmV0dXJuIHIuc3dhcFBhZ2VzPWZ1bmN0aW9uKG4pe3ZhciBpPXQuZGVmZXIoKSxyPW4uJHBhcmVudCxzPW4uJG9sZFJvb3QsYT1uLiRuZXdSb290LGw9bi5zdWNjZXNzLGM9bi5jdHgsdT0idHJhbnNpdGlvbi1mcm9tLXJpZ2h0IjtyZXR1cm4gbi5kaXImJm4uZGlyPT09ZS5ESVJFQ1RJT05fQkFDSyYmKHU9InRyYW5zaXRpb24tZnJvbS1sZWZ0IiksYS5hZGRDbGFzcyh1KSxyLmFwcGVuZChhKSxyLmFkZENsYXNzKCJhbmltYXRpb24tY29udGFpbmVyLW92ZXJmbG93IiksYS5hbmltYXRlKHtsZWZ0OiIwcHgiLHRvcDoiMHB4IixvcGFjaXR5OjF9LG8sZnVuY3Rpb24oKXtyLnJlbW92ZUNsYXNzKCJhbmltYXRpb24tY29udGFpbmVyLW92ZXJmbG93IiksYS5yZW1vdmVDbGFzcyh1KSxhLnJlbW92ZUF0dHIoInN0eWxlIiksbC5jYWxsKGMpLGkucmVzb2x2ZSgpfSkscy5hbmltYXRlKHtoZWlnaHQ6YS5oZWlnaHQoKSxvcGFjaXR5OjB9LC44Km8pLGkucHJvbWlzZX0sci5zd2FwQmVhY29ucz1mdW5jdGlvbih0KXt2YXIgZT10LiRlbCxuPXQuc3dhcCxpPXQuY3R4O3JldHVybiB0aGlzLmltcGxvZGUoZSkudGhlbihmdW5jdGlvbigpe3JldHVybiBuLmNhbGwoaSksZX0pLnRoZW4odGhpcy5leHBsb2RlKX0sci5leHBsb2RlPWZ1bmN0aW9uKHQpe3JldHVybiBuKHQsMCwxKX0sci5pbXBsb2RlPWZ1bmN0aW9uKHQpe3JldHVybiBuKHQsMSwwKX0sci5yYWRpYWxQcm9ncmVzc0Jhcj1mdW5jdGlvbih0KXt2YXIgZT10LiRlbCxuPXQuc3dhcCxvPWUuY2hpbGRyZW4oKTtyZXR1cm4gaShvLDAsMTgwKS50aGVuKGZ1bmN0aW9uKCl7ZS5jc3Moe2NsaXA6ImF1dG8ifSl9KS50aGVuKGZ1bmN0aW9uKCl7dmFyIHQ9by5lcSgwKTtyZXR1cm4gbigpLGkodCwxODAsMzYwKX0pLnRoZW4oZnVuY3Rpb24oKXtlLmNzcyh7Y2xpcDoicmVjdCgwcHgsIDk2cHgsIDk2cHgsIDQ4cHgpIn0pLG8uY3NzKHt0cmFuc2Zvcm06InJvdGF0ZSgwZGVnKSIsInRleHQtaW5kZW50IjoiMXB4In0pfSl9LHJ9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8saSxyOwovLyBKYWltZSBQaWxsb3JhIDxkZXZAanBpbGxvcmEuY29tPiAtIE1JVCBDb3B5cmlnaHQgMjAxNQooZnVuY3Rpb24obixzKXsKLy8gSmFpbWUgUGlsbG9yYSA8ZGV2QGpwaWxsb3JhLmNvbT4gLSBNSVQgQ29weXJpZ2h0IDIwMTUKKGZ1bmN0aW9uKHQsbil7dmFyIHIscyxhLGwsYyx1LHAsaCxkLGYsbSxnLHYseSxfLGIsdyxTLGsseCxFLFQsQyxBLE8sUj1bXS5pbmRleE9mfHxmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPXRoaXMubGVuZ3RoO2U8bjtlKyspaWYoZSBpbiB0aGlzJiZ0aGlzW2VdPT09dClyZXR1cm4gZTtyZXR1cm4tMX07Uz10LmRvY3VtZW50LHM9ImJlZm9yZSIscj0iYWZ0ZXIiLG09InJlYWR5U3RhdGUiLGY9ImFkZEV2ZW50TGlzdGVuZXIiLGQ9InJlbW92ZUV2ZW50TGlzdGVuZXIiLGM9ImRpc3BhdGNoRXZlbnQiLF89IlhNTEh0dHBSZXF1ZXN0Iix1PSJGb3JtRGF0YSIsZz1bImxvYWQiLCJsb2FkZW5kIiwibG9hZHN0YXJ0Il0sYT1bInByb2dyZXNzIiwiYWJvcnQiLCJlcnJvciIsInRpbWVvdXQiXSxFPXBhcnNlSW50KCgvbXNpZSAoXGQrKS8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpfHxbXSlbMV0pLGlzTmFOKEUpJiYoRT1wYXJzZUludCgoL3RyaWRlbnRcLy4qOyBydjooXGQrKS8uZXhlYyhuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkpfHxbXSlbMV0pKSwoTz1BcnJheS5wcm90b3R5cGUpLmluZGV4T2Z8fChPLmluZGV4T2Y9ZnVuY3Rpb24odCl7dmFyIGUsbixpLG87Zm9yKGU9aT0wLG89dGhpcy5sZW5ndGg7aTxvO2U9KytpKWlmKG49dGhpc1tlXSxuPT09dClyZXR1cm4gZTtyZXR1cm4tMX0pLEM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwodCxlKX0sdz1mdW5jdGlvbih0KXtyZXR1cm4icmV0dXJuVmFsdWUiPT09dHx8InRvdGFsU2l6ZSI9PT10fHwicG9zaXRpb24iPT09dH0seD1mdW5jdGlvbih0LGUpe3ZhciBuLGk7Zm9yKG4gaW4gdClpZihpPXRbbl0sIXcobikpdHJ5e2Vbbl09dFtuXX1jYXRjaChvKXt9cmV0dXJuIGV9LFQ9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLG8scixzO2ZvcihvPWZ1bmN0aW9uKHQpe3JldHVybiBmdW5jdGlvbihpKXt2YXIgbyxyLHM7bz17fTtmb3IociBpbiBpKXcocil8fChzPWlbcl0sb1tyXT1zPT09ZT9uOnMpO3JldHVybiBuW2NdKHQsbyl9fSxyPTAscz10Lmxlbmd0aDtyPHM7cisrKWk9dFtyXSxuLl9oYXMoaSkmJihlWyJvbiIraV09byhpKSl9LGs9ZnVuY3Rpb24odCl7dmFyIGU7aWYobnVsbCE9Uy5jcmVhdGVFdmVudE9iamVjdClyZXR1cm4gZT1TLmNyZWF0ZUV2ZW50T2JqZWN0KCksZS50eXBlPXQsZTt0cnl7cmV0dXJuIG5ldyBFdmVudCh0KX1jYXRjaChuKXtyZXR1cm57dHlwZTp0fX19LGw9ZnVuY3Rpb24odCl7dmFyIGUsaSxvO3JldHVybiBpPXt9LG89ZnVuY3Rpb24odCl7cmV0dXJuIGlbdF18fFtdfSxlPXt9LGVbZl09ZnVuY3Rpb24odCxlLHIpe2lbdF09byh0KSxpW3RdLmluZGV4T2YoZSk+PTB8fChyPXI9PT1uP2lbdF0ubGVuZ3RoOnIsaVt0XS5zcGxpY2UociwwLGUpKX0sZVtkXT1mdW5jdGlvbih0LGUpe3ZhciByO3JldHVybiB0PT09bj92b2lkKGk9e30pOihlPT09biYmKGlbdF09W10pLHI9byh0KS5pbmRleE9mKGUpLHZvaWQociE9PS0xJiZvKHQpLnNwbGljZShyLDEpKSl9LGVbY109ZnVuY3Rpb24oKXt2YXIgaSxyLHMsYSxsLGMsdSxwO2ZvcihpPUMoYXJndW1lbnRzKSxyPWkuc2hpZnQoKSx0fHwoaVswXT14KGlbMF0sayhyKSkpLGE9ZVsib24iK3JdLGEmJmEuYXBwbHkobixpKSxwPW8ocikuY29uY2F0KG8oIioiKSkscz1jPTAsdT1wLmxlbmd0aDtjPHU7cz0rK2MpbD1wW3NdLGwuYXBwbHkobixpKX0sZS5faGFzPWZ1bmN0aW9uKHQpe3JldHVybiEoIWlbdF0mJiFlWyJvbiIrdF0pfSx0JiYoZS5saXN0ZW5lcnM9ZnVuY3Rpb24odCl7cmV0dXJuIEMobyh0KSl9LGUub249ZVtmXSxlLm9mZj1lW2RdLGUuZmlyZT1lW2NdLGUub25jZT1mdW5jdGlvbih0LG4pe3ZhciBpO3JldHVybiBpPWZ1bmN0aW9uKCl7cmV0dXJuIGUub2ZmKHQsaSksbi5hcHBseShudWxsLGFyZ3VtZW50cyl9LGUub24odCxpKX0sZS5kZXN0cm95PWZ1bmN0aW9uKCl7cmV0dXJuIGk9e319KSxlfSxBPWwoITApLEEuRXZlbnRFbWl0dGVyPWwsQVtzXT1mdW5jdGlvbih0LGUpe2lmKHQubGVuZ3RoPDF8fHQubGVuZ3RoPjIpdGhyb3ciaW52YWxpZCBob29rIjtyZXR1cm4gQVtmXShzLHQsZSl9LEFbcl09ZnVuY3Rpb24odCxlKXtpZih0Lmxlbmd0aDwyfHx0Lmxlbmd0aD4zKXRocm93ImludmFsaWQgaG9vayI7cmV0dXJuIEFbZl0ocix0LGUpfSxBLmVuYWJsZT1mdW5jdGlvbigpe3RbX109eSxwJiYodFt1XT12KX0sQS5kaXNhYmxlPWZ1bmN0aW9uKCl7dFtfXT1BW19dLHRbdV09cH0sYj1BLmhlYWRlcnM9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8scixzLGEsbCxjLHU7c3dpdGNoKG51bGw9PWUmJihlPXt9KSx0eXBlb2YgdCl7Y2FzZSJvYmplY3QiOmk9W107Zm9yKG8gaW4gdClzPXRbb10scj1vLnRvTG93ZXJDYXNlKCksaS5wdXNoKCIiK3IrIjpcdCIrcyk7cmV0dXJuIGkuam9pbigiXG4iKTtjYXNlInN0cmluZyI6Zm9yKGk9dC5zcGxpdCgiXG4iKSxsPTAsYz1pLmxlbmd0aDtsPGM7bCsrKW49aVtsXSwvKFteOl0rKTpccyooLispLy50ZXN0KG4pJiYocj1udWxsIT0odT1SZWdFeHAuJDEpP3UudG9Mb3dlckNhc2UoKTp2b2lkIDAsYT1SZWdFeHAuJDIsbnVsbD09ZVtyXSYmKGVbcl09YSkpO3JldHVybiBlfX0scD10W3VdLHY9ZnVuY3Rpb24odCl7dmFyIGU7dGhpcy5mZD10P25ldyBwKHQpOm5ldyBwLHRoaXMuZm9ybT10LGU9W10sT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsImVudHJpZXMiLHtnZXQ6ZnVuY3Rpb24oKXt2YXIgbjtyZXR1cm4gbj10P0ModC5xdWVyeVNlbGVjdG9yQWxsKCJpbnB1dCxzZWxlY3QiKSkuZmlsdGVyKGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiJjaGVja2JveCIhPT0oZT10LnR5cGUpJiYicmFkaW8iIT09ZXx8dC5jaGVja2VkfSkubWFwKGZ1bmN0aW9uKHQpe3JldHVyblt0Lm5hbWUsImZpbGUiPT09dC50eXBlP3QuZmlsZXM6dC52YWx1ZV19KTpbXSxuLmNvbmNhdChlKX19KSx0aGlzLmFwcGVuZD1mdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt2YXIgbjtyZXR1cm4gbj1DKGFyZ3VtZW50cyksZS5wdXNoKG4pLHQuZmQuYXBwZW5kLmFwcGx5KHQuZmQsbil9fSh0aGlzKX0scCYmKEFbdV09cCx0W3VdPXYpLGg9dFtfXSxBW19dPWgseT10W19dPWZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksbyx1LHAsaCxkLHksdyxTLGssQyxPLE4sSTtyZXR1cm4gdD0tMSxJPW5ldyBBW19dLHk9e30saz1udWxsLHU9dm9pZCAwLEM9dm9pZCAwLHc9dm9pZCAwLGQ9ZnVuY3Rpb24oKXt2YXIgZSxuLGksbztpZih3LnN0YXR1cz1rfHxJLnN0YXR1cyxrPT09dCYmRTwxMHx8KHcuc3RhdHVzVGV4dD1JLnN0YXR1c1RleHQpLGshPT10KXtvPWIoSS5nZXRBbGxSZXNwb25zZUhlYWRlcnMoKSk7Zm9yKGUgaW4gbylpPW9bZV0sdy5oZWFkZXJzW2VdfHwobj1lLnRvTG93ZXJDYXNlKCksdy5oZWFkZXJzW25dPWkpfX0saD1mdW5jdGlvbigpe0kucmVzcG9uc2VUeXBlJiYidGV4dCIhPT1JLnJlc3BvbnNlVHlwZT8iZG9jdW1lbnQiPT09SS5yZXNwb25zZVR5cGU/KHcueG1sPUkucmVzcG9uc2VYTUwsdy5kYXRhPUkucmVzcG9uc2VYTUwpOncuZGF0YT1JLnJlc3BvbnNlOih3LnRleHQ9SS5yZXNwb25zZVRleHQsdy5kYXRhPUkucmVzcG9uc2VUZXh0KSwicmVzcG9uc2VVUkwiaW4gSSYmKHcuZmluYWxVcmw9SS5yZXNwb25zZVVSTCl9LE49ZnVuY3Rpb24oKXtvLnN0YXR1cz13LnN0YXR1cyxvLnN0YXR1c1RleHQ9dy5zdGF0dXNUZXh0fSxPPWZ1bmN0aW9uKCl7InRleHQiaW4gdyYmKG8ucmVzcG9uc2VUZXh0PXcudGV4dCksInhtbCJpbiB3JiYoby5yZXNwb25zZVhNTD13LnhtbCksImRhdGEiaW4gdyYmKG8ucmVzcG9uc2U9dy5kYXRhKSwiZmluYWxVcmwiaW4gdyYmKG8ucmVzcG9uc2VVUkw9dy5maW5hbFVybCl9LGk9ZnVuY3Rpb24odCl7Zm9yKDt0PmUmJmU8NDspb1ttXT0rK2UsMT09PWUmJm9bY10oImxvYWRzdGFydCIse30pLDI9PT1lJiZOKCksND09PWUmJihOKCksTygpKSxvW2NdKCJyZWFkeXN0YXRlY2hhbmdlIix7fSksND09PWUmJnNldFRpbWVvdXQobiwwKX0sbj1mdW5jdGlvbigpe3V8fG9bY10oImxvYWQiLHt9KSxvW2NdKCJsb2FkZW5kIix7fSksdSYmKG9bbV09MCl9LGU9MCxTPWZ1bmN0aW9uKHQpe3ZhciBlLG47cmV0dXJuIDQhPT10P3ZvaWQgaSh0KTooZT1BLmxpc3RlbmVycyhyKSxuPWZ1bmN0aW9uKCl7dmFyIHQ7cmV0dXJuIGUubGVuZ3RoPyh0PWUuc2hpZnQoKSwyPT09dC5sZW5ndGg/KHQoeSx3KSxuKCkpOjM9PT10Lmxlbmd0aCYmeS5hc3luYz90KHksdyxuKTpuKCkpOmkoNCl9LHZvaWQgbigpKX0sbz15Lnhocj1sKCksSS5vbnJlYWR5c3RhdGVjaGFuZ2U9ZnVuY3Rpb24odCl7dHJ5ezI9PT1JW21dJiZkKCl9Y2F0Y2goZSl7fTQ9PT1JW21dJiYoQz0hMSxkKCksaCgpKSxTKElbbV0pfSxwPWZ1bmN0aW9uKCl7dT0hMH0sb1tmXSgiZXJyb3IiLHApLG9bZl0oInRpbWVvdXQiLHApLG9bZl0oImFib3J0IixwKSxvW2ZdKCJwcm9ncmVzcyIsZnVuY3Rpb24oKXtlPDM/UygzKTpvW2NdKCJyZWFkeXN0YXRlY2hhbmdlIix7fSl9KSwoIndpdGhDcmVkZW50aWFscyJpbiBJfHxBLmFkZFdpdGhDcmVkZW50aWFscykmJihvLndpdGhDcmVkZW50aWFscz0hMSksby5zdGF0dXM9MCxvLm9wZW49ZnVuY3Rpb24odCxuLGksbyxyKXtlPTAsdT0hMSxDPSExLHkuaGVhZGVycz17fSx5LmhlYWRlck5hbWVzPXt9LHkuc3RhdHVzPTAsdz17fSx3LmhlYWRlcnM9e30seS5tZXRob2Q9dCx5LnVybD1uLHkuYXN5bmM9aSE9PSExLHkudXNlcj1vLHkucGFzcz1yLFMoMSl9LG8uc2VuZD1mdW5jdGlvbih0KXt2YXIgZSxuLGkscixsLGMsdSxwO2ZvcihwPVsidHlwZSIsInRpbWVvdXQiLCJ3aXRoQ3JlZGVudGlhbHMiXSxjPTAsdT1wLmxlbmd0aDtjPHU7YysrKW49cFtjXSxpPSJ0eXBlIj09PW4/InJlc3BvbnNlVHlwZSI6bixpIGluIG8mJih5W25dPW9baV0pO3kuYm9keT10LGw9ZnVuY3Rpb24oKXt2YXIgdCxlLHIscyxsLGM7Zm9yKFQoYSxJLG8pLG8udXBsb2FkJiZUKGEuY29uY2F0KGcpLEkudXBsb2FkLG8udXBsb2FkKSxDPSEwLEkub3Blbih5Lm1ldGhvZCx5LnVybCx5LmFzeW5jLHkudXNlcix5LnBhc3MpLGw9WyJ0eXBlIiwidGltZW91dCIsIndpdGhDcmVkZW50aWFscyJdLHI9MCxzPWwubGVuZ3RoO3I8cztyKyspbj1sW3JdLGk9InR5cGUiPT09bj8icmVzcG9uc2VUeXBlIjpuLG4gaW4geSYmKElbaV09eVtuXSk7Yz15LmhlYWRlcnM7Zm9yKHQgaW4gYyllPWNbdF0sSS5zZXRSZXF1ZXN0SGVhZGVyKHQsZSk7eS5ib2R5IGluc3RhbmNlb2YgdiYmKHkuYm9keT15LmJvZHkuZmQpLEkuc2VuZCh5LmJvZHkpfSxlPUEubGlzdGVuZXJzKHMpLChyPWZ1bmN0aW9uKCl7dmFyIHQsbjtyZXR1cm4gZS5sZW5ndGg/KHQ9ZnVuY3Rpb24odCl7cmV0dXJuIm9iamVjdCIhPXR5cGVvZiB0fHwibnVtYmVyIiE9dHlwZW9mIHQuc3RhdHVzJiYibnVtYmVyIiE9dHlwZW9mIHcuc3RhdHVzP3ZvaWQgcigpOih4KHQsdyksUi5jYWxsKHQsImRhdGEiKTwwJiYodC5kYXRhPXQucmVzcG9uc2V8fHQudGV4dCksdm9pZCBTKDQpKX0sdC5oZWFkPWZ1bmN0aW9uKHQpe3JldHVybiB4KHQsdyksUygyKX0sdC5wcm9ncmVzcz1mdW5jdGlvbih0KXtyZXR1cm4geCh0LHcpLFMoMyl9LG49ZS5zaGlmdCgpLDE9PT1uLmxlbmd0aD90KG4oeSkpOjI9PT1uLmxlbmd0aCYmeS5hc3luYz9uKHksdCk6dCgpKTpsKCl9KSgpfSxvLmFib3J0PWZ1bmN0aW9uKCl7az10LEM/SS5hYm9ydCgpOm9bY10oImFib3J0Iix7fSl9LG8uc2V0UmVxdWVzdEhlYWRlcj1mdW5jdGlvbih0LGUpe3ZhciBuLGk7bj1udWxsIT10P3QudG9Mb3dlckNhc2UoKTp2b2lkIDAsaT15LmhlYWRlck5hbWVzW25dPXkuaGVhZGVyTmFtZXNbbl18fHQseS5oZWFkZXJzW2ldJiYoZT15LmhlYWRlcnNbaV0rIiwgIitlKSx5LmhlYWRlcnNbaV09ZX0sby5nZXRSZXNwb25zZUhlYWRlcj1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gZT1udWxsIT10P3QudG9Mb3dlckNhc2UoKTp2b2lkIDAsdy5oZWFkZXJzW2VdfSxvLmdldEFsbFJlc3BvbnNlSGVhZGVycz1mdW5jdGlvbigpe3JldHVybiBiKHcuaGVhZGVycyl9LEkub3ZlcnJpZGVNaW1lVHlwZSYmKG8ub3ZlcnJpZGVNaW1lVHlwZT1mdW5jdGlvbigpe3JldHVybiBJLm92ZXJyaWRlTWltZVR5cGUuYXBwbHkoSSxhcmd1bWVudHMpfSksSS51cGxvYWQmJihvLnVwbG9hZD15LnVwbG9hZD1sKCkpLG99LCJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLmRlZmluZSYmdGhpcy5kZWZpbmUuYW1kPyhpPVtdLCEobz1mdW5jdGlvbigpe3JldHVybiBBfS5hcHBseShlLGkpKSk6KHRoaXMuZXhwb3J0c3x8dGhpcykueGhvb2s9QX0pLmNhbGwodGhpcyxuKTt2YXIgYSxsLGMsdSxwLGgsZCxmLG0sZyx2LHksXyxiLHcsUyxrLHgsRSxULEMsQSxPLFIsTixJLFAsTCxNLEQsVSxGLEIsaixxLCQsSCxWLFc7az0hMSxMPWZ1bmN0aW9uKHQpe3ZhciBlLG47a3x8dygpO2ZvcihlIGluIHQpbj10W2VdLEEoImFkZGluZyBzbGF2ZTogIitlKSxMW2VdPW59LHY9e30seT1mdW5jdGlvbih0LGUpe3ZhciBuO3JldHVybiB2W3RdP3ZbdF06KG49Zi5jcmVhdGVFbGVtZW50KCJpZnJhbWUiKSxuLmlkPW4ubmFtZT1fKCksQSgiY3JlYXRpbmcgaWZyYW1lICIrbi5pZCksbi5zcmM9IiIrdCtlLG4uc2V0QXR0cmlidXRlKCJzdHlsZSIsImRpc3BsYXk6bm9uZTsiKSxmLmJvZHkuYXBwZW5kQ2hpbGQobiksdlt0XT1uLmNvbnRlbnRXaW5kb3cpfSx3PWZ1bmN0aW9uKCl7dmFyIHQsZSxuO3JldHVybiBrPSEwLGU9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8scixzO3JldHVybiBvPXRbMF0scj10WzFdLG49RShyLCJCbG9iIiksaT1FKHIsIkZpbGUiKSxufHxpPyhzPW5ldyBGaWxlUmVhZGVyLHMub25sb2FkPWZ1bmN0aW9uKCl7cmV0dXJuIHRbMV09bnVsbCxpJiYodFsyXT1yLm5hbWUpLGUoWyJYRF9CTE9CIix0LHRoaXMucmVzdWx0LHIudHlwZV0pfSxzLnJlYWRBc0FycmF5QnVmZmVyKHIpLDEpOjB9LHQ9ZnVuY3Rpb24odCxuKXt2YXIgaTt0LmZvckVhY2goZnVuY3Rpb24oZSxuKXt2YXIgaSxvLHIscyxhO2lmKG89ZVswXSxyPWVbMV0sRShyLCJGaWxlTGlzdCIpKWZvcih0LnNwbGljZShuLDEpLHM9MCxhPXIubGVuZ3RoO3M8YTtzKyspaT1yW3NdLHQuc3BsaWNlKG4sMCxbbyxpXSl9KSxpPTAsdC5mb3JFYWNoKGZ1bmN0aW9uKG8scil7aSs9ZShvLGZ1bmN0aW9uKGUpe3Rbcl09ZSwwPT09LS1pJiZuKCl9KX0pLDA9PT1pJiZuKCl9LG49ZnVuY3Rpb24oZSxuKXt2YXIgaSxvLHI7cmV0dXJuIG4ub24oInhoci1ldmVudCIsZnVuY3Rpb24oKXtyZXR1cm4gZS54aHIuZGlzcGF0Y2hFdmVudC5hcHBseShudWxsLGFyZ3VtZW50cyl9KSxuLm9uKCJ4aHItdXBsb2FkLWV2ZW50IixmdW5jdGlvbigpe3JldHVybiBlLnhoci51cGxvYWQuZGlzcGF0Y2hFdmVudC5hcHBseShudWxsLGFyZ3VtZW50cyl9KSxvPUYoZSksby5oZWFkZXJzPWUuaGVhZGVycyxlLndpdGhDcmVkZW50aWFscyYmKHAubWFzdGVyJiYoby5oZWFkZXJzW3AubWFzdGVyXT1mLmNvb2tpZSksby5zbGF2ZUNvb2tpZT1wLnNsYXZlKSxyPWZ1bmN0aW9uKCl7cmV0dXJuIG4uZW1pdCgicmVxdWVzdCIsbyl9LGUuYm9keSYmKG8uYm9keT1lLmJvZHksRShvLmJvZHksIkZvcm1EYXRhIikpPyhpPW8uYm9keS5lbnRyaWVzLG8uYm9keT1bIlhEX0ZEIixpXSx2b2lkIHQoaSxyKSk6dm9pZCByKCl9LCJhZGRXaXRoQ3JlZGVudGlhbHMiaW4gJHx8KCQuYWRkV2l0aENyZWRlbnRpYWxzPSEwKSwkLmJlZm9yZShmdW5jdGlvbih0LGUpe3ZhciBpLG8scjtyZXR1cm4gbz1JKHQudXJsKSxvJiZvLm9yaWdpbiE9PWQ/TFtvLm9yaWdpbl0/KEEoInByb3h5aW5nIHJlcXVlc3QgdG8gc2xhdmU6ICciK28ub3JpZ2luKyInIiksdC5hc3luYz09PSExPyhqKCJzeW5jIG5vdCBzdXBwb3J0ZWQiKSxlKCkpOihpPXkoby5vcmlnaW4sTFtvLm9yaWdpbl0pLHI9aChfKCksaSksci5vbigicmVzcG9uc2UiLGZ1bmN0aW9uKHQpe3JldHVybiBlKHQpLHIuY2xvc2UoKX0pLHQueGhyLmFkZEV2ZW50TGlzdGVuZXIoImFib3J0IixmdW5jdGlvbigpe3JldHVybiByLmVtaXQoImFib3J0Iil9KSx2b2lkKHIucmVhZHk/bih0LHIpOnIub25jZSgicmVhZHkiLGZ1bmN0aW9uKCl7cmV0dXJuIG4odCxyKX0pKSkpOihvJiZBKCJubyBzbGF2ZSBtYXRjaGluZzogJyIrby5vcmlnaW4rIiciKSxlKCkpOmUoKX0pfSx4PSExLFI9ZnVuY3Rpb24odCl7dmFyIGUsbjt4fHxTKCk7Zm9yKGUgaW4gdCluPXRbZV0sQSgiYWRkaW5nIG1hc3RlcjogIitlKSxSW2VdPW59LGI9bnVsbCxTPWZ1bmN0aW9uKCl7cmV0dXJuIHg9ITAsQSgiaGFuZGxpbmcgaW5jb21pbmcgc29ja2V0cy4uLiIpLGI9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8scjsibnVsbCI9PT10JiYodD0iKiIpLG89bnVsbDtmb3IobiBpbiBSKXtyPVJbbl07dHJ5e2lmKGk9QihuKSxpLnRlc3QodCkpe289QihyKTticmVha319Y2F0Y2gocyl7fX1yZXR1cm4gbz8oZS5vbmNlKCJyZXF1ZXN0IixmdW5jdGlvbih0KXt2YXIgbixpLHIscyxhLGwsYyx1LHAsaCxkO2lmKEEoInJlcXVlc3Q6ICIrdC5tZXRob2QrIiAiK3QudXJsKSxsPUkodC51cmwpLCFsfHwhby50ZXN0KGwucGF0aCkpcmV0dXJuIGooImJsb2NrZWQgcmVxdWVzdCB0byBwYXRoOiAnIitsLnBhdGgrIicgYnkgcmVnZXg6ICIrbyksdm9pZCBlLmNsb3NlKCk7dT1uZXcgWE1MSHR0cFJlcXVlc3QsdS5vcGVuKHQubWV0aG9kLHQudXJsKSx1LmFkZEV2ZW50TGlzdGVuZXIoIioiLGZ1bmN0aW9uKHQpe3JldHVybiBlLmVtaXQoInhoci1ldmVudCIsdC50eXBlLEYodCkpfSksdS51cGxvYWQmJnUudXBsb2FkLmFkZEV2ZW50TGlzdGVuZXIoIioiLGZ1bmN0aW9uKHQpe3JldHVybiBlLmVtaXQoInhoci11cGxvYWQtZXZlbnQiLHQudHlwZSxGKHQpKX0pLGUub25jZSgiYWJvcnQiLGZ1bmN0aW9uKCl7cmV0dXJuIHUuYWJvcnQoKX0pLHUub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKCl7dmFyIHQ7aWYoND09PXUucmVhZHlTdGF0ZSl7dD17c3RhdHVzOnUuc3RhdHVzLHN0YXR1c1RleHQ6dS5zdGF0dXNUZXh0LGRhdGE6dS5yZXNwb25zZSxoZWFkZXJzOiQuaGVhZGVycyh1LmdldEFsbFJlc3BvbnNlSGVhZGVycygpKX07dHJ5e3QudGV4dD11LnJlc3BvbnNlVGV4dH1jYXRjaChuKXt9cmV0dXJuIGUuZW1pdCgicmVzcG9uc2UiLHQpfX0sdC53aXRoQ3JlZGVudGlhbHMmJih1LndpdGhDcmVkZW50aWFscz0hMCx0LnNsYXZlQ29va2llJiYodC5oZWFkZXJzW3Quc2xhdmVDb29raWVdPWYuY29va2llKSksdC50aW1lb3V0JiYodS50aW1lb3V0PXQudGltZW91dCksdC50eXBlJiYodS5yZXNwb25zZVR5cGU9dC50eXBlKSxkPXQuaGVhZGVycztmb3IoYSBpbiBkKWM9ZFthXSx1LnNldFJlcXVlc3RIZWFkZXIoYSxjKTtpZih0LmJvZHkgaW5zdGFuY2VvZiBBcnJheSYmIlhEX0ZEIj09PXQuYm9keVswXSl7Zm9yKHM9bmV3ICQuRm9ybURhdGEscj10LmJvZHlbMV0scD0wLGg9ci5sZW5ndGg7cDxoO3ArKyluPXJbcF0sIlhEX0JMT0IiPT09blswXSYmND09PW4ubGVuZ3RoJiYoaT1uZXcgQmxvYihbblsyXV0se3R5cGU6blszXX0pLG49blsxXSxuWzFdPWkpLHMuYXBwZW5kLmFwcGx5KHMsbik7dC5ib2R5PXN9dS5zZW5kKHQuYm9keXx8bnVsbCl9KSx2b2lkIEEoInNsYXZlIGxpc3RlbmluZyBmb3IgcmVxdWVzdHMgb24gc29ja2V0OiAiK2UuaWQpKTp2b2lkIGooImJsb2NrZWQgcmVxdWVzdCBmcm9tOiAnIit0KyInIil9LG49PT1uLnBhcmVudD9qKCJzbGF2ZXMgbXVzdCBiZSBpbiBhbiBpZnJhbWUiKTpuLnBhcmVudC5wb3N0TWVzc2FnZSgiWERQSU5HXyIrbCwiKiIpfSxjPSJYRF9DSEVDSyIsRD17fSxUPSEwLGg9ZnVuY3Rpb24odCxlKXt2YXIgbixpLG8scixzLGw7cmV0dXJuIHM9ITEsbD1EW3RdPSQuRXZlbnRFbWl0dGVyKCEwKSxsLmlkPXQsbC5vbmNlKCJjbG9zZSIsZnVuY3Rpb24oKXtyZXR1cm4gbC5kZXN0cm95KCksbC5jbG9zZSgpfSkscj1bXSxsLmVtaXQ9ZnVuY3Rpb24oKXt2YXIgZSxuO2U9TShhcmd1bWVudHMpLG49InN0cmluZyI9PXR5cGVvZiBlWzFdPyIgLT4gIitlWzFdOiIiLEEoInNlbmQgc29ja2V0OiAiK3QrIjogIitlWzBdK24pLGUudW5zaGlmdCh0KSxzP28oZSk6ci5wdXNoKGUpfSxvPWZ1bmN0aW9uKHQpe1QmJih0PUpTT04uc3RyaW5naWZ5KHQpKSxlLnBvc3RNZXNzYWdlKHQsIioiKX0sbC5jbG9zZT1mdW5jdGlvbigpe2wuZW1pdCgiY2xvc2UiKSxBKCJjbG9zZSBzb2NrZXQ6ICIrdCksRFt0XT1udWxsfSxsLm9uY2UoYyxmdW5jdGlvbihlKXtmb3IoVD0ic3RyaW5nIj09dHlwZW9mIGUscz1sLnJlYWR5PSEwLGwuZW1pdCgicmVhZHkiKSxBKCJyZWFkeSBzb2NrZXQ6ICIrdCsiIChlbWl0ICMiK3IubGVuZ3RoKyIgcGVuZGluZykiKTtyLmxlbmd0aDspbyhyLnNoaWZ0KCkpfSksaT0wLG49ZnVuY3Rpb24obyl7cmV0dXJuIGZ1bmN0aW9uKCl7ZS5wb3N0TWVzc2FnZShbdCxjLHt9XSwiKiIpLHN8fChpKys+PXEudGltZW91dC9hPyhqKCJUaW1lb3V0IHdhaXRpbmcgb24gaWZyYW1lIHNvY2tldCIpLG0uZmlyZSgidGltZW91dCIpLGwuZmlyZSgiYWJvcnQiKSk6c2V0VGltZW91dChuLGEpKX19KHRoaXMpLHNldFRpbWVvdXQobiksQSgibmV3IHNvY2tldDogIit0KSxsfSxOPWZ1bmN0aW9uKHQpe3JldHVybiBmLmFkZEV2ZW50TGlzdGVuZXI/bi5hZGRFdmVudExpc3RlbmVyKCJtZXNzYWdlIix0KTpuLmF0dGFjaEV2ZW50KCJvbm1lc3NhZ2UiLHQpfSxVPWZ1bmN0aW9uKCl7cmV0dXJuIE4oZnVuY3Rpb24odCl7dmFyIGUsbixpLG87aWYoZT10LmRhdGEsInN0cmluZyI9PXR5cGVvZiBlKXtpZigvXlhEUElORyhfKFZcZCspKT8kLy50ZXN0KGUpJiZSZWdFeHAuJDIhPT1sKXJldHVybiBqKCJ5b3VyIG1hc3RlciBpcyBub3QgY29tcGF0aWJsZSB3aXRoIHlvdXIgc2xhdmUsIGNoZWNrIHlvdXIgeGRvbWFpbi5qcyB2ZXJzaW9uIik7aWYoL154ZG9tYWluLS8udGVzdChlKSllPWUuc3BsaXQoIiwiKTtlbHNlIGlmKFQpdHJ5e2U9SlNPTi5wYXJzZShlKX1jYXRjaChyKXtyZXR1cm59fWlmKGUgaW5zdGFuY2VvZiBBcnJheSYmKGk9ZS5zaGlmdCgpLC9eeGRvbWFpbi0vLnRlc3QoaSkmJihvPURbaV0sbnVsbCE9PW8pKSl7aWYobz09PXMpe2lmKCFiKXJldHVybjtvPWgoaSx0LnNvdXJjZSksYih0Lm9yaWdpbixvKX1uPSJzdHJpbmciPT10eXBlb2YgZVsxXT8iIC0+ICIrZVsxXToiIixBKCJyZWNlaXZlIHNvY2tldDogIitpKyI6ICIrZVswXStuKSxvLmZpcmUuYXBwbHkobyxlKX19KX0sJD0odGhpcy5leHBvcnRzfHx0aGlzKS54aG9vayxxPWZ1bmN0aW9uKHQpe3QmJih0Lm1hc3RlcnMmJlIodC5tYXN0ZXJzKSx0LnNsYXZlcyYmTCh0LnNsYXZlcykpfSxxLm1hc3RlcnM9UixxLnNsYXZlcz1MLHEuZGVidWc9ITEscS50aW1lb3V0PTE1ZTMsYT0xMDAscD1xLmNvb2tpZXM9e21hc3RlcjoiTWFzdGVyLUNvb2tpZSIsc2xhdmU6IlNsYXZlLUNvb2tpZSJ9LGY9bi5kb2N1bWVudCxDPW4ubG9jYXRpb24sZD1xLm9yaWdpbj1DLnByb3RvY29sKyIvLyIrQy5ob3N0LF89ZnVuY3Rpb24oKXtyZXR1cm4ieGRvbWFpbi0iK01hdGgucm91bmQoTWF0aC5yYW5kb20oKSpNYXRoLnBvdygyLDMyKSkudG9TdHJpbmcoMTYpfSxNPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKHQsZSl9LHU9bi5jb25zb2xlfHx7fSxtPW51bGwsUD1mdW5jdGlvbigpe209JC5FdmVudEVtaXR0ZXIoITApLHEub249bS5vbixxLm9mZj1tLm9mZn0sJCYmUCgpLE89ZnVuY3Rpb24odCl7cmV0dXJuIGZ1bmN0aW9uKGUpe2U9Inhkb21haW4gKCIrZCsiKTogIitlLG0uZmlyZSh0LGUpLCgibG9nIiE9PXR8fHEuZGVidWcpJiYodCBpbiBxP3FbdF0oZSk6dCBpbiB1P3VbdF0oZSk6Indhcm4iPT09dCYmYWxlcnQoZSkpfX0sQT1PKCJsb2ciKSxqPU8oIndhcm4iKSxXPVsicG9zdE1lc3NhZ2UiLCJKU09OIl07Zm9yKEg9MCxWPVcubGVuZ3RoO0g8VjtIKyspaWYoZz1XW0hdLCFuW2ddKXJldHVybiB2b2lkIGooInJlcXVpcmVzICciK2crIicgYW5kIHRoaXMgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGl0Iik7RT1mdW5jdGlvbih0LGUpe3JldHVybiBlIGluIG4mJnQgaW5zdGFuY2VvZiBuW2VdfSxsPSJWMSIsST1xLnBhcnNlVXJsPWZ1bmN0aW9uKHQpe3JldHVybi9eKChodHRwcz86KT9cL1wvW15cL1w/XSspKFwvLiopPy8udGVzdCh0KT97b3JpZ2luOihSZWdFeHAuJDI/IiI6Qy5wcm90b2NvbCkrUmVnRXhwLiQxLHBhdGg6UmVnRXhwLiQzfTooQSgiZmFpbGVkIHRvIHBhcnNlIGFic29sdXRlIHVybDogIit0KSxudWxsKX0sQj1mdW5jdGlvbih0KXt2YXIgZTtyZXR1cm4gdCBpbnN0YW5jZW9mIFJlZ0V4cD90OihlPXQudG9TdHJpbmcoKS5yZXBsYWNlKC9cVy9nLGZ1bmN0aW9uKHQpe3JldHVybiJcXCIrdH0pLnJlcGxhY2UoL1xcXCovZywiLioiKSxuZXcgUmVnRXhwKCJeIitlKyIkIikpfSxGPWZ1bmN0aW9uKHQpe3ZhciBlLG4saSxvO2U9e307Zm9yKG4gaW4gdCkicmV0dXJuVmFsdWUiIT09biYmKGk9dFtuXSwiZnVuY3Rpb24iIT0obz10eXBlb2YgaSkmJiJvYmplY3QiIT09byYmKGVbbl09aSkpO3JldHVybiBlfSxmdW5jdGlvbigpe3ZhciB0LGUsbixpLG8scixzLGEsbCxjLHU7Zm9yKHQ9e2RlYnVnOmZ1bmN0aW9uKHQpe2lmKCJzdHJpbmciPT10eXBlb2YgdClyZXR1cm4gcS5kZWJ1Zz0iZmFsc2UiIT09dH0sc2xhdmU6ZnVuY3Rpb24odCl7dmFyIGUsbjtpZih0JiYoZT1JKHQpKSlyZXR1cm4gbj17fSxuW2Uub3JpZ2luXT1lLnBhdGgsTChuKX0sbWFzdGVyOmZ1bmN0aW9uKHQpe3ZhciBlLG47aWYodCYmKG49IioiPT09dD97b3JpZ2luOiIqIixwYXRoOiIqIn06SSh0KSkpcmV0dXJuIGU9e30sZVtuLm9yaWdpbl09bi5wYXRoLnJlcGxhY2UoL15cLy8sIiIpP24ucGF0aDoiKiIsUihlKX19LGM9Zi5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0Iikscj0wLGE9Yy5sZW5ndGg7cjxhO3IrKylpZihvPWNbcl0sL3hkb21haW4vLnRlc3Qoby5zcmMpKWZvcih1PVsiIiwiZGF0YS0iXSxzPTAsbD11Lmxlbmd0aDtzPGw7cysrKXtpPXVbc107Zm9yKG4gaW4gdCkoZT10W25dKShvLmdldEF0dHJpYnV0ZShpK24pKX19KCksVSgpLCJmdW5jdGlvbiI9PXR5cGVvZiB0aGlzLmRlZmluZSYmdGhpcy5kZWZpbmUuYW1kPyhpPVtvXSxyPWZ1bmN0aW9uKHQpe3JldHVybiAkPXQsUCgpLHF9LmFwcGx5KGUsaSksIShyIT09cyYmKHQuZXhwb3J0cz1yKSkpOih0aGlzLmV4cG9ydHN8fHRoaXMpLnhkb21haW49cX0pLmNhbGwodGhpcyx3aW5kb3cpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDk1KV0sbz1mdW5jdGlvbih0LGUpe3JldHVybiBlLmV4dGVuZCh7Y2xhc3NOYW1lOiJyZWZyZXNoLWF1dGgtc3RhdGUiLE1vZGVsOnt9LEZvcm06e25vQnV0dG9uQmFyOiEwfSxwcmVSZW5kZXI6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMudG9rZW4sZT10aGlzLm9wdGlvbnMuYXBwU3RhdGU7dGhpcy5tb2RlbC5zdGFydFRyYW5zYWN0aW9uKGZ1bmN0aW9uKG4pe3JldHVybiB0PyhlLnRyaWdnZXIoImxvYWRpbmciLCEwKSxuLnR4LnJlc3VtZSh7c3RhdGVUb2tlbjp0fSkpOm4udHguZXhpc3RzKCk/KGUudHJpZ2dlcigibG9hZGluZyIsITApLG4udHgucmVzdW1lKCkpOnZvaWQgZS50cmlnZ2VyKCJuYXZpZ2F0ZSIsIiIpfSl9LHJlbW92ZTpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMuYXBwU3RhdGUudHJpZ2dlcigibG9hZGluZyIsITEpLGUucHJvdG90eXBlLnJlbW92ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbigxMTEpLG4oMTAyKSxuKDM3KSxuKDEyKSxuKDEpXSxvPWZ1bmN0aW9uKHQsZSxuLGksbyxyKXt2YXIgcz0iZW4iLGE9WyJmYWNlYm9vayIsImdvb2dsZSIsImxpbmtlZGluIiwibWljcm9zb2Z0Il0sbD1bInRva2VuIiwiaWRfdG9rZW4iLCJjb2RlIl0sYz10LnRwbCgie3tvcmlnaW59fSIpLHU9dC5fLHA9ZS5Db25maWdFcnJvcixoPWUuVW5zdXBwb3J0ZWRCcm93c2VyRXJyb3IsZD10LnRwbCgiaHR0cHM6Ly9vazFzdGF0aWMub2t0YWNkbi5jb20vYXNzZXRzL2pzL3Nkay9va3RhLXNpZ25pbi13aWRnZXQve3t2ZXJzaW9ufX0iKTtyZXR1cm4gdC5Nb2RlbC5leHRlbmQoe2ZsYXQ6ITAsYXV0aENsaWVudDp2b2lkIDAsbG9jYWw6e2Jhc2VVcmw6WyJzdHJpbmciLCEwXSxyZWNvdmVyeVRva2VuOlsic3RyaW5nIiwhMSx2b2lkIDBdLHN0YXRlVG9rZW46WyJzdHJpbmciLCExLHZvaWQgMF0sdXNlcm5hbWU6WyJzdHJpbmciLCExXSx0cmFuc2Zvcm1Vc2VybmFtZTpbImZ1bmN0aW9uIiwhMV0sZ2xvYmFsU3VjY2Vzc0ZuOiJmdW5jdGlvbiIsZ2xvYmFsRXJyb3JGbjoiZnVuY3Rpb24iLHByb2Nlc3NDcmVkczoiZnVuY3Rpb24iLGxvZ286InN0cmluZyIsaGVscFN1cHBvcnROdW1iZXI6InN0cmluZyIsImZlYXR1cmVzLnJvdXRlciI6WyJib29sZWFuIiwhMCwhMV0sImZlYXR1cmVzLnNlY3VyaXR5SW1hZ2UiOlsiYm9vbGVhbiIsITAsITFdLCJmZWF0dXJlcy5yZW1lbWJlck1lIjpbImJvb2xlYW4iLCEwLCEwXSwiZmVhdHVyZXMuYXV0b1B1c2giOlsiYm9vbGVhbiIsITAsITFdLCJmZWF0dXJlcy5zbXNSZWNvdmVyeSI6WyJib29sZWFuIiwhMCwhMV0sImZlYXR1cmVzLmNhbGxSZWNvdmVyeSI6WyJib29sZWFuIiwhMCwhMV0sImZlYXR1cmVzLndpbmRvd3NWZXJpZnkiOlsiYm9vbGVhbiIsITAsITFdLCJmZWF0dXJlcy5zZWxmU2VydmljZVVubG9jayI6WyJib29sZWFuIiwhMCwhMV0sImZlYXR1cmVzLm11bHRpT3B0aW9uYWxGYWN0b3JFbnJvbGwiOlsiYm9vbGVhbiIsITAsITFdLCJmZWF0dXJlcy5wcmV2ZW50QnJvd3NlckZyb21TYXZpbmdPa3RhUGFzc3dvcmQiOlsiYm9vbGVhbiIsITAsITBdLGxhbmd1YWdlOlsiYW55IiwhMV0saTE4bjpbIm9iamVjdCIsITFdLCJhc3NldHMuYmFzZVVybCI6WyJzdHJpbmciLCExXSwiYXNzZXRzLnJld3JpdGUiOnt0eXBlOiJmdW5jdGlvbiIsdmFsdWU6dS5pZGVudGl0eX0sYXV0aFNjaGVtZTpbInN0cmluZyIsITEsIk9BVVRIMiJdLCJhdXRoUGFyYW1zLmRpc3BsYXkiOnt0eXBlOiJzdHJpbmciLHZhbHVlczpbIm5vbmUiLCJwb3B1cCIsInBhZ2UiXX0sImF1dGhQYXJhbXMucmVzcG9uc2VNb2RlIjp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJxdWVyeSIsImZyYWdtZW50IiwiZm9ybV9wb3N0Iiwib2t0YV9wb3N0X21lc3NhZ2UiXX0sImF1dGhQYXJhbXMucmVzcG9uc2VUeXBlIjpbImFueSIsITEsImlkX3Rva2VuIl0sImF1dGhQYXJhbXMuc2NvcGVzIjpbImFycmF5IiwhMV0sY2xpZW50SWQ6InN0cmluZyIscmVkaXJlY3RVcmk6InN0cmluZyIsaWRwczpbImFycmF5IiwhMSxbXV0saWRwRGlzcGxheTp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJQUklNQVJZIiwiU0VDT05EQVJZIl0sdmFsdWU6IlNFQ09OREFSWSJ9LG9BdXRoVGltZW91dDpbIm51bWJlciIsITFdLCJoZWxwTGlua3MuaGVscCI6InN0cmluZyIsImhlbHBMaW5rcy5mb3Jnb3RQYXNzd29yZCI6InN0cmluZyIsImhlbHBMaW5rcy51bmxvY2siOiJzdHJpbmciLCJoZWxwTGlua3MuY3VzdG9tIjoiYXJyYXkifSxkZXJpdmVkOntzdXBwb3J0ZWRMYW5ndWFnZXM6e2RlcHM6WyJpMThuIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHUudW5pb24oci5zdXBwb3J0ZWRMYW5ndWFnZXMsdS5rZXlzKHQpKX0sY2FjaGU6ITB9LGxhbmd1YWdlQ29kZTp7ZGVwczpbImxhbmd1YWdlIiwic3VwcG9ydGVkTGFuZ3VhZ2VzIl0sZm46ZnVuY3Rpb24odCxlKXt2YXIgbyxyPW4uZ2V0VXNlckxhbmd1YWdlcygpLGE9dS5jbG9uZShyKSxsPWkudG9Mb3dlcihlKTt1LmlzU3RyaW5nKHQpP2EudW5zaGlmdCh0KTp1LmlzRnVuY3Rpb24odCkmJmEudW5zaGlmdCh0KGUscikpLGEucHVzaChzKSxvPWkudG9Mb3dlcihpLmV4cGFuZExhbmd1YWdlcyhhKSk7dmFyIGMscDtmb3IoYz0wO2M8by5sZW5ndGg7YysrKWlmKHA9bC5pbmRleE9mKG9bY10pLHA+LTEpcmV0dXJuIGVbcF19fSxvYXV0aDJFbmFibGVkOntkZXBzOlsiY2xpZW50SWQiLCJhdXRoU2NoZW1lIiwiYXV0aFBhcmFtcy5yZXNwb25zZVR5cGUiXSxmbjpmdW5jdGlvbih0LGUsbil7aWYoIXQpcmV0dXJuITE7aWYoIm9hdXRoMiIhPT1lLnRvTG93ZXJDYXNlKCkpcmV0dXJuITE7dmFyIGk9dS5pc0FycmF5KG4pP246W25dO3JldHVybiB1LmludGVyc2VjdGlvbihpLGwpLmxlbmd0aD4wfSxjYWNoZTohMH0sb2F1dGhSZWRpcmVjdFVyaTp7ZGVwczpbInJlZGlyZWN0VXJpIl0sZm46ZnVuY3Rpb24odCl7aWYodClyZXR1cm4gdDt2YXIgZT13aW5kb3cubG9jYXRpb24ub3JpZ2luO2lmKCFlKXt2YXIgbj13aW5kb3cubG9jYXRpb24uaHJlZixpPXdpbmRvdy5sb2NhdGlvbi5wYXRobmFtZTsiIiE9PWkmJihlPW4uc3Vic3RyaW5nKDAsbi5sYXN0SW5kZXhPZihpKSkpfXJldHVybiBjKHtvcmlnaW46ZX0pfX0sY29uZmlndXJlZFNvY2lhbElkcHM6e2RlcHM6WyJpZHBzIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHUuZmlsdGVyKHQsZnVuY3Rpb24odCl7cmV0dXJuIHUuY29udGFpbnMoYSx0LnR5cGUudG9Mb3dlckNhc2UoKSl9KX0sY2FjaGU6ITB9LHNvY2lhbEF1dGhDb25maWd1cmVkOntkZXBzOlsiY29uZmlndXJlZFNvY2lhbElkcHMiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4hdS5pc0VtcHR5KHQpfSxjYWNoZTohMH0sc29jaWFsQXV0aFBvc2l0aW9uVG9wOntkZXBzOlsic29jaWFsQXV0aENvbmZpZ3VyZWQiLCJpZHBEaXNwbGF5Il0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4hKCF0fHwiUFJJTUFSWSIhPT1lLnRvVXBwZXJDYXNlKCkpfSxjYWNoZTohMH19LGluaXRpYWxpemU6ZnVuY3Rpb24oZSl7ZS5iYXNlVXJsP2UuZ2xvYmFsU3VjY2Vzc0ZuP24uY29yc0lzTm90U3VwcG9ydGVkKCkmJnRoaXMuY2FsbEdsb2JhbEVycm9yKG5ldyBoKHQubG9jKCJlcnJvci51bnN1cHBvcnRlZC5jb3JzIikpKTp0aGlzLmNhbGxHbG9iYWxFcnJvcihuZXcgcCh0LmxvYygiZXJyb3IucmVxdWlyZWQuc3VjY2VzcyIpKSk6dGhpcy5jYWxsR2xvYmFsRXJyb3IobmV3IHAodC5sb2MoImVycm9yLnJlcXVpcmVkLmJhc2VVcmwiKSkpfSxzZXRBdXRoQ2xpZW50OmZ1bmN0aW9uKHQpe3RoaXMuYXV0aENsaWVudD10fSxnZXRBdXRoQ2xpZW50OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXV0aENsaWVudH0sc2V0OmZ1bmN0aW9uKCl7dHJ5e3JldHVybiB0Lk1vZGVsLnByb3RvdHlwZS5zZXQuYXBwbHkodGhpcyxhcmd1bWVudHMpfWNhdGNoKGUpe3ZhciBuPWUubWVzc2FnZT9lLm1lc3NhZ2U6ZTt0aGlzLmNhbGxHbG9iYWxFcnJvcihuZXcgcChuKSl9fSxjYWxsR2xvYmFsU3VjY2VzczpmdW5jdGlvbih0LGUpe3ZhciBuPXUuZXh0ZW5kKGUse3N0YXR1czp0fSk7dS5kZWZlcih1LnBhcnRpYWwodGhpcy5nZXQoImdsb2JhbFN1Y2Nlc3NGbiIpLG4pKX0sY2FsbEdsb2JhbEVycm9yOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KCJnbG9iYWxFcnJvckZuIil8fHRoaXMub3B0aW9ucy5nbG9iYWxFcnJvckZuO2lmKCFlKXRocm93IHQ7ZSh0KX0sdHJhbnNmb3JtVXNlcm5hbWU6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmdldCgidHJhbnNmb3JtVXNlcm5hbWUiKTtyZXR1cm4gbiYmdS5pc0Z1bmN0aW9uKG4pP24odCxlKTp0fSxwYXJzZTpmdW5jdGlvbih0KXtpZih0LmF1dGhQYXJhbXMmJnQuYXV0aFBhcmFtcy5zY29wZSYmKG8uZGVwcmVjYXRlKCdVc2UgInNjb3BlcyIgaW5zdGVhZCBvZiAic2NvcGUiJyksdC5hdXRoUGFyYW1zLnNjb3Blcz10LmF1dGhQYXJhbXMuc2NvcGUsZGVsZXRlIHQuYXV0aFBhcmFtcy5zY29wZSksdC5sYWJlbHN8fHQuY291bnRyeSl7by5kZXByZWNhdGUoJ1VzZSAiaTE4biIgaW5zdGVhZCBvZiAibGFiZWxzIiBhbmQgImNvdW50cnkiJyk7dmFyIGU9dC5sYWJlbHN8fHt9O3UuZWFjaCh0LmNvdW50cnksZnVuY3Rpb24odCxuKXtlWyJjb3VudHJ5LiIrbl09dH0pLHQuaTE4bj17fSx1LmVhY2goci5zdXBwb3J0ZWRMYW5ndWFnZXMsZnVuY3Rpb24obil7dC5pMThuW25dPWV9KSxkZWxldGUgdC5sYWJlbHMsZGVsZXRlIHQuY291bnRyeX10LmFzc2V0c3x8KHQuYXNzZXRzPXt9KTt2YXIgbj10LmFzc2V0cy5iYXNlVXJsO3JldHVybiBuPyIvIj09PW5bbi5sZW5ndGgtMV0mJih0LmFzc2V0cy5iYXNlVXJsPW4uc3Vic3RyaW5nKDAsbi5sZW5ndGgtMSkpOnQuYXNzZXRzLmJhc2VVcmw9ZCh7dmVyc2lvbjpyLnZlcnNpb259KSx0fX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oMTA0KV0sbz1mdW5jdGlvbih0LGUpe2Z1bmN0aW9uIG4obil7dGhpcy5uYW1lPWUuQ09ORklHX0VSUk9SLHRoaXMubWVzc2FnZT1ufHx0LmxvYygiZXJyb3IuY29uZmlnIil9ZnVuY3Rpb24gaShuKXt0aGlzLm5hbWU9ZS5VTlNVUFBPUlRFRF9CUk9XU0VSX0VSUk9SLHRoaXMubWVzc2FnZT1ufHx0LmxvYygiZXJyb3IudW5zdXBwb3J0ZWQuYnJvd3NlciIpfWZ1bmN0aW9uIG8odCl7dGhpcy5uYW1lPWUuT0FVVEhfRVJST1IsdGhpcy5tZXNzYWdlPXR9cmV0dXJuIG4ucHJvdG90eXBlPW5ldyBFcnJvcixpLnByb3RvdHlwZT1uZXcgRXJyb3Isby5wcm90b3R5cGU9bmV3IEVycm9yLHtDb25maWdFcnJvcjpuLFVuc3VwcG9ydGVkQnJvd3NlckVycm9yOmksT0F1dGhFcnJvcjpvfX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEwNyksbigxMTMpXSxvPWZ1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBpKHQpe3JldHVybiB0JiZ0LmVxdWFscyhuKX1mdW5jdGlvbiBvKHQpe3QuY3VycmVudEJlYWNvbiYmKHQuY3VycmVudEJlYWNvbi5yZW1vdmUoKSx0LmN1cnJlbnRCZWFjb249bnVsbCl9ZnVuY3Rpb24gcih0LGUsbixpKXt0LmFkZChlLHtzZWxlY3RvcjpuLG9wdGlvbnM6aX0pLHQuY3VycmVudEJlYWNvbj10LmZpcnN0KCl9ZnVuY3Rpb24gcyh0LGUsbil7cmV0dXJuIHR8fGU/IXQmJm4ubG9hZGluZz8ibG9hZCI6dCYmaSh0KT9lPyJzd2FwIjoidW5sb2FkIjp0JiZ0LmVxdWFscyhlLG4pPyJzYW1lIjohdCYmZT8iYWRkIjp0JiYhZT8icmVtb3ZlIjp0IGluc3RhbmNlb2YgZT8iZmFkZSI6InN3YXAiOiJub25lIn12YXIgYT0ibm8tYmVhY29uIixsPSJiZWFjb24tc21hbGwgYmVhY29uLWxvYWRpbmciO3JldHVybiB0LlZpZXcuZXh0ZW5kKHtjdXJyZW50QmVhY29uOm51bGwsdGVtcGxhdGU6J1x0ICAgICAgPGRpdiBjbGFzcz0ib2t0YS1zaWduLWluLWhlYWRlciBhdXRoLWhlYWRlciI+XHQgICAgICAgIHt7I2lmIGxvZ299fVx0ICAgICAgICA8aW1nIHNyYz0ie3tsb2dvfX0iIGNsYXNzPSJhdXRoLW9yZy1sb2dvIi8+XHQgICAgICAgIHt7L2lmfX1cdCAgICAgICAgPGRpdiBkYXRhLXR5cGU9ImJlYWNvbi1jb250YWluZXIiIGNsYXNzPSJiZWFjb24tY29udGFpbmVyIj48L2Rpdj5cdCAgICAgIDwvZGl2Plx0ICAgICAgPGRpdiBjbGFzcz0iYXV0aC1jb250ZW50Ij48ZGl2IGNsYXNzPSJhdXRoLWNvbnRlbnQtaW5uZXIiPjwvZGl2PjwvZGl2Plx0ICAgICcsaW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0LnNldHRpbmdzLmdldCgiZmVhdHVyZXMuc2VjdXJpdHlJbWFnZSIpfHwodGhpcy4kZWwuYWRkQ2xhc3MoYSksdGhpcy5saXN0ZW5Ubyh0LmFwcFN0YXRlLCJsb2FkaW5nIix0aGlzLnNldExvYWRpbmdCZWFjb24pLHRoaXMubGlzdGVuVG8odC5hcHBTdGF0ZSwicmVtb3ZlTG9hZGluZyIsdGhpcy5yZW1vdmVMb2FkaW5nQmVhY29uKSl9LHNldEJlYWNvbjpmdW5jdGlvbih0LG4pe3ZhciBjPSdbZGF0YS10eXBlPSJiZWFjb24tY29udGFpbmVyIl0nLHU9dGhpcy4kKGMpLHA9cyh0aGlzLmN1cnJlbnRCZWFjb24sdCxuKSxoPXRoaXM7c3dpdGNoKHApe2Nhc2Uibm9uZSI6cmV0dXJuIHZvaWQgdGhpcy4kZWwuYWRkQ2xhc3MoYSk7Y2FzZSJzYW1lIjpyZXR1cm47Y2FzZSJhZGQiOnJldHVybiB0aGlzLiRlbC5yZW1vdmVDbGFzcyhhKSxyKHRoaXMsdCxjLG4pLGUuZXhwbG9kZSh1KTtjYXNlInJlbW92ZSI6cmV0dXJuIHRoaXMuJGVsLmFkZENsYXNzKGEpLGUuaW1wbG9kZSh1KS50aGVuKGZ1bmN0aW9uKCl7byhoKX0pLmRvbmUoKTtjYXNlImZhZGUiOmlmKCF0aGlzLmN1cnJlbnRCZWFjb24uZmFkZU91dCl0aHJvdyBuZXcgRXJyb3IoJ1RoZSBjdXJyZW50IGJlYWNvbiBpcyBtaXNzaW5nIHRoZSAiZmFkZU91dCIgbWV0aG9kJyk7cmV0dXJuIG4uYW5pbWF0ZT0hMCx0aGlzLmN1cnJlbnRCZWFjb24uZmFkZU91dCgpLnRoZW4oZnVuY3Rpb24oKXtvKGgpLHIoaCx0LGMsbil9KS5kb25lKCk7Y2FzZSJzd2FwIjpyZXR1cm4gZS5zd2FwQmVhY29ucyh7JGVsOnUsc3dhcDpmdW5jdGlvbigpe3ZhciBlPWkoaC5jdXJyZW50QmVhY29uKTtvKGgpLGUmJih1LnJlbW92ZUNsYXNzKGwpLGguJGVsLnJlbW92ZUNsYXNzKGEpKSxyKGgsdCxjLG4pfX0pLmRvbmUoKTtjYXNlImxvYWQiOnJldHVybiB1LmFkZENsYXNzKGwpLHIoaCx0LGMsbiksZS5leHBsb2RlKHUpO2Nhc2UidW5sb2FkIjpyZXR1cm4gdGhpcy5yZW1vdmVMb2FkaW5nQmVhY29uKCk7ZGVmYXVsdDp0aHJvdyBuZXcgRXJyb3IoJ3RoZSAiJytwKyciIGlzIG5vdCByZWNvZ25pemVkJyl9fSxzZXRMb2FkaW5nQmVhY29uOmZ1bmN0aW9uKHQpe3QmJiFpKHRoaXMuY3VycmVudEJlYWNvbikmJnRoaXMuc2V0QmVhY29uKG4se2xvYWRpbmc6ITB9KX0scmVtb3ZlTG9hZGluZ0JlYWNvbjpmdW5jdGlvbigpe3ZhciB0PXRoaXMsbj10aGlzLiQoJ1tkYXRhLXR5cGU9ImJlYWNvbi1jb250YWluZXIiXScpO3JldHVybiBlLmltcGxvZGUobikudGhlbihmdW5jdGlvbigpe28odCksbi5yZW1vdmVDbGFzcyhsKX0pLmRvbmUoKX0sZ2V0VGVtcGxhdGVEYXRhOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0dGluZ3MudG9KU09OKHt2ZXJib3NlOiEwfSl9LGdldENvbnRlbnRFbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLiQoIi5hdXRoLWNvbnRlbnQtaW5uZXIiKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KV0sbz1mdW5jdGlvbih0KXtyZXR1cm4gdC5WaWV3LmV4dGVuZCh7dGVtcGxhdGU6J1x0ICAgICAgPGRpdiBjbGFzcz0iYmVhY29uLWJsYW5rIi8+XHQgICAgICA8ZGl2IGNsYXNzPSJiZy1oZWxwZXIgYXV0aC1iZWFjb24gYXV0aC1iZWFjb24tc2VjdXJpdHkiIGRhdGEtc2U9ImxvYWRpbmctYmVhY29uIj5cdCAgICAgIDxkaXYgY2xhc3M9Im9rdGEtc2lnbi1pbi1iZWFjb24tYm9yZGVyIGF1dGgtYmVhY29uLWJvcmRlciBqcy1hdXRoLWJlYWNvbi1ib3JkZXIiLz5cdCAgICAgIDwvZGl2Plx0ICAgICcsZXF1YWxzOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0aGlzIGluc3RhbmNlb2YgdH19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KV0sbz1mdW5jdGlvbih0KXt2YXIgZT0iY2FuLXJlbW92ZS1iZWFjb24iO3JldHVybiB0LlZpZXcuZXh0ZW5kKHtjbGFzc05hbWU6ImF1dGgtY29udGFpbmVyIG1haW4tY29udGFpbmVyIixpZDoib2t0YS1zaWduLWluIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImF1dGgtY29udGFpbmVyIn0saW5pdGlhbGl6ZTpmdW5jdGlvbih0KXt0aGlzLmxpc3RlblRvKHQuYXBwU3RhdGUsImNoYW5nZTpiZWFjb25UeXBlIixmdW5jdGlvbih0LG4pe3RoaXMuJGVsLnRvZ2dsZUNsYXNzKGUsInNlY3VyaXR5Ij09PW4pfSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbig5KSxuKDExNiksbigxMDIpLG4oMTExKV0sbz1mdW5jdGlvbih0LGUsbixpLG8pe2Z1bmN0aW9uIHIodCxuKXt2YXIgaT1kKHtiYXNlVXJsOnQsdXNlcm5hbWU6bn0pO3JldHVybiBhLmlzRW1wdHkobil8fGEuaXNVbmRlZmluZWQobik/ZShwKTplKGwuZ2V0KGkpKS50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiB0LnB3ZEltZz09PXU/aDp0LnB3ZEltZ30pfWZ1bmN0aW9uIHMoZSl7aWYoZT42MCYmZTw9MTQ0MCl7dmFyIG49ZS82MDtyZXR1cm4gdC5sb2MoImhvdXJzIiwibG9naW4iLFtuXSl9aWYoZT4xNDQwKXt2YXIgaT1lLzE0NDA7cmV0dXJuIHQubG9jKCJkYXlzIiwibG9naW4iLFtpXSl9cmV0dXJuIDE9PT1lP3QubG9jKCJtaW51dGVzLm9uZU1pbnV0ZSIsImxvZ2luIik6dC5sb2MoIm1pbnV0ZXMiLCJsb2dpbiIsW2VdKX12YXIgYT10Ll8sbD10LiQsYz10LkhhbmRsZWJhcnMuY29tcGlsZSx1PSIvaW1nL3NlY3VyaXR5L3Vua25vd24ucG5nIixwPSIvaW1nL3NlY3VyaXR5L2RlZmF1bHQucG5nIixoPSIvaW1nL3NlY3VyaXR5L3Vua25vd24tZGV2aWNlLnBuZyIsZD1jKCJ7e2Jhc2VVcmx9fS9sb2dpbi9nZXRpbWFnZT91c2VybmFtZT17e3VzZXJuYW1lfX0iKTtyZXR1cm4gdC5Nb2RlbC5leHRlbmQoe2luaXRpYWxpemU6ZnVuY3Rpb24oKXtpZih0aGlzLnNldHRpbmdzLmdldCgiZmVhdHVyZXMuc2VjdXJpdHlJbWFnZSIpKXt2YXIgZT10aGlzO3RoaXMubGlzdGVuVG8odGhpcywiY2hhbmdlOnVzZXJuYW1lIixmdW5jdGlvbihuLHMpe3IodGhpcy5nZXQoImJhc2VVcmwiKSxzKS50aGVuKGZ1bmN0aW9uKHQpe24uc2V0KCJzZWN1cml0eUltYWdlIix0KX0pLmZhaWwoZnVuY3Rpb24obil7aWYoIWkuY29yc0lzTm90RW5hYmxlZChuKSl0aHJvdyBuO2Uuc2V0dGluZ3MuY2FsbEdsb2JhbEVycm9yKG5ldyBvLlVuc3VwcG9ydGVkQnJvd3NlckVycm9yKHQubG9jKCJlcnJvci5lbmFibGVkLmNvcnMiKSkpfSkuZG9uZSgpfSl9fSxsb2NhbDp7YmFzZVVybDoic3RyaW5nIixsYXN0QXV0aFJlc3BvbnNlOlsib2JqZWN0IiwhMCx7fV0sdHJhbnNhY3Rpb246Im9iamVjdCIsdHJhbnNhY3Rpb25FcnJvcjoib2JqZWN0Iix1c2VybmFtZToic3RyaW5nIixmYWN0b3JzOiJvYmplY3QiLHBvbGljeToib2JqZWN0IixzZWN1cml0eUltYWdlOlsic3RyaW5nIiwhMCxwXSx1c2VyQ291bnRyeUNvZGU6InN0cmluZyIsdXNlclBob25lTnVtYmVyOiJzdHJpbmciLGZhY3RvckFjdGl2YXRpb25UeXBlOiJzdHJpbmciLGZsYXNoRXJyb3I6Im9iamVjdCIsYmVhY29uVHlwZToic3RyaW5nIixsYW5ndWFnZUNvZGU6WyJzdHJpbmciLCEwXX0sc2V0QXV0aFJlc3BvbnNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYodC5fZW1iZWRkZWQmJnQuX2VtYmVkZGVkLnBvbGljeSYmdGhpcy5zZXQoInBvbGljeSIsdC5fZW1iZWRkZWQucG9saWN5KSx0Ll9lbWJlZGRlZCYmdC5fZW1iZWRkZWQuZmFjdG9ycyl7dmFyIGk9dGhpcy5zZXR0aW5ncyxvPWEubWFwKHQuX2VtYmVkZGVkLmZhY3RvcnMsZnVuY3Rpb24odCl7cmV0dXJuIHQuc2V0dGluZ3M9aSx0LmFwcFN0YXRlPWUsdH0pO3RoaXMuc2V0KCJmYWN0b3JzIixuZXcgbi5Db2xsZWN0aW9uKG8se3BhcnNlOiEwfSkpfXRoaXMuc2V0KCJsYXN0QXV0aFJlc3BvbnNlIix0KX0sZGVyaXZlZDp7aXNTdWNjZXNzUmVzcG9uc2U6e2RlcHM6WyJsYXN0QXV0aFJlc3BvbnNlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIlNVQ0NFU1MiPT09dC5zdGF0dXN9fSxpc01mYVJlcXVpcmVkOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJNRkFfUkVRVUlSRUQiPT09dC5zdGF0dXN9fSxpc01mYUVucm9sbDp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iTUZBX0VOUk9MTCI9PT10LnN0YXR1c319LGlzTWZhQ2hhbGxlbmdlOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJNRkFfQ0hBTExFTkdFIj09PXQuc3RhdHVzfX0saXNNZmFSZWplY3RlZEJ5VXNlcjp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iUkVKRUNURUQiPT09dC5mYWN0b3JSZXN1bHR9fSxpc01mYVRpbWVvdXQ6e2RlcHM6WyJsYXN0QXV0aFJlc3BvbnNlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIlRJTUVPVVQiPT09dC5mYWN0b3JSZXN1bHR9fSxpc01mYUVucm9sbEFjdGl2YXRlOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiJNRkFfRU5ST0xMX0FDVElWQVRFIj09PXQuc3RhdHVzfX0saXNXYWl0aW5nRm9yQWN0aXZhdGlvbjp7ZGVwczpbImlzTWZhRW5yb2xsQWN0aXZhdGUiLCJsYXN0QXV0aFJlc3BvbnNlIl0sZm46ZnVuY3Rpb24odCxlKXtyZXR1cm4gdCYmIldBSVRJTkciPT09ZS5mYWN0b3JSZXN1bHR9fSxoYXNNZmFSZXF1aXJlZE9wdGlvbnM6e2RlcHM6WyJsYXN0QXV0aFJlc3BvbnNlIiwiZmFjdG9ycyJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuKCJNRkFfUkVRVUlSRUQiPT09dC5zdGF0dXN8fCJNRkFfQ0hBTExFTkdFIj09PXQuc3RhdHVzKSYmKGUmJmUubGVuZ3RoPjEpfX0sdXNlcklkOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9lbWJlZGRlZCYmdC5fZW1iZWRkZWQudXNlcj90Ll9lbWJlZGRlZC51c2VyLmlkOm51bGx9fSxpc1B3ZEV4cGlyaW5nU29vbjp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4iUEFTU1dPUkRfV0FSTiI9PT10LnN0YXR1c319LHBhc3N3b3JkRXhwaXJlRGF5czp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdC5fZW1iZWRkZWQmJnQuX2VtYmVkZGVkLnBvbGljeSYmdC5fZW1iZWRkZWQucG9saWN5LmV4cGlyYXRpb24/dC5fZW1iZWRkZWQucG9saWN5LmV4cGlyYXRpb24ucGFzc3dvcmRFeHBpcmVEYXlzOm51bGx9fSxyZWNvdmVyeVR5cGU6e2RlcHM6WyJsYXN0QXV0aFJlc3BvbnNlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQucmVjb3ZlcnlUeXBlfX0sZmFjdG9yVHlwZTp7ZGVwczpbImxhc3RBdXRoUmVzcG9uc2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdC5mYWN0b3JUeXBlfX0sZmFjdG9yOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9lbWJlZGRlZCYmdC5fZW1iZWRkZWQuZmFjdG9yP3QuX2VtYmVkZGVkLmZhY3RvcjpudWxsfX0sYWN0aXZhdGVkRmFjdG9ySWQ6e2RlcHM6WyJmYWN0b3IiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdD90LmlkOm51bGx9fSxhY3RpdmF0ZWRGYWN0b3JUeXBlOntkZXBzOlsiZmFjdG9yIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dC5mYWN0b3JUeXBlOm51bGx9fSxhY3RpdmF0ZWRGYWN0b3JQcm92aWRlcjp7ZGVwczpbImZhY3RvciJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0P3QucHJvdmlkZXI6bnVsbH19LHFyY29kZTp7ZGVwczpbImZhY3RvciJdLGZuOmZ1bmN0aW9uKHQpe3RyeXtyZXR1cm4gdC5fZW1iZWRkZWQuYWN0aXZhdGlvbi5fbGlua3MucXJjb2RlLmhyZWZ9Y2F0Y2goZSl7cmV0dXJuIG51bGx9fX0sYWN0aXZhdGlvblNlbmRMaW5rczp7ZGVwczpbImZhY3RvciJdLGZuOmZ1bmN0aW9uKHQpe3ZhciBlO3RyeXtlPXQuX2VtYmVkZGVkLmFjdGl2YXRpb24uX2xpbmtzLnNlbmR9Y2F0Y2gobil7ZT1bXX1yZXR1cm4gZX19LHRleHRBY3RpdmF0aW9uTGlua1VybDp7ZGVwczpbImFjdGl2YXRpb25TZW5kTGlua3MiXSxmbjpmdW5jdGlvbih0KXt2YXIgZT1hLmZpbmRXaGVyZSh0LHtuYW1lOiJzbXMifSk7cmV0dXJuIGU/ZS5ocmVmOm51bGx9fSxlbWFpbEFjdGl2YXRpb25MaW5rVXJsOntkZXBzOlsiYWN0aXZhdGlvblNlbmRMaW5rcyJdLGZuOmZ1bmN0aW9uKHQpe3ZhciBlPWEuZmluZFdoZXJlKHQse25hbWU6ImVtYWlsIn0pO3JldHVybiBlP2UuaHJlZjpudWxsfX0sc2hhcmVkU2VjcmV0OntkZXBzOlsiZmFjdG9yIl0sZm46ZnVuY3Rpb24odCl7dHJ5e3JldHVybiB0Ll9lbWJlZGRlZC5hY3RpdmF0aW9uLnNoYXJlZFNlY3JldH1jYXRjaChlKXtyZXR1cm4gbnVsbH19fSxkdW9FbnJvbGxBY3RpdmF0aW9uOntkZXBzOlsiZmFjdG9yIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuX2VtYmVkZGVkJiZ0Ll9lbWJlZGRlZC5hY3RpdmF0aW9uP3QuX2VtYmVkZGVkLmFjdGl2YXRpb246bnVsbH19LHByZXZMaW5rOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0Ll9saW5rcyYmdC5fbGlua3MucHJldj90Ll9saW5rcy5wcmV2LmhyZWY6bnVsbH19LHVzZXI6e2RlcHM6WyJsYXN0QXV0aFJlc3BvbnNlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQuX2VtYmVkZGVkJiZ0Ll9lbWJlZGRlZC51c2VyP3QuX2VtYmVkZGVkLnVzZXI6bnVsbH19LHJlY292ZXJ5UXVlc3Rpb246e2RlcHM6WyJ1c2VyIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQucmVjb3ZlcnlfcXVlc3Rpb24/dC5yZWNvdmVyeV9xdWVzdGlvbi5xdWVzdGlvbjpudWxsfX0sdXNlclByb2ZpbGU6e2RlcHM6WyJ1c2VyIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQucHJvZmlsZT90LnByb2ZpbGU6bnVsbH19LHVzZXJFbWFpbDp7ZGVwczpbInVzZXJQcm9maWxlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQubG9naW4/dC5sb2dpbjpudWxsfX0sdXNlckZ1bGxOYW1lOntkZXBzOlsidXNlclByb2ZpbGUiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdCYmKHQuZmlyc3ROYW1lfHx0Lmxhc3ROYW1lKT90LmZpcnN0TmFtZSsiICIrdC5sYXN0TmFtZToiIn19LGhhc0V4aXN0aW5nUGhvbmVzOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe2lmKCF0Ll9lbWJlZGRlZHx8IXQuX2VtYmVkZGVkLmZhY3RvcnMpcmV0dXJuITE7dmFyIGU9dC5fZW1iZWRkZWQuZmFjdG9ycyxuPWEuZmluZFdoZXJlKGUse2ZhY3RvclR5cGU6InNtcyIscHJvdmlkZXI6Ik9LVEEifSk7cmV0dXJuISghbnx8IW4uX2VtYmVkZGVkKSYmISFuLl9lbWJlZGRlZC5waG9uZXMubGVuZ3RofX0saGFzRXhpc3RpbmdQaG9uZXNGb3JDYWxsOntkZXBzOlsibGFzdEF1dGhSZXNwb25zZSJdLGZuOmZ1bmN0aW9uKHQpe2lmKCF0Ll9lbWJlZGRlZHx8IXQuX2VtYmVkZGVkLmZhY3RvcnMpcmV0dXJuITE7dmFyIGU9dC5fZW1iZWRkZWQuZmFjdG9ycyxuPWEuZmluZFdoZXJlKGUse2ZhY3RvclR5cGU6ImNhbGwiLHByb3ZpZGVyOiJPS1RBIn0pO3JldHVybiEoIW58fCFuLl9lbWJlZGRlZCkmJiEhbi5fZW1iZWRkZWQucGhvbmVzLmxlbmd0aH19LGlzVW5kZWZpbmVkVXNlcjp7ZGVwczpbInNlY3VyaXR5SW1hZ2UiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gdD09PXB9fSxpc05ld1VzZXI6e2RlcHM6WyJzZWN1cml0eUltYWdlIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1ofX0sYWxsb3dSZW1lbWJlckRldmljZTp7ZGVwczpbInBvbGljeSJdLGZuOmZ1bmN0aW9uKHQpe3JldHVybiB0JiZ0LmFsbG93UmVtZW1iZXJEZXZpY2V9fSxyZW1lbWJlckRldmljZUxhYmVsOntkZXBzOlsicG9saWN5Il0sZm46ZnVuY3Rpb24oZSl7aWYoZSYmZS5yZW1lbWJlckRldmljZUxpZmV0aW1lSW5NaW51dGVzPjApe3ZhciBuPXMoZS5yZW1lbWJlckRldmljZUxpZmV0aW1lSW5NaW51dGVzKTtyZXR1cm4gdC5sb2MoInJlbWVtYmVyRGV2aWNlLnRpbWViYXNlZCIsImxvZ2luIixbbl0pfXJldHVybiBlJiYwPT09ZS5yZW1lbWJlckRldmljZUxpZmV0aW1lSW5NaW51dGVzP3QubG9jKCJyZW1lbWJlckRldmljZS5kZXZpY2ViYXNlZCIsImxvZ2luIik6dC5sb2MoInJlbWVtYmVyRGV2aWNlIiwibG9naW4iKX19LHJlbWVtYmVyRGV2aWNlQnlEZWZhdWx0OntkZXBzOlsicG9saWN5Il0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQucmVtZW1iZXJEZXZpY2VCeURlZmF1bHR9fX0scGFyc2U6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2V0dGluZ3M9dC5zZXR0aW5ncyxhLmV4dGVuZChhLm9taXQodCwic2V0dGluZ3MiKSx7bGFuZ3VhZ2VDb2RlOnRoaXMuc2V0dGluZ3MuZ2V0KCJsYW5ndWFnZUNvZGUiKX0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oOSksbigxMDApLG4oOTgpXSxvPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBvPXQuXyxyPTZlMyxzPWkuZXh0ZW5kKHtleHRyYVByb3BlcnRpZXM6ITAsZmxhdDohMSxwcm9wczp7aWQ6InN0cmluZyIsZmFjdG9yVHlwZTp7dHlwZToic3RyaW5nIix2YWx1ZXM6WyJzbXMiLCJjYWxsIiwidG9rZW4iLCJ0b2tlbjpzb2Z0d2FyZTp0b3RwIiwidG9rZW46aGFyZHdhcmUiLCJxdWVzdGlvbiIsInB1c2giLCJ1MmYiXX0scHJvdmlkZXI6e3R5cGU6InN0cmluZyIsdmFsdWVzOlsiT0tUQSIsIlJTQSIsIkRFTF9PQVRIIiwiU1lNQU5URUMiLCJHT09HTEUiLCJZVUJJQ08iLCJGSURPIl19LGVucm9sbG1lbnQ6e3R5cGU6InN0cmluZyIsdmFsdWVzOlsiT1BUSU9OQUwiLCJSRVFVSVJFRCJdfSxzdGF0dXM6e3R5cGU6InN0cmluZyIsdmFsdWVzOlsiTk9UX1NFVFVQIiwiQUNUSVZFIl19LHByb2ZpbGU6WyJvYmplY3QiXSx2ZW5kb3JOYW1lOiJzdHJpbmcifSxsb2NhbDp7YW5zd2VyOiJzdHJpbmciLGJhY2t1cEZhY3Rvcjoib2JqZWN0IixzaG93QW5zd2VyOiJib29sZWFuIixyZW1lbWJlckRldmljZToiYm9vbGVhbiIsYXV0b1B1c2g6WyJib29sZWFuIiwhMCwhMV19LGRlcml2ZWQ6e2lzT2t0YUZhY3Rvcjp7ZGVwczpbInByb3ZpZGVyIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIk9LVEEiPT09dH19LGZhY3Rvck5hbWU6e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiXSxmbjpuLmdldEZhY3Rvck5hbWV9LGZhY3RvckxhYmVsOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIiwidmVuZG9yTmFtZSJdLGZuOmZ1bmN0aW9uKHQsZSxpKXtyZXR1cm4iREVMX09BVEgiPT09dD9pOm4uZ2V0RmFjdG9yTGFiZWwodCxlKX19LGZhY3RvckRlc2NyaXB0aW9uOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIl0sZm46bi5nZXRGYWN0b3JEZXNjcmlwdGlvbn0sc29ydE9yZGVyOntkZXBzOlsicHJvdmlkZXIiLCJmYWN0b3JUeXBlIl0sZm46bi5nZXRGYWN0b3JTb3J0T3JkZXJ9LGljb25DbGFzc05hbWU6e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiXSxmbjpuLmdldEZhY3Rvckljb25DbGFzc05hbWV9LHNlY3VyaXR5UXVlc3Rpb246e2RlcHM6WyJwcm9maWxlIiwiZmFjdG9yVHlwZSJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuInF1ZXN0aW9uIiE9PWU/bnVsbDp0JiZuLmdldFNlY3VyaXR5UXVlc3Rpb25MYWJlbCh0KX19LHBob25lTnVtYmVyOntkZXBzOlsicHJvZmlsZSIsImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0LGUpe3JldHVybiBvLmNvbnRhaW5zKFsic21zIiwiY2FsbCJdLGUpP3QmJnQucGhvbmVOdW1iZXI6bnVsbH19LGRldmljZU5hbWU6e2RlcHM6WyJwcm9maWxlIiwiZmFjdG9yVHlwZSJdLGZuOmZ1bmN0aW9uKHQsZSl7cmV0dXJuInB1c2giIT09ZT9udWxsOnQmJnQubmFtZX19LGVucm9sbGVkOntkZXBzOlsic3RhdHVzIl0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIkFDVElWRSI9PT10fX0scmVxdWlyZWQ6e2RlcHM6WyJlbnJvbGxtZW50Il0sZm46ZnVuY3Rpb24odCl7cmV0dXJuIlJFUVVJUkVEIj09PXR9fSxjYW5Vc2VSZXNlbmQ6e2RlcHM6WyJwcm92aWRlciIsImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0LGUpe3JldHVybiJPS1RBIj09PXQmJiJwdXNoIj09PWV9fSxpc1NNU29yQ2FsbDp7ZGVwczpbImZhY3RvclR5cGUiXSxmbjpmdW5jdGlvbih0KXtyZXR1cm4gby5jb250YWlucyhbInNtcyIsImNhbGwiXSx0KX19fSxwYXJzZTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXR0aW5ncz10LnNldHRpbmdzLHRoaXMuYXBwU3RhdGU9dC5hcHBTdGF0ZSx0LnJlbWVtYmVyRGV2aWNlPW4uZ2V0UmVtZW1iZXJEZXZpY2VWYWx1ZSh0aGlzLmFwcFN0YXRlKSxvLm9taXQodCxbInNldHRpbmdzIiwiYXBwU3RhdGUiXSl9LHZhbGlkYXRlOmZ1bmN0aW9uKCl7aWYodGhpcy5nZXQoImlzU01Tb3JDYWxsIikmJiF0aGlzLmdldCgiYW5zd2VyIikpcmV0dXJue2Fuc3dlcjp0LmxvYygibW9kZWwudmFsaWRhdGlvbi5maWVsZC5ibGFuayIpfX0sc2F2ZTpmdW5jdGlvbigpe3ZhciB0PSEhdGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIHRoaXMuZG9UcmFuc2FjdGlvbihmdW5jdGlvbihuKXt2YXIgaT17cmVtZW1iZXJEZXZpY2U6dH07InF1ZXN0aW9uIj09PXRoaXMuZ2V0KCJmYWN0b3JUeXBlIik/aS5hbnN3ZXI9dGhpcy5nZXQoImFuc3dlciIpOmkucGFzc0NvZGU9dGhpcy5nZXQoImFuc3dlciIpO3ZhciBzO2lmKCJNRkFfUkVRVUlSRUQiPT09bi5zdGF0dXMpe3ZhciBhPW8uZmluZFdoZXJlKG4uZmFjdG9ycyx7aWQ6dGhpcy5nZXQoImlkIil9KTtzPWEudmVyaWZ5KGkpfWVsc2UgaWYodGhpcy5nZXQoImNhblVzZVJlc2VuZCIpJiZuLnJlc2VuZCl7dmFyIGw9bi5kYXRhLl9saW5rcy5yZXNlbmRbMF07cz1uLnJlc2VuZChsLm5hbWUpfWVsc2Ugcz1uLnZlcmlmeShpKTtyZXR1cm4gdGhpcy50cmlnZ2VyKCJzYXZlIikscy50aGVuKGZ1bmN0aW9uKHQpe3JldHVybiJNRkFfQ0hBTExFTkdFIj09PXQuc3RhdHVzJiZ0LnBvbGw/ZS5kZWxheShyKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIHQucG9sbChyKX0pOnR9KS5mYWlsKGZ1bmN0aW9uKHQpe3Rocm93IHR9KX0pfX0pLGE9dC5Db2xsZWN0aW9uLmV4dGVuZCh7bW9kZWw6cyxjb21wYXJhdG9yOiJzb3J0T3JkZXIiLHBhcnNlOmZ1bmN0aW9uKHQpe3RoaXMubGFzdFVzZWRGYWN0b3I9dFswXTt2YXIgZT1vLmZpbmRXaGVyZSh0LHtwcm92aWRlcjoiT0tUQSIsZmFjdG9yVHlwZToicHVzaCJ9KTtpZighZSlyZXR1cm4gdDt2YXIgbj1vLmZpbmRXaGVyZSh0LHtwcm92aWRlcjoiT0tUQSIsZmFjdG9yVHlwZToidG9rZW46c29mdHdhcmU6dG90cCJ9KSxpPW49PT10WzBdLHI9by5yZWR1Y2UodCxmdW5jdGlvbih0LGkpe3ZhciBvPSJPS1RBIj09PWkucHJvdmlkZXIscj1vJiYidG9rZW46c29mdHdhcmU6dG90cCI9PT1pLmZhY3RvclR5cGUsYT1vJiYicHVzaCI9PT1pLmZhY3RvclR5cGUsbD0iQUNUSVZFIiE9PWkuc3RhdHVzLGM9ciYmKGx8fCJBQ1RJVkUiPT09ZS5zdGF0dXMpLHU9YSYmbCYmIkFDVElWRSI9PT1uLnN0YXR1cztyZXR1cm4gY3x8dT90OihhJiYoaS5iYWNrdXBGYWN0b3I9bmV3IHMobix7cGFyc2U6ITB9KSksdC5wdXNoKGkpLHQpfSxbXSk7cmV0dXJuIGkmJih0aGlzLmxhc3RVc2VkRmFjdG9yPWUpLHJ9LGdldERlZmF1bHRGYWN0b3I6ZnVuY3Rpb24oKXt2YXIgdD1vLnBpY2sodGhpcy5sYXN0VXNlZEZhY3RvciwiZmFjdG9yVHlwZSIsInByb3ZpZGVyIik7cmV0dXJuIHRoaXMuZmluZFdoZXJlKHQpfSxnZXRGaXJzdFVuZW5yb2xsZWRSZXF1aXJlZEZhY3RvcjpmdW5jdGlvbigpe3JldHVybiB0aGlzLmZpbmRXaGVyZSh7cmVxdWlyZWQ6ITAsZW5yb2xsZWQ6ITF9KX19KTtyZXR1cm57TW9kZWw6cyxDb2xsZWN0aW9uOmF9fS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oMTE4KSxuKDExOSksbigxMDQpLG4oMTAyKSxuKDExMSksbigxMjApXSxvPWZ1bmN0aW9uKHQsZSxuLGksbyxyLHMpe3ZhciBhPXt9LGw9dC50cGwoInNpZ25pbi92ZXJpZnkve3twcm92aWRlcn19L3t7ZmFjdG9yVHlwZX19IiksYz10LnRwbCgic2lnbmluL2Vucm9sbC97e3Byb3ZpZGVyfX0ve3tmYWN0b3JUeXBlfX0iKSx1PXQudHBsKCJzaWduaW4vZW5yb2xsLWFjdGl2YXRlL3t7cHJvdmlkZXJ9fS97e2ZhY3RvclR5cGV9fXt7I2lmIHN0ZXB9fS97e3N0ZXB9fXt7L2lmfX0iKSxwPXQudHBsKCJzaWduaW4vcmVjb3Zlcnkve3tyZWNvdmVyeVRva2VufX0iKSxoPXQudHBsKCJzaWduaW4vcmVmcmVzaC1hdXRoLXN0YXRle3sjaWYgdG9rZW59fS97e3Rva2VufX17ey9pZn19IiksZD10LnRwbCgie3tiYXNlVXJsfX0vbG9naW4vc2Vzc2lvbkNvb2tpZVJlZGlyZWN0P2NoZWNrQWNjb3VudFNldHVwQ29tcGxldGU9dHJ1ZSZ0b2tlbj17e3t0b2tlbn19fSZyZWRpcmVjdFVybD17e3tyZWRpcmVjdFVybH19fSIpO3JldHVybiBhLmNyZWF0ZVZlcmlmeVVybD1mdW5jdGlvbih0LGUpewpyZXR1cm4gbCh7cHJvdmlkZXI6ZW5jb2RlVVJJQ29tcG9uZW50KHQudG9Mb3dlckNhc2UoKSksZmFjdG9yVHlwZTplbmNvZGVVUklDb21wb25lbnQoZSl9KX0sYS5jcmVhdGVFbnJvbGxGYWN0b3JVcmw9ZnVuY3Rpb24odCxlKXtyZXR1cm4gYyh7cHJvdmlkZXI6ZW5jb2RlVVJJQ29tcG9uZW50KHQudG9Mb3dlckNhc2UoKSksZmFjdG9yVHlwZTplbmNvZGVVUklDb21wb25lbnQoZSl9KX0sYS5jcmVhdGVBY3RpdmF0ZUZhY3RvclVybD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIHUoe3Byb3ZpZGVyOmVuY29kZVVSSUNvbXBvbmVudCh0LnRvTG93ZXJDYXNlKCkpLGZhY3RvclR5cGU6ZW5jb2RlVVJJQ29tcG9uZW50KGUpLHN0ZXA6ISFuJiZlbmNvZGVVUklDb21wb25lbnQobil9KX0sYS5jcmVhdGVSZWNvdmVyeVVybD1mdW5jdGlvbih0KXtyZXR1cm4gcCh7cmVjb3ZlcnlUb2tlbjplbmNvZGVVUklDb21wb25lbnQodCl9KX0sYS5jcmVhdGVSZWZyZXNoVXJsPWZ1bmN0aW9uKHQpe3ZhciBlPXQ/ZW5jb2RlVVJJQ29tcG9uZW50KHQpOm51bGw7cmV0dXJuIGgoe3Rva2VuOmV9KX0sYS5yb3V0ZUFmdGVyQXV0aFN0YXR1c0NoYW5nZT1mdW5jdGlvbihsLGMsdSl7aWYoYyYmYy54aHImJm8uY29yc0lzTm90RW5hYmxlZChjLnhocikpcmV0dXJuIHZvaWQgbC5zZXR0aW5ncy5jYWxsR2xvYmFsRXJyb3IobmV3IHIuVW5zdXBwb3J0ZWRCcm93c2VyRXJyb3IodC5sb2MoImVycm9yLmVuYWJsZWQuY29ycyIpKSk7aWYoYyYmYy5lcnJvckNvZGU9PT1zLklOVkFMSURfVE9LRU5fRVhDRVBUSU9OKXJldHVybiBsLmFwcFN0YXRlLnNldCgiZmxhc2hFcnJvciIsdC5sb2MoImVycm9yLmV4cGlyZWQuc2Vzc2lvbiIpKSxsLmNvbnRyb2xsZXIuc3RhdGUuc2V0KCJuYXZpZ2F0ZURpciIsaS5ESVJFQ1RJT05fQkFDSyksdm9pZCBsLm5hdmlnYXRlKCIiLHt0cmlnZ2VyOiEwfSk7aWYoIWMmJnUmJnUuc3RhdHVzJiYobC5hcHBTdGF0ZS5zZXRBdXRoUmVzcG9uc2UodSksIWwuY29udHJvbGxlcnx8IWwuY29udHJvbGxlci50cmFwQXV0aFJlc3BvbnNlKHUpKSlzd2l0Y2godS5zdGF0dXMpe2Nhc2UiU1VDQ0VTUyI6cmV0dXJuIGwuc2V0dGluZ3MuZ2V0KCJvYXV0aDJFbmFibGVkIik/dm9pZCBuLmdldFRva2VucyhsLnNldHRpbmdzLHtzZXNzaW9uVG9rZW46dS5zZXNzaW9uVG9rZW59KTp1LnJlY292ZXJ5VHlwZT09PWkuUkVDT1ZFUllfVFlQRV9VTkxPQ0s/dm9pZCBsLm5hdmlnYXRlKCJzaWduaW4vYWNjb3VudC11bmxvY2tlZCIse3RyaWdnZXI6ITB9KTp2b2lkIGwuc2V0dGluZ3MuY2FsbEdsb2JhbFN1Y2Nlc3MoaS5TVUNDRVNTLHt1c2VyOnUuX2VtYmVkZGVkLnVzZXIsc2Vzc2lvbjp7dG9rZW46dS5zZXNzaW9uVG9rZW4sc2V0Q29va2llQW5kUmVkaXJlY3Q6ZnVuY3Rpb24odCl7ZS5yZWRpcmVjdChkKHtiYXNlVXJsOmwuc2V0dGluZ3MuZ2V0KCJiYXNlVXJsIiksdG9rZW46ZW5jb2RlVVJJQ29tcG9uZW50KHUuc2Vzc2lvblRva2VuKSxyZWRpcmVjdFVybDplbmNvZGVVUklDb21wb25lbnQodCl9KSl9fX0pO2Nhc2UiTUZBX1JFUVVJUkVEIjp2YXIgcD1sLmFwcFN0YXRlLmdldCgiZmFjdG9ycyIpLmdldERlZmF1bHRGYWN0b3IoKSxoPWEuY3JlYXRlVmVyaWZ5VXJsKHAuZ2V0KCJwcm92aWRlciIpLHAuZ2V0KCJmYWN0b3JUeXBlIikpO3JldHVybiB2b2lkIGwubmF2aWdhdGUoaCx7dHJpZ2dlcjohMH0pO2Nhc2UiTUZBX0NIQUxMRU5HRSI6cmV0dXJuIHZvaWQgbC5hcHBTdGF0ZS5nZXQoInRyYW5zYWN0aW9uIikucHJldigpLnRoZW4oZnVuY3Rpb24odCl7bC5hcHBTdGF0ZS5zZXQoInRyYW5zYWN0aW9uIix0KX0pLmRvbmUoKTtjYXNlIk1GQV9FTlJPTEwiOnJldHVybiB2b2lkIGwubmF2aWdhdGUoInNpZ25pbi9lbnJvbGwiLHt0cmlnZ2VyOiEwfSk7Y2FzZSJNRkFfRU5ST0xMX0FDVElWQVRFIjp2YXIgZj1hLmNyZWF0ZUFjdGl2YXRlRmFjdG9yVXJsKGwuYXBwU3RhdGUuZ2V0KCJhY3RpdmF0ZWRGYWN0b3JQcm92aWRlciIpLGwuYXBwU3RhdGUuZ2V0KCJhY3RpdmF0ZWRGYWN0b3JUeXBlIikpO3JldHVybiB2b2lkIGwubmF2aWdhdGUoZix7dHJpZ2dlcjohMH0pO2Nhc2UiUEFTU1dPUkRfV0FSTiI6Y2FzZSJQQVNTV09SRF9FWFBJUkVEIjpyZXR1cm4gdm9pZCBsLm5hdmlnYXRlKCJzaWduaW4vcGFzc3dvcmQtZXhwaXJlZCIse3RyaWdnZXI6ITB9KTtjYXNlIlJFQ09WRVJZX0NIQUxMRU5HRSI6dmFyIG09dS5mYWN0b3JUeXBlLnRvTG93ZXJDYXNlKCk9PT1pLlJFQ09WRVJZX0ZBQ1RPUl9UWVBFX0VNQUlMLnRvTG93ZXJDYXNlKCksZz11LnJlY292ZXJ5VHlwZT09PWkuUkVDT1ZFUllfVFlQRV9QQVNTV09SRCx2PXUucmVjb3ZlcnlUeXBlPT09aS5SRUNPVkVSWV9UWVBFX1VOTE9DSztyZXR1cm4gdm9pZChnJiZtP2wubmF2aWdhdGUoInNpZ25pbi9yZWNvdmVyeS1lbWFpbGVkIix7dHJpZ2dlcjohMH0pOnYmJm0/bC5uYXZpZ2F0ZSgic2lnbmluL3VubG9jay1lbWFpbGVkIix7dHJpZ2dlcjohMH0pOmwubmF2aWdhdGUoInNpZ25pbi9yZWNvdmVyeS1jaGFsbGVuZ2UiLHt0cmlnZ2VyOiEwfSkpO2Nhc2UiUkVDT1ZFUlkiOnJldHVybiB2b2lkIGwubmF2aWdhdGUoInNpZ25pbi9yZWNvdmVyeS1xdWVzdGlvbiIse3RyaWdnZXI6ITB9KTtjYXNlIlBBU1NXT1JEX1JFU0VUIjpyZXR1cm4gdm9pZCBsLm5hdmlnYXRlKCJzaWduaW4vcGFzc3dvcmQtcmVzZXQiLHt0cmlnZ2VyOiEwfSk7Y2FzZSJMT0NLRURfT1VUIjpyZXR1cm4gdm9pZChsLnNldHRpbmdzLmdldCgiZmVhdHVyZXMuc2VsZlNlcnZpY2VVbmxvY2siKT9sLm5hdmlnYXRlKCJzaWduaW4vdW5sb2NrIix7dHJpZ2dlcjohMH0pOmwuY29udHJvbGxlci5tb2RlbC50cmlnZ2VyKCJlcnJvciIsbC5jb250cm9sbGVyLm1vZGVsLHtyZXNwb25zZUpTT046e2Vycm9yQ2F1c2VzOltdLGVycm9yU3VtbWFyeTp0LmxvYygiZXJyb3IuYXV0aC5sb2NrZWRPdXQiLCJsb2dpbiIpfX0pKTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcigiVW5rbm93biBzdGF0dXM6ICIrdS5zdGF0dXMpfX0sYX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDIpXSxvPWZ1bmN0aW9uKHQpe3JldHVybntyZWRpcmVjdDpmdW5jdGlvbih0KXt3aW5kb3cubG9jYXRpb249dH0sY29uc3RhbnRFcnJvcjpmdW5jdGlvbih0KXtyZXR1cm4gZnVuY3Rpb24oKXt0aHJvdyBuZXcgRXJyb3IodCl9fSxnZXRVcmxRdWVyeVN0cmluZzpmdW5jdGlvbihlKXt0LmlzT2JqZWN0KGUpfHwoZT17fSk7dmFyIG49dC53aXRob3V0KHQubWFwKGUsZnVuY3Rpb24odCxlKXtpZih2b2lkIDAhPT10JiZudWxsIT09dClyZXR1cm4gZSsiPSIrZW5jb2RlVVJJQ29tcG9uZW50KHQpfSksdm9pZCAwKS5qb2luKCImIik7cmV0dXJuIHQuaXNFbXB0eShuKT8iIjoiPyIrbn19fS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oMTA0KSxuKDExMSldLG89ZnVuY3Rpb24odCxlLG4pe2Z1bmN0aW9uIGkodCxlKXtyZXR1cm4gci5pc0FycmF5KHQucmVzcG9uc2VUeXBlKT9yLmNvbnRhaW5zKHQucmVzcG9uc2VUeXBlLGUpOmU9PT10LnJlc3BvbnNlVHlwZX12YXIgbz17fSxyPXQuXztyZXR1cm4gby5nZXRUb2tlbnM9ZnVuY3Rpb24obyxzKXtmdW5jdGlvbiBhKHQpe28uY2FsbEdsb2JhbFN1Y2Nlc3MoZS5TVUNDRVNTLHQpfWZ1bmN0aW9uIGwodCl7by5jYWxsR2xvYmFsRXJyb3IobmV3IG4uT0F1dGhFcnJvcih0Lm1lc3NhZ2UpKX12YXIgYz1vLmdldEF1dGhDbGllbnQoKSx1PW8udG9KU09OKHt2ZXJib3NlOiEwfSkscD17fSxoPXt9O3IuZXh0ZW5kKHAsci5waWNrKHUsImNsaWVudElkIiwicmVkaXJlY3RVcmkiKSxyLnBpY2sodS5hdXRoUGFyYW1zLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZU1vZGUiLCJkaXNwbGF5Iiwic2NvcGVzIikscyksaC5wb3B1cFRpdGxlPXQubG9jKCJzb2NpYWxhdXRoLnBvcHVwLnRpdGxlIiwibG9naW4iKSxoLnRpbWVvdXQ9dS5vQXV0aFRpbWVvdXQsInBhZ2UiPT09cC5kaXNwbGF5fHxpKHAsImNvZGUiKT9jLnRva2VuLmdldFdpdGhSZWRpcmVjdChwLGgpOnAuc2Vzc2lvblRva2VuP2MudG9rZW4uZ2V0V2l0aG91dFByb21wdChwLGgpLnRoZW4oYSkuZmFpbChsKS5kb25lKCk6Yy50b2tlbi5nZXRXaXRoUG9wdXAocCxoKS50aGVuKGEpLmZhaWwobCkuZG9uZSgpfSxvfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXshKHQuZXhwb3J0cz17SU5WQUxJRF9UT0tFTl9FWENFUFRJT046IkUwMDAwMDExIn0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEyMiksbig5KSxuKDEwMCksbig5NSksbigxMDQpLG4oOTYpLG4oMTIzKV0sbz1mdW5jdGlvbih0LGUsbixpLG8scixzLGEpe3ZhciBsPXQuJCxjPXQuXztyZXR1cm4gby5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS1kdW8gZHVvLWZvcm0iLE1vZGVsOntwcm9wczp7aG9zdDoic3RyaW5nIixzaWduYXR1cmU6InN0cmluZyIscG9zdEFjdGlvbjoic3RyaW5nIixmYWN0b3JJZDoic3RyaW5nIixzdGF0ZVRva2VuOiJzdHJpbmciLHJlbWVtYmVyRGV2aWNlOiJib29sZWFuIn0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciB0PWkuZ2V0UmVtZW1iZXJEZXZpY2VWYWx1ZSh0aGlzLmFwcFN0YXRlKTt0aGlzLnNldCgicmVtZW1iZXJEZXZpY2UiLHQpfSxnZXRJbml0T3B0aW9uczpmdW5jdGlvbigpe3ZhciB0PSEhdGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIHRoaXMuZG9UcmFuc2FjdGlvbihmdW5jdGlvbihlKXt2YXIgbj17cmVtZW1iZXJEZXZpY2U6dH0saT1jLmZpbmRXaGVyZShlLmZhY3RvcnMse3Byb3ZpZGVyOiJEVU8iLGZhY3RvclR5cGU6IndlYiJ9KTtyZXR1cm4gaS52ZXJpZnkobikuZmFpbChmdW5jdGlvbih0KXt0aHJvdyB0fSl9KX0sdmVyaWZ5OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0KCJwb3N0QWN0aW9uIiksaT10aGlzLmdldCgiZmFjdG9ySWQiKSxvPXRoaXMscj17aWQ6aSxzdGF0ZVRva2VuOnRoaXMuZ2V0KCJzdGF0ZVRva2VuIiksc2lnX3Jlc3BvbnNlOnR9LHM9dGhpcy5nZXQoInJlbWVtYmVyRGV2aWNlIik7cmV0dXJuIG4obC5wb3N0KGUscikpLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gby5kb1RyYW5zYWN0aW9uKGZ1bmN0aW9uKHQpe3ZhciBlO3JldHVybiBzJiYoZT17cmVtZW1iZXJEZXZpY2U6c30pLHQucG9sbChlKX0pfSkuZmFpbChmdW5jdGlvbih0KXtvLnRyaWdnZXIoImVycm9yIixvLHQueGhyKX0pfX0sRm9ybTp7YXV0b1NhdmU6ITAsbm9CdXR0b25CYXI6ITAsdGl0bGU6Yy5wYXJ0aWFsKHQubG9jLCJmYWN0b3IuZHVvIiksYXR0cmlidXRlczp7ImRhdGEtc2UiOiJmYWN0b3ItZHVvIn0scG9zdFJlbmRlcjpmdW5jdGlvbigpe3RoaXMuYWRkKCc8aWZyYW1lIGZyYW1lYm9yZGVyPSIwIj48L2lmcmFtZT4nKSx0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJhbGxvd1JlbWVtYmVyRGV2aWNlIikmJnRoaXMuYWRkSW5wdXQoe2xhYmVsOiExLCJsYWJlbC10b3AiOiEwLHBsYWNlaG9sZGVyOnRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoInJlbWVtYmVyRGV2aWNlTGFiZWwiKSxjbGFzc05hbWU6Im1hcmdpbi1idG0tMCIsbmFtZToicmVtZW1iZXJEZXZpY2UiLHR5cGU6ImNoZWNrYm94In0pLGUuaW5pdCh7aG9zdDp0aGlzLm1vZGVsLmdldCgiaG9zdCIpLHNpZ19yZXF1ZXN0OnRoaXMubW9kZWwuZ2V0KCJzaWduYXR1cmUiKSxpZnJhbWU6dGhpcy4kKCJpZnJhbWUiKS5nZXQoMCkscG9zdF9hY3Rpb246Yy5iaW5kKHRoaXMubW9kZWwudmVyaWZ5LHRoaXMubW9kZWwpfSl9fSxGb290ZXI6YSxmZXRjaEluaXRpYWxEYXRhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gdGhpcy5tb2RlbC5nZXRJbml0T3B0aW9ucygpLnRoZW4oZnVuY3Rpb24oZSl7dmFyIG49ZS5kYXRhO2lmKCEobi5fZW1iZWRkZWQmJm4uX2VtYmVkZGVkLmZhY3RvciYmbi5fZW1iZWRkZWQuZmFjdG9yLl9lbWJlZGRlZCYmbi5fZW1iZWRkZWQuZmFjdG9yLl9lbWJlZGRlZC52ZXJpZmljYXRpb24pKXRocm93IG5ldyBFcnJvcigiUmVzcG9uc2UgZG9lcyBub3QgaGF2ZSBkdW8gdmVyaWZpY2F0aW9uIG9wdGlvbnMiKTt2YXIgaT1uLl9lbWJlZGRlZC5mYWN0b3IuX2VtYmVkZGVkLnZlcmlmaWNhdGlvbjt0Lm1vZGVsLnNldCh7aG9zdDppLmhvc3Qsc2lnbmF0dXJlOmkuc2lnbmF0dXJlLHBvc3RBY3Rpb246aS5fbGlua3MuY29tcGxldGUuaHJlZixmYWN0b3JJZDpuLl9lbWJlZGRlZC5mYWN0b3IuaWQsc3RhdGVUb2tlbjpuLnN0YXRlVG9rZW59KX0pfSx0cmFwQXV0aFJlc3BvbnNlOmZ1bmN0aW9uKCl7aWYodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiaXNNZmFDaGFsbGVuZ2UiKSlyZXR1cm4hMH19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGk7aT1mdW5jdGlvbigpe2Z1bmN0aW9uIHQodCxlKXt0aHJvdyBuZXcgRXJyb3IoIkR1byBXZWIgU0RLIGVycm9yOiAiK3QrKGU/IlxuU2VlICIrZSsiIGZvciBtb3JlIGluZm9ybWF0aW9uIjoiIikpfWZ1bmN0aW9uIGUodCl7cmV0dXJuIHQucmVwbGFjZSgvKFthLXpdKShbQS1aXSkvLCIkMS0kMiIpLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gbih0LG4pe3JldHVybiJkYXRhc2V0ImluIHQ/dC5kYXRhc2V0W25dOnQuZ2V0QXR0cmlidXRlKCJkYXRhLSIrZShuKSl9ZnVuY3Rpb24gaSh0LGUsbixpKXsiYWRkRXZlbnRMaXN0ZW5lciJpbiB3aW5kb3c/dC5hZGRFdmVudExpc3RlbmVyKGUsaSwhMSk6dC5hdHRhY2hFdmVudChuLGkpfWZ1bmN0aW9uIG8odCxlLG4saSl7InJlbW92ZUV2ZW50TGlzdGVuZXIiaW4gd2luZG93P3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLGksITEpOnQuZGV0YWNoRXZlbnQobixpKX1mdW5jdGlvbiByKHQpe2koZG9jdW1lbnQsIkRPTUNvbnRlbnRMb2FkZWQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLHQpfWZ1bmN0aW9uIHModCl7byhkb2N1bWVudCwiRE9NQ29udGVudExvYWRlZCIsIm9ucmVhZHlzdGF0ZWNoYW5nZSIsdCl9ZnVuY3Rpb24gYSh0KXtpKHdpbmRvdywibWVzc2FnZSIsIm9ubWVzc2FnZSIsdCl9ZnVuY3Rpb24gbCh0KXtvKHdpbmRvdywibWVzc2FnZSIsIm9ubWVzc2FnZSIsdCl9ZnVuY3Rpb24gYyhlKXtpZihlKXswPT09ZS5pbmRleE9mKCJFUlJ8IikmJnQoZS5zcGxpdCgifCIpWzFdKSxlLmluZGV4T2YoIjoiKSE9PS0xJiYyPT09ZS5zcGxpdCgiOiIpLmxlbmd0aHx8dCgiRHVvIHdhcyBnaXZlbiBhIGJhZCB0b2tlbi4gIFRoaXMgbWlnaHQgaW5kaWNhdGUgYSBjb25maWd1cmF0aW9uIHByb2JsZW0gd2l0aCBvbmUgb2YgRHVvJ3MgY2xpZW50IGxpYnJhcmllcy4iLCJodHRwczovL3d3dy5kdW9zZWN1cml0eS5jb20vZG9jcy9kdW93ZWIjZmlyc3Qtc3RlcHMiKTt2YXIgbj1lLnNwbGl0KCI6Iik7cmV0dXJuIHY9ZSx5PW5bMF0sXz1uWzFdLHtzaWdSZXF1ZXN0OmUsZHVvU2lnOm5bMF0sYXBwU2lnOm5bMV19fX1mdW5jdGlvbiB1KCl7aWYoYj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChrKSwhYil0aHJvdyBuZXcgRXJyb3IoJ1RoaXMgcGFnZSBkb2VzIG5vdCBjb250YWluIGFuIGlmcmFtZSBmb3IgRHVvIHRvIHVzZS5BZGQgYW4gZWxlbWVudCBsaWtlIDxpZnJhbWUgaWQ9ImR1b19pZnJhbWUiPjwvaWZyYW1lPiB0byB0aGlzIHBhZ2UuICBTZWUgaHR0cHM6Ly93d3cuZHVvc2VjdXJpdHkuY29tL2RvY3MvZHVvd2ViIzMuLXNob3ctdGhlLWlmcmFtZSBmb3IgbW9yZSBpbmZvcm1hdGlvbi4nKTtmKCkscyh1KX1mdW5jdGlvbiBwKHQpe3JldHVybiBCb29sZWFuKHQub3JpZ2luPT09Imh0dHBzOi8vIitnJiYic3RyaW5nIj09dHlwZW9mIHQuZGF0YSYmKHQuZGF0YS5tYXRjaCh3KXx8dC5kYXRhLm1hdGNoKFMpKSl9ZnVuY3Rpb24gaCh0KXt0JiYodC5ob3N0JiYoZz10Lmhvc3QpLHQuc2lnX3JlcXVlc3QmJmModC5zaWdfcmVxdWVzdCksdC5wb3N0X2FjdGlvbiYmKHg9dC5wb3N0X2FjdGlvbiksdC5wb3N0X2FyZ3VtZW50JiYoRT10LnBvc3RfYXJndW1lbnQpLHQuaWZyYW1lJiYoInRhZ05hbWUiaW4gdC5pZnJhbWU/Yj10LmlmcmFtZToic3RyaW5nIj09dHlwZW9mIHQuaWZyYW1lJiYoaz10LmlmcmFtZSkpKSxiP2YoKTooYj1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChrKSxiP2YoKTpyKHUpKSxzKGgpfWZ1bmN0aW9uIGQodCl7cCh0KSYmKG0odC5kYXRhKSxsKGQpKX1mdW5jdGlvbiBmKCl7Z3x8KGc9bihiLCJob3N0IiksZ3x8dCgiTm8gQVBJIGhvc3RuYW1lIGlzIGdpdmVuIGZvciBEdW8gdG8gdXNlLiAgQmUgc3VyZSB0byBwYXNzIGEgYGhvc3RgIHBhcmFtZXRlciB0byBEdW8uaW5pdCwgb3IgdGhyb3VnaCB0aGUgYGRhdGEtaG9zdGAgYXR0cmlidXRlIG9uIHRoZSBpZnJhbWUgZWxlbWVudC4iLCJodHRwczovL3d3dy5kdW9zZWN1cml0eS5jb20vZG9jcy9kdW93ZWIjMy4tc2hvdy10aGUtaWZyYW1lIikpLHkmJl98fChjKG4oYiwic2lnUmVxdWVzdCIpKSx5JiZffHx0KCJObyB2YWxpZCBzaWduZWQgcmVxdWVzdCBpcyBnaXZlbi4gIEJlIHN1cmUgdG8gZ2l2ZSB0aGUgYHNpZ19yZXF1ZXN0YCBwYXJhbWV0ZXIgdG8gRHVvLmluaXQsIG9yIHVzZSB0aGUgYGRhdGEtc2lnLXJlcXVlc3RgIGF0dHJpYnV0ZSBvbiB0aGUgaWZyYW1lIGVsZW1lbnQuIiwiaHR0cHM6Ly93d3cuZHVvc2VjdXJpdHkuY29tL2RvY3MvZHVvd2ViIzMuLXNob3ctdGhlLWlmcmFtZSIpKSwiIj09PXgmJih4PW4oYiwicG9zdEFjdGlvbiIpfHx4KSwic2lnX3Jlc3BvbnNlIj09PUUmJihFPW4oYiwicG9zdEFyZ3VtZW50Iil8fEUpLGIuc3JjPVsiaHR0cHM6Ly8iLGcsIi9mcmFtZS93ZWIvdjEvYXV0aD90eD0iLHksIiZwYXJlbnQ9Iixkb2N1bWVudC5sb2NhdGlvbi5ocmVmXS5qb2luKCIiKSxhKGQpfWZ1bmN0aW9uIG0odCl7eCh0KyI6IitfKX12YXIgZyx2LHksXyxiLHc9L14oPzpBVVRIfEVOUk9MTCkrXHxbQS1aYS16MC05XCtcLz1dK1x8W0EtWmEtejAtOVwrXC89XSskLyxTPS9eRVJSXHxbXHdcc1wuXChcKV0rJC8saz0iZHVvX2lmcmFtZSIseD0iIixFPSJzaWdfcmVzcG9uc2UiO3JldHVybiByKGgpLHtpbml0OmgsX3BhcnNlU2lnUmVxdWVzdDpjLF9pc0R1b01lc3NhZ2U6cH19LmNhbGwoZSxuLGUsdCksLyoqCgkgKiBEdW8gV2ViIFNESyB2MgoJICogQ29weXJpZ2h0IDIwMTUsIER1byBTZWN1cml0eQoJICovCiEodm9pZCAwIT09aSYmKHQuZXhwb3J0cz1pKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oMTA0KV0sbz1mdW5jdGlvbih0LGUpe3ZhciBuPXQuXztyZXR1cm4gdC5WaWV3LmV4dGVuZCh7dGVtcGxhdGU6J1x0ICAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Imxpbmsge3tsaW5rQ2xhc3NOYW1lfX0iIGRhdGEtc2U9InNpZ25vdXQtbGluayI+XHQgICAgICAgIHt7bGlua1RleHR9fVx0ICAgICAgPC9hPlx0ICAgICcsY2xhc3NOYW1lOiJhdXRoLWZvb3RlciBjbGVhcmZpeCIsZXZlbnRzOnsiY2xpY2sgYSI6ZnVuY3Rpb24odCl7dC5wcmV2ZW50RGVmYXVsdCgpO3ZhciBuPXRoaXM7dGhpcy5tb2RlbC5kb1RyYW5zYWN0aW9uKGZ1bmN0aW9uKHQpe3JldHVybiB0LmNhbmNlbCgpfSkudGhlbihmdW5jdGlvbigpe24uc3RhdGUuc2V0KCJuYXZpZ2F0ZURpciIsZS5ESVJFQ1RJT05fQkFDSyksbi5vcHRpb25zLmFwcFN0YXRlLnRyaWdnZXIoIm5hdmlnYXRlIiwiIil9KX19LGdldFRlbXBsYXRlRGF0YTpmdW5jdGlvbigpe3JldHVybntsaW5rQ2xhc3NOYW1lOm4uaXNVbmRlZmluZWQodGhpcy5vcHRpb25zLmxpbmtDbGFzc05hbWUpPyJnb3RvIjp0aGlzLm9wdGlvbnMubGlua0NsYXNzTmFtZSxsaW5rVGV4dDp0aGlzLm9wdGlvbnMubGlua1RleHR8fHQubG9jKCJzaWdub3V0IiwibG9naW4iKX19fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbig2OCksbig5NyksbigxMjcpLG4oMTMwKSxuKDEzMSksbigxMjUpLG4oMTMyKSxuKDEzMyksbigxMzQpLG4oMTIzKV0sbz1mdW5jdGlvbih0LGUsbixpLG8scixzLGEsbCxjLHUpe3JldHVybiBuLmV4dGVuZCh7Y2xhc3NOYW1lOiJtZmEtdmVyaWZ5Iixpbml0aWFsaXplOmZ1bmN0aW9uKG4pe3ZhciBpLHA9bi5hcHBTdGF0ZS5nZXQoImZhY3RvcnMiKSxoPW4uZmFjdG9yVHlwZSxkPW4ucHJvdmlkZXI7c3dpdGNoKGgpe2Nhc2UicXVlc3Rpb24iOmk9czticmVhaztjYXNlInNtcyI6Y2FzZSJjYWxsIjppPWE7YnJlYWs7Y2FzZSJ0b2tlbiI6Y2FzZSJ0b2tlbjpzb2Z0d2FyZTp0b3RwIjppPW87YnJlYWs7Y2FzZSJ0b2tlbjpoYXJkd2FyZSI6aT1yO2JyZWFrO2Nhc2UicHVzaCI6aT1sO2JyZWFrO2RlZmF1bHQ6dGhyb3cgbmV3IEVycm9yKCJVbnJlY29nbml6ZWQgZmFjdG9yIHR5cGUiKX1pZih0aGlzLm1vZGVsPXAuZmluZFdoZXJlKHtwcm92aWRlcjpkLGZhY3RvclR5cGU6aH0pLCF0aGlzLm1vZGVsKXRocm93IG5ldyBFcnJvcigiVW5yZWNvZ25pemVkIGZhY3Rvci9wcm92aWRlciIpO3RoaXMuYWRkTGlzdGVuZXJzKCksdGhpcy5hZGQobmV3IGkodGhpcy50b0pTT04oKSkpLCJwdXNoIj09PWgmJnRoaXMubW9kZWwuZ2V0KCJpc09rdGFGYWN0b3IiKSYmKHRoaXMuYWRkKGMse29wdGlvbnM6e21vZGVsOnRoaXMubW9kZWwuZ2V0KCJiYWNrdXBGYWN0b3IiKX19KSx0aGlzLnNldHRpbmdzLmdldCgiZmVhdHVyZXMuYXV0b1B1c2giKSYmdGhpcy5hZGQoZSx7b3B0aW9uczp7bW9kZWw6dGhpcy5tb2RlbCxuYW1lOiJhdXRvUHVzaCIscGxhY2Vob2xkZXI6dC5sb2MoImF1dG9QdXNoIiwibG9naW4iKSxsYWJlbDohMSwibGFiZWwtdG9wIjohMSxjbGFzc05hbWU6Im1hcmdpbi1idG0tMCJ9fSksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiYWxsb3dSZW1lbWJlckRldmljZSIpJiZ0aGlzLmFkZChlLHtvcHRpb25zOnttb2RlbDp0aGlzLm1vZGVsLG5hbWU6InJlbWVtYmVyRGV2aWNlIixwbGFjZWhvbGRlcjp0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJyZW1lbWJlckRldmljZUxhYmVsIiksbGFiZWw6ITEsImxhYmVsLXRvcCI6ITAsY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAifX0pLHRoaXMubGlzdGVuVG8odGhpcy5tb2RlbCwiY2hhbmdlOnJlbWVtYmVyRGV2aWNlIixmdW5jdGlvbih0LGUpe3QuZ2V0KCJiYWNrdXBGYWN0b3IiKS5zZXQoInJlbWVtYmVyRGV2aWNlIixlKX0pKSx0aGlzLmFkZChuZXcgdSh0aGlzLnRvSlNPTigpKSl9LHRyYXBBdXRoUmVzcG9uc2U6ZnVuY3Rpb24oKXtyZXR1cm4hKCF0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJpc01mYUNoYWxsZW5nZSIpJiYhdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiaXNNZmFSZXF1aXJlZCIpKXx8KCJwdXNoIj09dGhpcy5vcHRpb25zLmZhY3RvclR5cGUmJih0aGlzLnNldHRpbmdzLmdldCgiZmVhdHVyZXMuYXV0b1B1c2giKSYmdGhpcy5tb2RlbC5nZXQoImF1dG9QdXNoIik/aS5zZXRBdXRvUHVzaENvb2tpZSh0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJ1c2VySWQiKSk6aS5yZW1vdmVBdXRvUHVzaENvb2tpZSh0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJ1c2VySWQiKSkpLCExKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEyNildLG89ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll87cmV0dXJuIHQuRm9ybS5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS1xdWVzdGlvbiIsYXV0b1NhdmU6ITAsbm9DYW5jZWxCdXR0b246ITAsc2F2ZTpuLnBhcnRpYWwodC5sb2MsIm1mYS5jaGFsbGVuZ2UudmVyaWZ5IiwibG9naW4iKSxzY3JvbGxPbkVycm9yOiExLGxheW91dDoiby1mb3JtLXRoZW1lIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImZhY3Rvci1xdWVzdGlvbiJ9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLnRpdGxlPXRoaXMubW9kZWwuZ2V0KCJmYWN0b3JMYWJlbCIpLHRoaXMuYWRkSW5wdXQoe2xhYmVsOnRoaXMubW9kZWwuZ2V0KCJzZWN1cml0eVF1ZXN0aW9uIiksImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dC5sb2MoIm1mYS5jaGFsbGVuZ2UuYW5zd2VyLnBsYWNlaG9sZGVyIiwibG9naW4iKSxjbGFzc05hbWU6ImF1dGgtcGFzc2NvZGUiLG5hbWU6ImFuc3dlciIsdHlwZToicGFzc3dvcmQiLGlucHV0OmV9KSx0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJhbGxvd1JlbWVtYmVyRGV2aWNlIikmJnRoaXMuYWRkSW5wdXQoe2xhYmVsOiExLCJsYWJlbC10b3AiOiEwLHBsYWNlaG9sZGVyOnRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoInJlbWVtYmVyRGV2aWNlTGFiZWwiKSxjbGFzc05hbWU6Im1hcmdpbi1idG0tMCIsbmFtZToicmVtZW1iZXJEZXZpY2UiLHR5cGU6ImNoZWNrYm94In0pfX0pfS5hcHBseShlLGkpLCEodm9pZCAwIT09byYmKHQuZXhwb3J0cz1vKSl9LGZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxvO2k9W24oMzgpLG4oMTAxKV0sbz1mdW5jdGlvbih0LGUpe3JldHVybiBlLmV4dGVuZCh7dGVtcGxhdGU6dC50cGwoJ1x0ICAgICAgICA8aW5wdXQgdHlwZT0icGFzc3dvcmQiIHBsYWNlaG9sZGVyPSJ7e3BsYWNlaG9sZGVyfX0iIG5hbWU9Int7bmFtZX19IiBpZD0ie3tpbnB1dElkfX0iIHZhbHVlPSJ7e3ZhbHVlfX0iLz5cdCAgICAgICAgPHNwYW4gY2xhc3M9InBhc3N3b3JkLXRvZ2dsZSI+XHQgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ1dHRvbiBidXR0b24tZGFyayBidXR0b24tc2hvdyI+XHQgICAgICAgICAgICB7e2kxOG4gY29kZT0ibWZhLmNoYWxsZW5nZS5hbnN3ZXIuc2hvd0Fuc3dlciIgYnVuZGxlPSJsb2dpbiJ9fTwvc3Bhbj5cdCAgICAgICAgICA8c3BhbiBjbGFzcz0iYnV0dG9uIGJ1dHRvbi1oaWRlIj57e2kxOG4gY29kZT0ibWZhLmNoYWxsZW5nZS5hbnN3ZXIuaGlkZUFuc3dlciIgYnVuZGxlPSJsb2dpbiJ9fTwvc3Bhbj5cdCAgICAgICAgPC9zcGFuPicpLGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmV2ZW50c1siY2xpY2sgLnBhc3N3b3JkLXRvZ2dsZSAuYnV0dG9uLXNob3ciXT0iX3Nob3dQYXNzd29yZCIsdGhpcy5ldmVudHNbImNsaWNrIC5wYXNzd29yZC10b2dnbGUgLmJ1dHRvbi1oaWRlIl09Il9oaWRlUGFzc3dvcmQiLHRoaXMuZGVsZWdhdGVFdmVudHMoKX0sY2hhbmdlVHlwZTpmdW5jdGlvbih0KXtlLnByb3RvdHlwZS5jaGFuZ2VUeXBlLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLiQoIi5wYXNzd29yZC10b2dnbGUiKS50b2dnbGVDbGFzcygicGFzc3dvcmQtdG9nZ2xlLW9uIiwicGFzc3dvcmQiIT09dCl9LF9zaG93UGFzc3dvcmQ6ZnVuY3Rpb24oKXt0aGlzLmNoYW5nZVR5cGUoInRleHQiKX0sX2hpZGVQYXNzd29yZDpmdW5jdGlvbigpe3RoaXMuY2hhbmdlVHlwZSgicGFzc3dvcmQiKX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEyOCksbigxMjkpXSxvPWZ1bmN0aW9uKHQsZSl7ZnVuY3Rpb24gbih0KXtyLnJlbW92ZUNvb2tpZSh0LHtwYXRoOiIvIn0pfWZ1bmN0aW9uIGkodCxlKXtyLmNvb2tpZSh0LGUse2V4cGlyZXM6bCxwYXRoOiIvIn0pfWZ1bmN0aW9uIG8odCl7cmV0dXJuIGErZS5nZXRTdHJpbmdIYXNoKHQpfXZhciByPXQuJCxzPSJsbiIsYT0iYXV0b19wdXNoXyIsbD0zNjUsYz17fTtyZXR1cm4gYy5nZXRDb29raWVVc2VybmFtZT1mdW5jdGlvbigpe3JldHVybiByLmNvb2tpZShzKX0sYy5zZXRVc2VybmFtZUNvb2tpZT1mdW5jdGlvbih0KXtpKHMsdCl9LGMucmVtb3ZlVXNlcm5hbWVDb29raWU9ZnVuY3Rpb24oKXtuKHMpfSxjLmlzQXV0b1B1c2hFbmFibGVkPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDAhPT10JiYidHJ1ZSI9PT1yLmNvb2tpZShvKHQpKX0sYy5zZXRBdXRvUHVzaENvb2tpZT1mdW5jdGlvbih0KXt2b2lkIDAhPT10JiZpKG8odCksITApfSxjLnJlbW92ZUF1dG9QdXNoQ29va2llPWZ1bmN0aW9uKHQpe3ZvaWQgMCE9PXQmJm4obyh0KSl9LGN9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpO2k9ZnVuY3Rpb24oKXt2YXIgdD17fTtyZXR1cm4gdC5nZXRTdHJpbmdIYXNoPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT01MzgxLG49dC5sZW5ndGg7bjspZT0zMyplXnQuY2hhckNvZGVBdCgtLW4pO3JldHVybiBlPj4+MH0sdH0uY2FsbChlLG4sZSx0KSwhKHZvaWQgMCE9PWkmJih0LmV4cG9ydHM9aSkpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbyxyOy8qIQoJICogalF1ZXJ5IENvb2tpZSBQbHVnaW4gdjEuNC4xCgkgKiBodHRwczovL2dpdGh1Yi5jb20vY2FyaGFydGwvanF1ZXJ5LWNvb2tpZQoJICoKCSAqIENvcHlyaWdodCAyMDEzIEtsYXVzIEhhcnRsCgkgKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UKCSAqLwohZnVuY3Rpb24ocyl7bz1bbig2KV0saT1zLHI9ImZ1bmN0aW9uIj09dHlwZW9mIGk/aS5hcHBseShlLG8pOmksISh2b2lkIDAhPT1yJiYodC5leHBvcnRzPXIpKX0oZnVuY3Rpb24odCl7ZnVuY3Rpb24gZSh0KXtyZXR1cm4gYS5yYXc/dDplbmNvZGVVUklDb21wb25lbnQodCl9ZnVuY3Rpb24gbih0KXtyZXR1cm4gYS5yYXc/dDpkZWNvZGVVUklDb21wb25lbnQodCl9ZnVuY3Rpb24gaSh0KXtyZXR1cm4gZShhLmpzb24/SlNPTi5zdHJpbmdpZnkodCk6U3RyaW5nKHQpKX1mdW5jdGlvbiBvKHQpezA9PT10LmluZGV4T2YoJyInKSYmKHQ9dC5zbGljZSgxLC0xKS5yZXBsYWNlKC9cXCIvZywnIicpLnJlcGxhY2UoL1xcXFwvZywiXFwiKSk7dHJ5e3JldHVybiB0PWRlY29kZVVSSUNvbXBvbmVudCh0LnJlcGxhY2UocywiICIpKSxhLmpzb24/SlNPTi5wYXJzZSh0KTp0fWNhdGNoKGUpe319ZnVuY3Rpb24gcihlLG4pe3ZhciBpPWEucmF3P2U6byhlKTtyZXR1cm4gdC5pc0Z1bmN0aW9uKG4pP24oaSk6aX12YXIgcz0vXCsvZyxhPXQuY29va2llPWZ1bmN0aW9uKG8scyxsKXtpZih2b2lkIDAhPT1zJiYhdC5pc0Z1bmN0aW9uKHMpKXtpZihsPXQuZXh0ZW5kKHt9LGEuZGVmYXVsdHMsbCksIm51bWJlciI9PXR5cGVvZiBsLmV4cGlyZXMpe3ZhciBjPWwuZXhwaXJlcyx1PWwuZXhwaXJlcz1uZXcgRGF0ZTt1LnNldFRpbWUoK3UrODY0ZTUqYyl9cmV0dXJuIGRvY3VtZW50LmNvb2tpZT1bZShvKSwiPSIsaShzKSxsLmV4cGlyZXM/IjsgZXhwaXJlcz0iK2wuZXhwaXJlcy50b1VUQ1N0cmluZygpOiIiLGwucGF0aD8iOyBwYXRoPSIrbC5wYXRoOiIiLGwuZG9tYWluPyI7IGRvbWFpbj0iK2wuZG9tYWluOiIiLGwuc2VjdXJlPyI7IHNlY3VyZSI6IiJdLmpvaW4oIiIpfWZvcih2YXIgcD1vP3ZvaWQgMDp7fSxoPWRvY3VtZW50LmNvb2tpZT9kb2N1bWVudC5jb29raWUuc3BsaXQoIjsgIik6W10sZD0wLGY9aC5sZW5ndGg7ZDxmO2QrKyl7dmFyIG09aFtkXS5zcGxpdCgiPSIpLGc9bihtLnNoaWZ0KCkpLHY9bS5qb2luKCI9Iik7aWYobyYmbz09PWcpe3A9cih2LHMpO2JyZWFrfW98fHZvaWQgMD09PSh2PXIodikpfHwocFtnXT12KX1yZXR1cm4gcH07YS5kZWZhdWx0cz17fSx0LnJlbW92ZUNvb2tpZT1mdW5jdGlvbihlLG4pe3JldHVybiB2b2lkIDAhPT10LmNvb2tpZShlKSYmKHQuY29va2llKGUsIiIsdC5leHRlbmQoe30sbix7ZXhwaXJlczotMX0pKSwhdC5jb29raWUoZSkpfX0pfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEwMSldLG89ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll87cmV0dXJuIHQuRm9ybS5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS10b3RwIixhdXRvU2F2ZTohMCxub0NhbmNlbEJ1dHRvbjohMCxzYXZlOm4ucGFydGlhbCh0LmxvYywibWZhLmNoYWxsZW5nZS52ZXJpZnkiLCJsb2dpbiIpLHNjcm9sbE9uRXJyb3I6ITEsbGF5b3V0OiJvLWZvcm0tdGhlbWUiLGF0dHJpYnV0ZXM6eyJkYXRhLXNlIjoiZmFjdG9yLXRvdHAifSxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dmFyIG49dGhpcy5tb2RlbC5nZXQoImZhY3RvckxhYmVsIiksaT0iUlNBIj09PXRoaXMubW9kZWwuZ2V0KCJwcm92aWRlciIpfHwiREVMX09BVEgiPT09dGhpcy5tb2RlbC5nZXQoInByb3ZpZGVyIik7dGhpcy50aXRsZT1uLHRoaXMuc3VidGl0bGU9dC5sb2MoIm1mYS5jaGFsbGVuZ2UudGl0bGUiLCJsb2dpbiIsW25dKSx0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0LmxvYygibWZhLmNoYWxsZW5nZS5lbnRlckNvZGUucGxhY2Vob2xkZXIiLCJsb2dpbiIpLGNsYXNzTmFtZToiby1mb3JtLWZpZWxkc2V0IG8tZm9ybS1sYWJlbC10b3AgYXV0aC1wYXNzY29kZSIsbmFtZToiYW5zd2VyIixpbnB1dDplLHR5cGU6aT8icGFzc3dvcmQiOiJ0ZXh0In0pLHRoaXMub3B0aW9ucy5hcHBTdGF0ZS5nZXQoImFsbG93UmVtZW1iZXJEZXZpY2UiKSYmdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLGNsYXNzTmFtZToibWFyZ2luLWJ0bS0wIixuYW1lOiJyZW1lbWJlckRldmljZSIsdHlwZToiY2hlY2tib3gifSl9fSl9LmFwcGx5KGUsaSksISh2b2lkIDAhPT1vJiYodC5leHBvcnRzPW8pKX0sZnVuY3Rpb24odCxlLG4pe3ZhciBpLG87aT1bbigzOCksbigxMDEpXSxvPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fO3JldHVybiB0LkZvcm0uZXh0ZW5kKHtjbGFzc05hbWU6Im1mYS12ZXJpZnkteXViaWtleSIsYXV0b1NhdmU6ITAsbm9DYW5jZWxCdXR0b246ITAsc2F2ZTpuLnBhcnRpYWwodC5sb2MsIm1mYS5jaGFsbGVuZ2UudmVyaWZ5IiwibG9naW4iKSxzY3JvbGxPbkVycm9yOiExLGxheW91dDoiby1mb3JtLXRoZW1lIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImZhY3Rvci15dWJpa2V5In0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciBuPXRoaXMubW9kZWwuZ2V0KCJmYWN0b3JMYWJlbCIpO3RoaXMudGl0bGU9bix0aGlzLnN1YnRpdGxlPXQubG9jKCJmYWN0b3IudG90cEhhcmQueXViaWtleS5kZXNjcmlwdGlvbiIsImxvZ2luIiksdGhpcy5hZGRJbnB1dCh7bGFiZWw6ITEsImxhYmVsLXRvcCI6ITAsY2xhc3NOYW1lOiJvLWZvcm0tZmllbGRzZXQgby1mb3JtLWxhYmVsLXRvcCBhdXRoLXBhc3Njb2RlIixuYW1lOiJhbnN3ZXIiLGlucHV0OmUsdHlwZToicGFzc3dvcmQifSksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiYWxsb3dSZW1lbWJlckRldmljZSIpJiZ0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxjbGFzc05hbWU6Im1hcmdpbi1idG0tMCIscGxhY2Vob2xkZXI6dGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgicmVtZW1iZXJEZXZpY2VMYWJlbCIpLG5hbWU6InJlbWVtYmVyRGV2aWNlIix0eXBlOiJjaGVja2JveCJ9KX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDkpLG4oMTAxKV0sbz1mdW5jdGlvbih0LGUsbil7ZnVuY3Rpb24gaSh0KXtyZXR1cm4iY2FsbCI9PT10fXZhciBvPXQuSGFuZGxlYmFycy5jb21waWxlKCIoe3twaG9uZU51bWJlcn19KSIpLHI9dC5fLHM9M2U0O3JldHVybiB0LkZvcm0uZXh0ZW5kKHtjbGFzc05hbWU6Im1mYS12ZXJpZnktc21zLWNhbGwiLGF1dG9TYXZlOiEwLG5vQ2FuY2VsQnV0dG9uOiEwLHNhdmU6ci5wYXJ0aWFsKHQubG9jLCJtZmEuY2hhbGxlbmdlLnZlcmlmeSIsImxvZ2luIiksc2Nyb2xsT25FcnJvcjohMSxsYXlvdXQ6Im8tZm9ybS10aGVtZSIsZGlzYWJsZVN1Ym1pdEJ1dHRvbjpmdW5jdGlvbigpe3JldHVybiB0aGlzLm1vZGVsLmFwcFN0YXRlLmdldCgiaXNNZmFDaGFsbGVuZ2UiKX0saW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciBhPXRoaXM7dGhpcy50aXRsZT10aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKTt2YXIgbD10aGlzLm1vZGVsLmdldCgiZmFjdG9yVHlwZSIpLGM9aShsKTt0aGlzLiRlbC5hdHRyKCJkYXRhLXNlIiwiZmFjdG9yLSIrbCk7dmFyIHU9Yz8ibWFrZS1jYWxsIjoic21zLXNlbmQtY29kZSIscD1jPyJjYWxsLXJlcXVlc3QtYnV0dG9uIjoic21zLXJlcXVlc3QtYnV0dG9uIixoPXQubG9jKGM/Im1mYS5jYWxsIjoibWZhLnNlbmRDb2RlIiwibG9naW4iKSxkPXQubG9jKGM/Im1mYS5yZWRpYWwiOiJtZmEucmVzZW5kQ29kZSIsImxvZ2luIiksZj10LmxvYyhjPyJtZmEuY2FsbGluZyI6Im1mYS5zZW50IiwibG9naW4iKTt0aGlzLnN1YnRpdGxlPW8oe3Bob25lTnVtYmVyOnRoaXMubW9kZWwuZ2V0KCJwaG9uZU51bWJlciIpfSksdGhpcy5saXN0ZW5Ubyh0aGlzLm1vZGVsLCJlcnJvciIsZnVuY3Rpb24oKXt0aGlzLmNsZWFyRXJyb3JzKCl9KSx0aGlzLmFkZCh0LmNyZWF0ZUJ1dHRvbih7YXR0cmlidXRlczp7ImRhdGEtc2UiOnV9LGNsYXNzTmFtZToiYnV0dG9uICIrcCx0aXRsZTpoLGNsaWNrOmZ1bmN0aW9uKCl7YS5jbGVhckVycm9ycygpLHRoaXMubW9kZWwuc2V0KCJhbnN3ZXIiLCIiKSx0aGlzLm1vZGVsLnNhdmUoKS50aGVuKHIuYmluZChmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMudGl0bGU9Zix0aGlzLmRpc2FibGUoKSx0aGlzLnJlbmRlcigpLGEuZ2V0SW5wdXRzKCkuZmlyc3QoKS5yZW5kZXIoKS5mb2N1cygpLGUuZGVsYXkocyl9LHRoaXMpKS50aGVuKHIuYmluZChmdW5jdGlvbigpe3RoaXMub3B0aW9ucy50aXRsZT1kLHRoaXMuZW5hYmxlKCksdGhpcy5yZW5kZXIoKX0sdGhpcykpfX0pKSx0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0LmxvYygibWZhLmNoYWxsZW5nZS5lbnRlckNvZGUucGxhY2Vob2xkZXIiLCJsb2dpbiIpLGNsYXNzTmFtZToiby1mb3JtLWZpZWxkc2V0IG8tZm9ybS1sYWJlbC10b3AgYXV0aC1wYXNzY29kZSIsbmFtZToiYW5zd2VyIixpbnB1dDpuLHR5cGU6InRleHQifSksdGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgiYWxsb3dSZW1lbWJlckRldmljZSIpJiZ0aGlzLmFkZElucHV0KHtsYWJlbDohMSwibGFiZWwtdG9wIjohMCxwbGFjZWhvbGRlcjp0aGlzLm9wdGlvbnMuYXBwU3RhdGUuZ2V0KCJyZW1lbWJlckRldmljZUxhYmVsIiksY2xhc3NOYW1lOiJtYXJnaW4tYnRtLTAiLG5hbWU6InJlbWVtYmVyRGV2aWNlIix0eXBlOiJjaGVja2JveCJ9KX19KX0uYXBwbHkoZSxpKSwhKHZvaWQgMCE9PW8mJih0LmV4cG9ydHM9bykpfSxmdW5jdGlvbih0LGUsbil7dmFyIGksbztpPVtuKDM4KSxuKDEyNyldLG89ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll8saT10LkhhbmRsZWJhcnMuY29tcGlsZSgie3tmYWN0b3JOYW1lfX0gKHt7e2RldmljZU5hbWV9fX0pIik7cmV0dXJuIHQuRm9ybS5leHRlbmQoe2NsYXNzTmFtZToibWZhLXZlcmlmeS1wdXNoIixhdXRvU2F2ZTohMCxub0NhbmNlbEJ1dHRvbjohMCxzYXZlOm4ucGFydGlhbCh0LmxvYywib2t0YXZlcmlmeS5zZW5kIiwibG9naW4iKSxzY3JvbGxPbkVycm9yOiExLGxheW91dDoiby1mb3JtLXRoZW1lIixhdHRyaWJ1dGVzOnsiZGF0YS1zZSI6ImZhY3Rvci1wdXNoIn0sZXZlbnRzOntzdWJtaXQ6InN1Ym1pdCJ9LGluaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmVuYWJsZWQ9ITAsdGhpcy5saXN0ZW5Ubyh0aGlzLm9wdGlvbnMuYXBwU3RhdGUsImNoYW5nZTppc01mYVJlamVjdGVkQnlVc2VyIixmdW5jdGlvbihlLG4pe3RoaXMuc2V0U3VibWl0U3RhdGUobiksbiYmdGhpcy5zaG93RXJyb3IodC5sb2MoIm9rdGF2ZXJpZnkucmVqZWN0ZWQiLCJsb2dpbiIpKX0pLHRoaXMubGlzdGVuVG8odGhpcy5vcHRpb25zLmFwcFN0YXRlLCJjaGFuZ2U6aXNNZmFUaW1lb3V0IixmdW5jdGlvbihlLG4pe3RoaXMuc2V0U3VibWl0U3RhdGUobiksbiYmdGhpcy5zaG93RXJyb3IodC5sb2MoIm9rdGF2ZXJpZnkudGltZW91dCIsImxvZ2luIikpfSksdGhpcy5saXN0ZW5Ubyh0aGlzLm9wdGlvbnMuYXBwU3RhdGUsImNoYW5nZTppc01mYVJlcXVpcmVkIixmdW5jdGlvbih0LGUpe2UmJnRoaXMuY2xlYXJFcnJvcnMoKX0pLHRoaXMudGl0bGU9aSh7ZmFjdG9yTmFtZTp0aGlzLm1vZGVsLmdldCgiZmFjdG9yTGFiZWwiKSxkZXZpY2VOYW1lOnRoaXMubW9kZWwuZ2V0KCJkZXZpY2VOYW1lIil9KX0sc2V0U3VibWl0U3RhdGU6ZnVuY3Rpb24oZSl7dmFyIG49dGhpcy4kZWwuZmluZCgiLmJ1dHRvbiIpO3RoaXMuZW5hYmxlZD1lLGU/KG4ucmVtb3ZlQ2xhc3MoImxpbmstYnV0dG9uLWRpc2FibGVkIiksbi5wcm9wKCJ2YWx1ZSIsdC5sb2MoIm9rdGF2ZXJpZnkuc2VuZCIsImxvZ2luIikpKToobi5hZGRDbGFzcygibGluay1idXR0b24tZGlzYWJsZWQiKSxuLnByb3AoInZhbHVlIix0LmxvYygib2t0YXZlcmlmeS5zZW50IiwibG9naW4iKSkpfSxzdWJtaXQ6ZnVuY3Rpb24odCl7dm9pZCAwIT09dCYmdC5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuZW5hYmxlZCYmKHRoaXMuc2V0U3VibWl0U3RhdGUoITEpLHRoaXMuZG9TYXZlKCkpfSxwb3N0UmVuZGVyOmZ1bmN0aW9uKCl7dGhpcy5zZXR0aW5ncy5nZXQoImZlYXR1cmVzLmF1dG9QdXNoIikmJmUuaXNBdXRvUHVzaEVuYWJsZWQodGhpcy5vcHRpb25zLmFwcFN0YXRlLmdldCgidXNlcklkIikpJiYodGhpcy5tb2RlbC5zZXQoImF1dG9QdXNoIiwhMCksbi5kZWZlcihuLmJpbmQodGhpcy5zdWJtaXQsdGhpcykpKX0sZG9TYXZlOmZ1bmN0aW9uKCl7dGhpcy5jbGVhckVycm9ycygpLHRoaXMubW9kZWwuaXNWYWxpZCgpJiYodGhpcy5saXN0ZW5Ub09uY2UodGhpcy5tb2RlbCwiZXJyb3IiLHRoaXMuc2V0U3VibWl0U3RhdGUsITApLHRoaXMudHJpZ2dlcigic2F2ZSIsdGhpcy5tb2RlbCkpfSxzaG93RXJyb3I6ZnVuY3Rpbw==", "base64"));
  res.write(new Buffer("", "base64"));
  res.write(new Buffer("", "base64"));
  res.end();

  return __filename;
};
